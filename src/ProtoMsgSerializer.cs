using msg;
using ProtoBuf;
using ProtoBuf.Meta;
using System;
using System.Collections.Generic;

public sealed class ProtoMsgSerializer : TypeModel
{
	private static readonly Dictionary<Type, int> knownTypes = new Dictionary<Type, int>(334);

	private static void Write(AdditionData additionData, ProtoWriter protoWriter)
	{
		if (additionData.GetType() != typeof(AdditionData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(AdditionData), additionData.GetType());
		}
		List<KVStruct> expr_2D = additionData.fighterTechData;
		if (expr_2D != null)
		{
			List<KVStruct> list = expr_2D;
			foreach (KVStruct arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_91 = additionData.fighterArmyData;
		if (expr_91 != null)
		{
			List<KVStruct> list = expr_91;
			foreach (KVStruct arg_B6_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_B6_0, protoWriter);
				ProtoMsgSerializer.Write(arg_B6_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(additionData, protoWriter);
	}

	private static AdditionData Read(AdditionData additionData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (additionData == null)
					{
						AdditionData expr_D0 = new AdditionData();
						ProtoReader.NoteObject(expr_D0, protoReader);
						additionData = expr_D0;
					}
					protoReader.AppendExtensionData(additionData);
				}
				else
				{
					if (additionData == null)
					{
						AdditionData expr_79 = new AdditionData();
						ProtoReader.NoteObject(expr_79, protoReader);
						additionData = expr_79;
					}
					List<KVStruct> list = additionData.fighterArmyData;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_AF_0 = list;
						KVStruct arg_A3_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_AF_1 = ProtoMsgSerializer.Read(arg_A3_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_AF_0.Add(arg_AF_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (additionData == null)
				{
					AdditionData expr_19 = new AdditionData();
					ProtoReader.NoteObject(expr_19, protoReader);
					additionData = expr_19;
				}
				List<KVStruct> list = additionData.fighterTechData;
				if (list == null)
				{
					list = new List<KVStruct>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<KVStruct> arg_4F_0 = list;
					KVStruct arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					KVStruct arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (additionData == null)
		{
			AdditionData expr_F9 = new AdditionData();
			ProtoReader.NoteObject(expr_F9, protoReader);
			additionData = expr_F9;
		}
		return additionData;
	}

	private static void Write(ChatMessage chatMessage, ProtoWriter writer)
	{
		if (chatMessage.GetType() != typeof(ChatMessage))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(ChatMessage), chatMessage.GetType());
		}
		long expr_2D = chatMessage.atPlayerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = chatMessage.atPlayerName;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		int expr_83 = chatMessage.channel;
		if (expr_83 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_83, writer);
		}
		string expr_A0 = chatMessage.message;
		if (expr_A0 != null)
		{
			if (!(expr_A0 == ""))
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, writer);
				ProtoWriter.WriteString(expr_A0, writer);
			}
		}
		long expr_D0 = chatMessage.senderId;
		if (expr_D0 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_D0, writer);
		}
		string expr_F6 = chatMessage.senderName;
		if (expr_F6 != null)
		{
			if (!(expr_F6 == ""))
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, writer);
				ProtoWriter.WriteString(expr_F6, writer);
			}
		}
		int expr_126 = chatMessage.msgType;
		if (expr_126 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_126, writer);
		}
		ProtoWriter.AppendExtensionData(chatMessage, writer);
	}

	private static ChatMessage Read(ChatMessage chatMessage, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (chatMessage == null)
										{
											ChatMessage expr_169 = new ChatMessage();
											ProtoReader.NoteObject(expr_169, protoReader);
											chatMessage = expr_169;
										}
										protoReader.AppendExtensionData(chatMessage);
									}
									else
									{
										if (chatMessage == null)
										{
											ChatMessage expr_142 = new ChatMessage();
											ProtoReader.NoteObject(expr_142, protoReader);
											chatMessage = expr_142;
										}
										int num2 = protoReader.ReadInt32();
										chatMessage.msgType = num2;
									}
								}
								else
								{
									if (chatMessage == null)
									{
										ChatMessage expr_10F = new ChatMessage();
										ProtoReader.NoteObject(expr_10F, protoReader);
										chatMessage = expr_10F;
									}
									string text = protoReader.ReadString();
									if (text != null)
									{
										chatMessage.senderName = text;
									}
								}
							}
							else
							{
								if (chatMessage == null)
								{
									ChatMessage expr_DF = new ChatMessage();
									ProtoReader.NoteObject(expr_DF, protoReader);
									chatMessage = expr_DF;
								}
								long num3 = protoReader.ReadInt64();
								chatMessage.senderId = num3;
							}
						}
						else
						{
							if (chatMessage == null)
							{
								ChatMessage expr_AC = new ChatMessage();
								ProtoReader.NoteObject(expr_AC, protoReader);
								chatMessage = expr_AC;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								chatMessage.message = text;
							}
						}
					}
					else
					{
						if (chatMessage == null)
						{
							ChatMessage expr_7C = new ChatMessage();
							ProtoReader.NoteObject(expr_7C, protoReader);
							chatMessage = expr_7C;
						}
						int num2 = protoReader.ReadInt32();
						chatMessage.channel = num2;
					}
				}
				else
				{
					if (chatMessage == null)
					{
						ChatMessage expr_49 = new ChatMessage();
						ProtoReader.NoteObject(expr_49, protoReader);
						chatMessage = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						chatMessage.atPlayerName = text;
					}
				}
			}
			else
			{
				if (chatMessage == null)
				{
					ChatMessage expr_19 = new ChatMessage();
					ProtoReader.NoteObject(expr_19, protoReader);
					chatMessage = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				chatMessage.atPlayerId = num3;
			}
		}
		if (chatMessage == null)
		{
			ChatMessage expr_192 = new ChatMessage();
			ProtoReader.NoteObject(expr_192, protoReader);
			chatMessage = expr_192;
		}
		return chatMessage;
	}

	private static void Write(ContainerData containerData, ProtoWriter protoWriter)
	{
		if (containerData.GetType() != typeof(ContainerData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(ContainerData), containerData.GetType());
		}
		long expr_2D = containerData.containerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		long expr_53 = containerData.id;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_53, protoWriter);
		}
		int expr_79 = containerData.index;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_79, protoWriter);
		}
		int expr_96 = containerData.soldierLV;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_96, protoWriter);
		}
		Position expr_B3 = containerData.containPos;
		if (expr_B3 != null)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_B3, protoWriter);
			ProtoMsgSerializer.Write(expr_B3, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		int expr_DF = containerData.soldierSkillLV;
		if (expr_DF != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_DF, protoWriter);
		}
		int expr_FC = containerData.soldierType;
		if (expr_FC != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_FC, protoWriter);
		}
		int expr_119 = containerData.soldieStar;
		if (expr_119 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_119, protoWriter);
		}
		ProtoWriter.AppendExtensionData(containerData, protoWriter);
	}

	private static ContainerData Read(ContainerData containerData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (containerData == null)
											{
												ContainerData expr_1AA = new ContainerData();
												ProtoReader.NoteObject(expr_1AA, protoReader);
												containerData = expr_1AA;
											}
											protoReader.AppendExtensionData(containerData);
										}
										else
										{
											if (containerData == null)
											{
												ContainerData expr_183 = new ContainerData();
												ProtoReader.NoteObject(expr_183, protoReader);
												containerData = expr_183;
											}
											int num2 = protoReader.ReadInt32();
											containerData.soldieStar = num2;
										}
									}
									else
									{
										if (containerData == null)
										{
											ContainerData expr_153 = new ContainerData();
											ProtoReader.NoteObject(expr_153, protoReader);
											containerData = expr_153;
										}
										int num2 = protoReader.ReadInt32();
										containerData.soldierType = num2;
									}
								}
								else
								{
									if (containerData == null)
									{
										ContainerData expr_123 = new ContainerData();
										ProtoReader.NoteObject(expr_123, protoReader);
										containerData = expr_123;
									}
									int num2 = protoReader.ReadInt32();
									containerData.soldierSkillLV = num2;
								}
							}
							else
							{
								if (containerData == null)
								{
									ContainerData expr_D9 = new ContainerData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									containerData = expr_D9;
								}
								Position arg_F0_0 = containerData.containPos;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								Position arg_FC_0 = ProtoMsgSerializer.Read(arg_F0_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								Position position = arg_FC_0;
								if (position != null)
								{
									containerData.containPos = position;
								}
							}
						}
						else
						{
							if (containerData == null)
							{
								ContainerData expr_A9 = new ContainerData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								containerData = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							containerData.soldierLV = num2;
						}
					}
					else
					{
						if (containerData == null)
						{
							ContainerData expr_79 = new ContainerData();
							ProtoReader.NoteObject(expr_79, protoReader);
							containerData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						containerData.index = num2;
					}
				}
				else
				{
					if (containerData == null)
					{
						ContainerData expr_49 = new ContainerData();
						ProtoReader.NoteObject(expr_49, protoReader);
						containerData = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					containerData.id = num3;
				}
			}
			else
			{
				if (containerData == null)
				{
					ContainerData expr_19 = new ContainerData();
					ProtoReader.NoteObject(expr_19, protoReader);
					containerData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				containerData.containerId = num3;
			}
		}
		if (containerData == null)
		{
			ContainerData expr_1D3 = new ContainerData();
			ProtoReader.NoteObject(expr_1D3, protoReader);
			containerData = expr_1D3;
		}
		return containerData;
	}

	private static void Write(CSAddResore cSAddResore, ProtoWriter writer)
	{
		if (cSAddResore.GetType() != typeof(CSAddResore))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAddResore), cSAddResore.GetType());
		}
		int expr_2D = cSAddResore.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAddResore, writer);
	}

	private static CSAddResore Read(CSAddResore cSAddResore, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAddResore == null)
				{
					CSAddResore expr_40 = new CSAddResore();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAddResore = expr_40;
				}
				protoReader.AppendExtensionData(cSAddResore);
			}
			else
			{
				if (cSAddResore == null)
				{
					CSAddResore expr_19 = new CSAddResore();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAddResore = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSAddResore.id = id;
			}
		}
		if (cSAddResore == null)
		{
			CSAddResore expr_69 = new CSAddResore();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAddResore = expr_69;
		}
		return cSAddResore;
	}

	private static void Write(CSAgreeLegionApply cSAgreeLegionApply, ProtoWriter writer)
	{
		if (cSAgreeLegionApply.GetType() != typeof(CSAgreeLegionApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAgreeLegionApply), cSAgreeLegionApply.GetType());
		}
		long expr_2D = cSAgreeLegionApply.applyId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAgreeLegionApply, writer);
	}

	private static CSAgreeLegionApply Read(CSAgreeLegionApply cSAgreeLegionApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAgreeLegionApply == null)
				{
					CSAgreeLegionApply expr_40 = new CSAgreeLegionApply();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAgreeLegionApply = expr_40;
				}
				protoReader.AppendExtensionData(cSAgreeLegionApply);
			}
			else
			{
				if (cSAgreeLegionApply == null)
				{
					CSAgreeLegionApply expr_19 = new CSAgreeLegionApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAgreeLegionApply = expr_19;
				}
				long applyId = protoReader.ReadInt64();
				cSAgreeLegionApply.applyId = applyId;
			}
		}
		if (cSAgreeLegionApply == null)
		{
			CSAgreeLegionApply expr_69 = new CSAgreeLegionApply();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAgreeLegionApply = expr_69;
		}
		return cSAgreeLegionApply;
	}

	private static void Write(CSAideIntensify cSAideIntensify, ProtoWriter writer)
	{
		if (cSAideIntensify.GetType() != typeof(CSAideIntensify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAideIntensify), cSAideIntensify.GetType());
		}
		int expr_2D = cSAideIntensify.aideID;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAideIntensify, writer);
	}

	private static CSAideIntensify Read(CSAideIntensify cSAideIntensify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAideIntensify == null)
				{
					CSAideIntensify expr_40 = new CSAideIntensify();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAideIntensify = expr_40;
				}
				protoReader.AppendExtensionData(cSAideIntensify);
			}
			else
			{
				if (cSAideIntensify == null)
				{
					CSAideIntensify expr_19 = new CSAideIntensify();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAideIntensify = expr_19;
				}
				int aideID = protoReader.ReadInt32();
				cSAideIntensify.aideID = aideID;
			}
		}
		if (cSAideIntensify == null)
		{
			CSAideIntensify expr_69 = new CSAideIntensify();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAideIntensify = expr_69;
		}
		return cSAideIntensify;
	}

	private static void Write(CSAideList cSAideList, ProtoWriter writer)
	{
		if (cSAideList.GetType() != typeof(CSAideList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAideList), cSAideList.GetType());
		}
		int expr_2D = cSAideList.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAideList, writer);
	}

	private static CSAideList Read(CSAideList cSAideList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAideList == null)
				{
					CSAideList expr_40 = new CSAideList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAideList = expr_40;
				}
				protoReader.AppendExtensionData(cSAideList);
			}
			else
			{
				if (cSAideList == null)
				{
					CSAideList expr_19 = new CSAideList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAideList = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSAideList.id = id;
			}
		}
		if (cSAideList == null)
		{
			CSAideList expr_69 = new CSAideList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAideList = expr_69;
		}
		return cSAideList;
	}

	private static void Write(CSAideMix cSAideMix, ProtoWriter writer)
	{
		if (cSAideMix.GetType() != typeof(CSAideMix))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAideMix), cSAideMix.GetType());
		}
		int expr_2D = cSAideMix.aideId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAideMix, writer);
	}

	private static CSAideMix Read(CSAideMix cSAideMix, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAideMix == null)
				{
					CSAideMix expr_40 = new CSAideMix();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAideMix = expr_40;
				}
				protoReader.AppendExtensionData(cSAideMix);
			}
			else
			{
				if (cSAideMix == null)
				{
					CSAideMix expr_19 = new CSAideMix();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAideMix = expr_19;
				}
				int aideId = protoReader.ReadInt32();
				cSAideMix.aideId = aideId;
			}
		}
		if (cSAideMix == null)
		{
			CSAideMix expr_69 = new CSAideMix();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAideMix = expr_69;
		}
		return cSAideMix;
	}

	private static void Write(CSAideMixCompleteUseMoney cSAideMixCompleteUseMoney, ProtoWriter writer)
	{
		if (cSAideMixCompleteUseMoney.GetType() != typeof(CSAideMixCompleteUseMoney))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAideMixCompleteUseMoney), cSAideMixCompleteUseMoney.GetType());
		}
		int expr_2D = cSAideMixCompleteUseMoney.money;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAideMixCompleteUseMoney, writer);
	}

	private static CSAideMixCompleteUseMoney Read(CSAideMixCompleteUseMoney cSAideMixCompleteUseMoney, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAideMixCompleteUseMoney == null)
				{
					CSAideMixCompleteUseMoney expr_40 = new CSAideMixCompleteUseMoney();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAideMixCompleteUseMoney = expr_40;
				}
				protoReader.AppendExtensionData(cSAideMixCompleteUseMoney);
			}
			else
			{
				if (cSAideMixCompleteUseMoney == null)
				{
					CSAideMixCompleteUseMoney expr_19 = new CSAideMixCompleteUseMoney();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAideMixCompleteUseMoney = expr_19;
				}
				int money = protoReader.ReadInt32();
				cSAideMixCompleteUseMoney.money = money;
			}
		}
		if (cSAideMixCompleteUseMoney == null)
		{
			CSAideMixCompleteUseMoney expr_69 = new CSAideMixCompleteUseMoney();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAideMixCompleteUseMoney = expr_69;
		}
		return cSAideMixCompleteUseMoney;
	}

	private static void Write(CSAideRecycle cSAideRecycle, ProtoWriter writer)
	{
		if (cSAideRecycle.GetType() != typeof(CSAideRecycle))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAideRecycle), cSAideRecycle.GetType());
		}
		int expr_2D = cSAideRecycle.aideId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAideRecycle, writer);
	}

	private static CSAideRecycle Read(CSAideRecycle cSAideRecycle, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAideRecycle == null)
				{
					CSAideRecycle expr_40 = new CSAideRecycle();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAideRecycle = expr_40;
				}
				protoReader.AppendExtensionData(cSAideRecycle);
			}
			else
			{
				if (cSAideRecycle == null)
				{
					CSAideRecycle expr_19 = new CSAideRecycle();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAideRecycle = expr_19;
				}
				int aideId = protoReader.ReadInt32();
				cSAideRecycle.aideId = aideId;
			}
		}
		if (cSAideRecycle == null)
		{
			CSAideRecycle expr_69 = new CSAideRecycle();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAideRecycle = expr_69;
		}
		return cSAideRecycle;
	}

	private static void Write(CSAideSend cSAideSend, ProtoWriter writer)
	{
		if (cSAideSend.GetType() != typeof(CSAideSend))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSAideSend), cSAideSend.GetType());
		}
		int expr_2D = cSAideSend.aideId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSAideSend, writer);
	}

	private static CSAideSend Read(CSAideSend cSAideSend, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSAideSend == null)
				{
					CSAideSend expr_40 = new CSAideSend();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSAideSend = expr_40;
				}
				protoReader.AppendExtensionData(cSAideSend);
			}
			else
			{
				if (cSAideSend == null)
				{
					CSAideSend expr_19 = new CSAideSend();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSAideSend = expr_19;
				}
				int aideId = protoReader.ReadInt32();
				cSAideSend.aideId = aideId;
			}
		}
		if (cSAideSend == null)
		{
			CSAideSend expr_69 = new CSAideSend();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSAideSend = expr_69;
		}
		return cSAideSend;
	}

	private static void Write(CSArmyConfigure cSArmyConfigure, ProtoWriter writer)
	{
		if (cSArmyConfigure.GetType() != typeof(CSArmyConfigure))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyConfigure), cSArmyConfigure.GetType());
		}
		long expr_2D = cSArmyConfigure.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSArmyConfigure.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSArmyConfigure.num;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyConfigure, writer);
	}

	private static CSArmyConfigure Read(CSArmyConfigure cSArmyConfigure, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 5)
					{
						if (cSArmyConfigure == null)
						{
							CSArmyConfigure expr_A0 = new CSArmyConfigure();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSArmyConfigure = expr_A0;
						}
						protoReader.AppendExtensionData(cSArmyConfigure);
					}
					else
					{
						if (cSArmyConfigure == null)
						{
							CSArmyConfigure expr_79 = new CSArmyConfigure();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSArmyConfigure = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSArmyConfigure.num = num2;
					}
				}
				else
				{
					if (cSArmyConfigure == null)
					{
						CSArmyConfigure expr_49 = new CSArmyConfigure();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSArmyConfigure = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSArmyConfigure.itemId = num2;
				}
			}
			else
			{
				if (cSArmyConfigure == null)
				{
					CSArmyConfigure expr_19 = new CSArmyConfigure();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyConfigure = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSArmyConfigure.buildingId = buildingId;
			}
		}
		if (cSArmyConfigure == null)
		{
			CSArmyConfigure expr_C9 = new CSArmyConfigure();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSArmyConfigure = expr_C9;
		}
		return cSArmyConfigure;
	}

	private static void Write(CSArmyConfigureAuto cSArmyConfigureAuto, ProtoWriter writer)
	{
		if (cSArmyConfigureAuto.GetType() != typeof(CSArmyConfigureAuto))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyConfigureAuto), cSArmyConfigureAuto.GetType());
		}
		int expr_2D = cSArmyConfigureAuto.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSArmyConfigureAuto.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		int expr_67 = cSArmyConfigureAuto.type;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyConfigureAuto, writer);
	}

	private static CSArmyConfigureAuto Read(CSArmyConfigureAuto cSArmyConfigureAuto, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSArmyConfigureAuto == null)
						{
							CSArmyConfigureAuto expr_A0 = new CSArmyConfigureAuto();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSArmyConfigureAuto = expr_A0;
						}
						protoReader.AppendExtensionData(cSArmyConfigureAuto);
					}
					else
					{
						if (cSArmyConfigureAuto == null)
						{
							CSArmyConfigureAuto expr_79 = new CSArmyConfigureAuto();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSArmyConfigureAuto = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSArmyConfigureAuto.type = num2;
					}
				}
				else
				{
					if (cSArmyConfigureAuto == null)
					{
						CSArmyConfigureAuto expr_49 = new CSArmyConfigureAuto();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSArmyConfigureAuto = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSArmyConfigureAuto.money = num2;
				}
			}
			else
			{
				if (cSArmyConfigureAuto == null)
				{
					CSArmyConfigureAuto expr_19 = new CSArmyConfigureAuto();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyConfigureAuto = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSArmyConfigureAuto.id = num2;
			}
		}
		if (cSArmyConfigureAuto == null)
		{
			CSArmyConfigureAuto expr_C9 = new CSArmyConfigureAuto();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSArmyConfigureAuto = expr_C9;
		}
		return cSArmyConfigureAuto;
	}

	private static void Write(CSArmyConfigureEnd cSArmyConfigureEnd, ProtoWriter writer)
	{
		if (cSArmyConfigureEnd.GetType() != typeof(CSArmyConfigureEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyConfigureEnd), cSArmyConfigureEnd.GetType());
		}
		long expr_2D = cSArmyConfigureEnd.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSArmyConfigureEnd.armyId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSArmyConfigureEnd.isRightNow;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyConfigureEnd, writer);
	}

	private static CSArmyConfigureEnd Read(CSArmyConfigureEnd cSArmyConfigureEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSArmyConfigureEnd == null)
						{
							CSArmyConfigureEnd expr_A0 = new CSArmyConfigureEnd();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSArmyConfigureEnd = expr_A0;
						}
						protoReader.AppendExtensionData(cSArmyConfigureEnd);
					}
					else
					{
						if (cSArmyConfigureEnd == null)
						{
							CSArmyConfigureEnd expr_79 = new CSArmyConfigureEnd();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSArmyConfigureEnd = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSArmyConfigureEnd.isRightNow = num2;
					}
				}
				else
				{
					if (cSArmyConfigureEnd == null)
					{
						CSArmyConfigureEnd expr_49 = new CSArmyConfigureEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSArmyConfigureEnd = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSArmyConfigureEnd.armyId = num2;
				}
			}
			else
			{
				if (cSArmyConfigureEnd == null)
				{
					CSArmyConfigureEnd expr_19 = new CSArmyConfigureEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyConfigureEnd = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSArmyConfigureEnd.buildingId = buildingId;
			}
		}
		if (cSArmyConfigureEnd == null)
		{
			CSArmyConfigureEnd expr_C9 = new CSArmyConfigureEnd();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSArmyConfigureEnd = expr_C9;
		}
		return cSArmyConfigureEnd;
	}

	private static void Write(CSArmyLevelUp cSArmyLevelUp, ProtoWriter writer)
	{
		if (cSArmyLevelUp.GetType() != typeof(CSArmyLevelUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyLevelUp), cSArmyLevelUp.GetType());
		}
		int expr_2D = cSArmyLevelUp.armyId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSArmyLevelUp.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyLevelUp, writer);
	}

	private static CSArmyLevelUp Read(CSArmyLevelUp cSArmyLevelUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSArmyLevelUp == null)
					{
						CSArmyLevelUp expr_70 = new CSArmyLevelUp();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSArmyLevelUp = expr_70;
					}
					protoReader.AppendExtensionData(cSArmyLevelUp);
				}
				else
				{
					if (cSArmyLevelUp == null)
					{
						CSArmyLevelUp expr_49 = new CSArmyLevelUp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSArmyLevelUp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSArmyLevelUp.money = num2;
				}
			}
			else
			{
				if (cSArmyLevelUp == null)
				{
					CSArmyLevelUp expr_19 = new CSArmyLevelUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyLevelUp = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSArmyLevelUp.armyId = num2;
			}
		}
		if (cSArmyLevelUp == null)
		{
			CSArmyLevelUp expr_99 = new CSArmyLevelUp();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSArmyLevelUp = expr_99;
		}
		return cSArmyLevelUp;
	}

	private static void Write(CSArmyLevelUpEnd cSArmyLevelUpEnd, ProtoWriter writer)
	{
		if (cSArmyLevelUpEnd.GetType() != typeof(CSArmyLevelUpEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyLevelUpEnd), cSArmyLevelUpEnd.GetType());
		}
		int expr_2D = cSArmyLevelUpEnd.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSArmyLevelUpEnd.isClear;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyLevelUpEnd, writer);
	}

	private static CSArmyLevelUpEnd Read(CSArmyLevelUpEnd cSArmyLevelUpEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (cSArmyLevelUpEnd == null)
					{
						CSArmyLevelUpEnd expr_70 = new CSArmyLevelUpEnd();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSArmyLevelUpEnd = expr_70;
					}
					protoReader.AppendExtensionData(cSArmyLevelUpEnd);
				}
				else
				{
					if (cSArmyLevelUpEnd == null)
					{
						CSArmyLevelUpEnd expr_49 = new CSArmyLevelUpEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSArmyLevelUpEnd = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSArmyLevelUpEnd.isClear = num2;
				}
			}
			else
			{
				if (cSArmyLevelUpEnd == null)
				{
					CSArmyLevelUpEnd expr_19 = new CSArmyLevelUpEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyLevelUpEnd = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSArmyLevelUpEnd.itemId = num2;
			}
		}
		if (cSArmyLevelUpEnd == null)
		{
			CSArmyLevelUpEnd expr_99 = new CSArmyLevelUpEnd();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSArmyLevelUpEnd = expr_99;
		}
		return cSArmyLevelUpEnd;
	}

	private static void Write(CSArmyList cSArmyList, ProtoWriter writer)
	{
		if (cSArmyList.GetType() != typeof(CSArmyList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyList), cSArmyList.GetType());
		}
		int expr_2D = cSArmyList.typeId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyList, writer);
	}

	private static CSArmyList Read(CSArmyList cSArmyList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSArmyList == null)
				{
					CSArmyList expr_40 = new CSArmyList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSArmyList = expr_40;
				}
				protoReader.AppendExtensionData(cSArmyList);
			}
			else
			{
				if (cSArmyList == null)
				{
					CSArmyList expr_19 = new CSArmyList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyList = expr_19;
				}
				int typeId = protoReader.ReadInt32();
				cSArmyList.typeId = typeId;
			}
		}
		if (cSArmyList == null)
		{
			CSArmyList expr_69 = new CSArmyList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSArmyList = expr_69;
		}
		return cSArmyList;
	}

	private static void Write(CSArmyStarUp cSArmyStarUp, ProtoWriter writer)
	{
		if (cSArmyStarUp.GetType() != typeof(CSArmyStarUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSArmyStarUp), cSArmyStarUp.GetType());
		}
		int expr_2D = cSArmyStarUp.armyId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSArmyStarUp.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSArmyStarUp, writer);
	}

	private static CSArmyStarUp Read(CSArmyStarUp cSArmyStarUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSArmyStarUp == null)
					{
						CSArmyStarUp expr_70 = new CSArmyStarUp();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSArmyStarUp = expr_70;
					}
					protoReader.AppendExtensionData(cSArmyStarUp);
				}
				else
				{
					if (cSArmyStarUp == null)
					{
						CSArmyStarUp expr_49 = new CSArmyStarUp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSArmyStarUp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSArmyStarUp.money = num2;
				}
			}
			else
			{
				if (cSArmyStarUp == null)
				{
					CSArmyStarUp expr_19 = new CSArmyStarUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSArmyStarUp = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSArmyStarUp.armyId = num2;
			}
		}
		if (cSArmyStarUp == null)
		{
			CSArmyStarUp expr_99 = new CSArmyStarUp();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSArmyStarUp = expr_99;
		}
		return cSArmyStarUp;
	}

	private static void Write(CSBattleEnd cSBattleEnd, ProtoWriter writer)
	{
		if (cSBattleEnd.GetType() != typeof(CSBattleEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBattleEnd), cSBattleEnd.GetType());
		}
		bool expr_2D = cSBattleEnd.win;
		if (expr_2D)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_2D, writer);
		}
		byte[] expr_4A = cSBattleEnd.video;
		if (expr_4A != null)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
			ProtoWriter.WriteBytes(expr_4A, writer);
		}
		int expr_67 = cSBattleEnd.star;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		ProtoWriter.AppendExtensionData(cSBattleEnd, writer);
	}

	private static CSBattleEnd Read(CSBattleEnd cSBattleEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSBattleEnd == null)
						{
							CSBattleEnd expr_A9 = new CSBattleEnd();
							ProtoReader.NoteObject(expr_A9, protoReader);
							cSBattleEnd = expr_A9;
						}
						protoReader.AppendExtensionData(cSBattleEnd);
					}
					else
					{
						if (cSBattleEnd == null)
						{
							CSBattleEnd expr_82 = new CSBattleEnd();
							ProtoReader.NoteObject(expr_82, protoReader);
							cSBattleEnd = expr_82;
						}
						int star = protoReader.ReadInt32();
						cSBattleEnd.star = star;
					}
				}
				else
				{
					if (cSBattleEnd == null)
					{
						CSBattleEnd expr_49 = new CSBattleEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBattleEnd = expr_49;
					}
					byte[] array = ProtoReader.AppendBytes(cSBattleEnd.video, protoReader);
					if (array != null)
					{
						cSBattleEnd.video = array;
					}
				}
			}
			else
			{
				if (cSBattleEnd == null)
				{
					CSBattleEnd expr_19 = new CSBattleEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBattleEnd = expr_19;
				}
				bool win = protoReader.ReadBoolean();
				cSBattleEnd.win = win;
			}
		}
		if (cSBattleEnd == null)
		{
			CSBattleEnd expr_D2 = new CSBattleEnd();
			ProtoReader.NoteObject(expr_D2, protoReader);
			cSBattleEnd = expr_D2;
		}
		return cSBattleEnd;
	}

	private static void Write(CSBattleReport cSBattleReport, ProtoWriter writer)
	{
		if (cSBattleReport.GetType() != typeof(CSBattleReport))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBattleReport), cSBattleReport.GetType());
		}
		long expr_2D = cSBattleReport.reportId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSBattleReport.type;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		bool expr_70 = cSBattleReport.video;
		if (expr_70)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSBattleReport, writer);
	}

	private static CSBattleReport Read(CSBattleReport cSBattleReport, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSBattleReport == null)
						{
							CSBattleReport expr_A0 = new CSBattleReport();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSBattleReport = expr_A0;
						}
						protoReader.AppendExtensionData(cSBattleReport);
					}
					else
					{
						if (cSBattleReport == null)
						{
							CSBattleReport expr_79 = new CSBattleReport();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBattleReport = expr_79;
						}
						bool video = protoReader.ReadBoolean();
						cSBattleReport.video = video;
					}
				}
				else
				{
					if (cSBattleReport == null)
					{
						CSBattleReport expr_49 = new CSBattleReport();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBattleReport = expr_49;
					}
					int type = protoReader.ReadInt32();
					cSBattleReport.type = type;
				}
			}
			else
			{
				if (cSBattleReport == null)
				{
					CSBattleReport expr_19 = new CSBattleReport();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBattleReport = expr_19;
				}
				long reportId = protoReader.ReadInt64();
				cSBattleReport.reportId = reportId;
			}
		}
		if (cSBattleReport == null)
		{
			CSBattleReport expr_C9 = new CSBattleReport();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSBattleReport = expr_C9;
		}
		return cSBattleReport;
	}

	private static void Write(CSBattleStart cSBattleStart, ProtoWriter writer)
	{
		if (cSBattleStart.GetType() != typeof(CSBattleStart))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBattleStart), cSBattleStart.GetType());
		}
		long expr_2D = cSBattleStart.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSBattleStart.from;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSBattleStart.money;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		long expr_8D = cSBattleStart.reportId;
		if (expr_8D != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_8D, writer);
		}
		int expr_B3 = cSBattleStart.npcId;
		if (expr_B3 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_B3, writer);
		}
		int expr_D0 = cSBattleStart.serverId;
		if (expr_D0 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_D0, writer);
		}
		int expr_ED = cSBattleStart.areaId;
		if (expr_ED != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_ED, writer);
		}
		ProtoWriter.AppendExtensionData(cSBattleStart, writer);
	}

	private static CSBattleStart Read(CSBattleStart cSBattleStart, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (cSBattleStart == null)
										{
											CSBattleStart expr_160 = new CSBattleStart();
											ProtoReader.NoteObject(expr_160, protoReader);
											cSBattleStart = expr_160;
										}
										protoReader.AppendExtensionData(cSBattleStart);
									}
									else
									{
										if (cSBattleStart == null)
										{
											CSBattleStart expr_139 = new CSBattleStart();
											ProtoReader.NoteObject(expr_139, protoReader);
											cSBattleStart = expr_139;
										}
										int num2 = protoReader.ReadInt32();
										cSBattleStart.areaId = num2;
									}
								}
								else
								{
									if (cSBattleStart == null)
									{
										CSBattleStart expr_109 = new CSBattleStart();
										ProtoReader.NoteObject(expr_109, protoReader);
										cSBattleStart = expr_109;
									}
									int num2 = protoReader.ReadInt32();
									cSBattleStart.serverId = num2;
								}
							}
							else
							{
								if (cSBattleStart == null)
								{
									CSBattleStart expr_D9 = new CSBattleStart();
									ProtoReader.NoteObject(expr_D9, protoReader);
									cSBattleStart = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								cSBattleStart.npcId = num2;
							}
						}
						else
						{
							if (cSBattleStart == null)
							{
								CSBattleStart expr_A9 = new CSBattleStart();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSBattleStart = expr_A9;
							}
							long num3 = protoReader.ReadInt64();
							cSBattleStart.reportId = num3;
						}
					}
					else
					{
						if (cSBattleStart == null)
						{
							CSBattleStart expr_79 = new CSBattleStart();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBattleStart = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSBattleStart.money = num2;
					}
				}
				else
				{
					if (cSBattleStart == null)
					{
						CSBattleStart expr_49 = new CSBattleStart();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBattleStart = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSBattleStart.from = num2;
				}
			}
			else
			{
				if (cSBattleStart == null)
				{
					CSBattleStart expr_19 = new CSBattleStart();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBattleStart = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				cSBattleStart.id = num3;
			}
		}
		if (cSBattleStart == null)
		{
			CSBattleStart expr_189 = new CSBattleStart();
			ProtoReader.NoteObject(expr_189, protoReader);
			cSBattleStart = expr_189;
		}
		return cSBattleStart;
	}

	private static void Write(CSBuildingBuild cSBuildingBuild, ProtoWriter writer)
	{
		if (cSBuildingBuild.GetType() != typeof(CSBuildingBuild))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuildingBuild), cSBuildingBuild.GetType());
		}
		int expr_2D = cSBuildingBuild.index;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSBuildingBuild.itemId;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		int expr_67 = cSBuildingBuild.money;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuildingBuild, writer);
	}

	private static CSBuildingBuild Read(CSBuildingBuild cSBuildingBuild, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSBuildingBuild == null)
						{
							CSBuildingBuild expr_A0 = new CSBuildingBuild();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSBuildingBuild = expr_A0;
						}
						protoReader.AppendExtensionData(cSBuildingBuild);
					}
					else
					{
						if (cSBuildingBuild == null)
						{
							CSBuildingBuild expr_79 = new CSBuildingBuild();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBuildingBuild = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSBuildingBuild.money = num2;
					}
				}
				else
				{
					if (cSBuildingBuild == null)
					{
						CSBuildingBuild expr_49 = new CSBuildingBuild();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBuildingBuild = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSBuildingBuild.itemId = num2;
				}
			}
			else
			{
				if (cSBuildingBuild == null)
				{
					CSBuildingBuild expr_19 = new CSBuildingBuild();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuildingBuild = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSBuildingBuild.index = num2;
			}
		}
		if (cSBuildingBuild == null)
		{
			CSBuildingBuild expr_C9 = new CSBuildingBuild();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSBuildingBuild = expr_C9;
		}
		return cSBuildingBuild;
	}

	private static void Write(CSBuildingEnd cSBuildingEnd, ProtoWriter writer)
	{
		if (cSBuildingEnd.GetType() != typeof(CSBuildingEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuildingEnd), cSBuildingEnd.GetType());
		}
		long expr_2D = cSBuildingEnd.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSBuildingEnd.money;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuildingEnd, writer);
	}

	private static CSBuildingEnd Read(CSBuildingEnd cSBuildingEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSBuildingEnd == null)
					{
						CSBuildingEnd expr_70 = new CSBuildingEnd();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSBuildingEnd = expr_70;
					}
					protoReader.AppendExtensionData(cSBuildingEnd);
				}
				else
				{
					if (cSBuildingEnd == null)
					{
						CSBuildingEnd expr_49 = new CSBuildingEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBuildingEnd = expr_49;
					}
					int money = protoReader.ReadInt32();
					cSBuildingEnd.money = money;
				}
			}
			else
			{
				if (cSBuildingEnd == null)
				{
					CSBuildingEnd expr_19 = new CSBuildingEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuildingEnd = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSBuildingEnd.buildingId = buildingId;
			}
		}
		if (cSBuildingEnd == null)
		{
			CSBuildingEnd expr_99 = new CSBuildingEnd();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSBuildingEnd = expr_99;
		}
		return cSBuildingEnd;
	}

	private static void Write(CSBuildingMove cSBuildingMove, ProtoWriter writer)
	{
		if (cSBuildingMove.GetType() != typeof(CSBuildingMove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuildingMove), cSBuildingMove.GetType());
		}
		long expr_2D = cSBuildingMove.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSBuildingMove.index;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = cSBuildingMove.islandId;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		int expr_96 = cSBuildingMove.itemId;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuildingMove, writer);
	}

	private static CSBuildingMove Read(CSBuildingMove cSBuildingMove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (cSBuildingMove == null)
							{
								CSBuildingMove expr_D0 = new CSBuildingMove();
								ProtoReader.NoteObject(expr_D0, protoReader);
								cSBuildingMove = expr_D0;
							}
							protoReader.AppendExtensionData(cSBuildingMove);
						}
						else
						{
							if (cSBuildingMove == null)
							{
								CSBuildingMove expr_A9 = new CSBuildingMove();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSBuildingMove = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							cSBuildingMove.itemId = num2;
						}
					}
					else
					{
						if (cSBuildingMove == null)
						{
							CSBuildingMove expr_79 = new CSBuildingMove();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBuildingMove = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						cSBuildingMove.islandId = num3;
					}
				}
				else
				{
					if (cSBuildingMove == null)
					{
						CSBuildingMove expr_49 = new CSBuildingMove();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBuildingMove = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSBuildingMove.index = num2;
				}
			}
			else
			{
				if (cSBuildingMove == null)
				{
					CSBuildingMove expr_19 = new CSBuildingMove();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuildingMove = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				cSBuildingMove.buildingId = num3;
			}
		}
		if (cSBuildingMove == null)
		{
			CSBuildingMove expr_F9 = new CSBuildingMove();
			ProtoReader.NoteObject(expr_F9, protoReader);
			cSBuildingMove = expr_F9;
		}
		return cSBuildingMove;
	}

	private static void Write(CSBuildingRemove cSBuildingRemove, ProtoWriter writer)
	{
		if (cSBuildingRemove.GetType() != typeof(CSBuildingRemove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuildingRemove), cSBuildingRemove.GetType());
		}
		int expr_2D = cSBuildingRemove.index;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = cSBuildingRemove.islandId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		int expr_70 = cSBuildingRemove.money;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuildingRemove, writer);
	}

	private static CSBuildingRemove Read(CSBuildingRemove cSBuildingRemove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSBuildingRemove == null)
						{
							CSBuildingRemove expr_A0 = new CSBuildingRemove();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSBuildingRemove = expr_A0;
						}
						protoReader.AppendExtensionData(cSBuildingRemove);
					}
					else
					{
						if (cSBuildingRemove == null)
						{
							CSBuildingRemove expr_79 = new CSBuildingRemove();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBuildingRemove = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSBuildingRemove.money = num2;
					}
				}
				else
				{
					if (cSBuildingRemove == null)
					{
						CSBuildingRemove expr_49 = new CSBuildingRemove();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBuildingRemove = expr_49;
					}
					long islandId = protoReader.ReadInt64();
					cSBuildingRemove.islandId = islandId;
				}
			}
			else
			{
				if (cSBuildingRemove == null)
				{
					CSBuildingRemove expr_19 = new CSBuildingRemove();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuildingRemove = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSBuildingRemove.index = num2;
			}
		}
		if (cSBuildingRemove == null)
		{
			CSBuildingRemove expr_C9 = new CSBuildingRemove();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSBuildingRemove = expr_C9;
		}
		return cSBuildingRemove;
	}

	private static void Write(CSBuildingRemoveEnd cSBuildingRemoveEnd, ProtoWriter writer)
	{
		if (cSBuildingRemoveEnd.GetType() != typeof(CSBuildingRemoveEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuildingRemoveEnd), cSBuildingRemoveEnd.GetType());
		}
		int expr_2D = cSBuildingRemoveEnd.index;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = cSBuildingRemoveEnd.islandId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		int expr_70 = cSBuildingRemoveEnd.money;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuildingRemoveEnd, writer);
	}

	private static CSBuildingRemoveEnd Read(CSBuildingRemoveEnd cSBuildingRemoveEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSBuildingRemoveEnd == null)
						{
							CSBuildingRemoveEnd expr_A0 = new CSBuildingRemoveEnd();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSBuildingRemoveEnd = expr_A0;
						}
						protoReader.AppendExtensionData(cSBuildingRemoveEnd);
					}
					else
					{
						if (cSBuildingRemoveEnd == null)
						{
							CSBuildingRemoveEnd expr_79 = new CSBuildingRemoveEnd();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBuildingRemoveEnd = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSBuildingRemoveEnd.money = num2;
					}
				}
				else
				{
					if (cSBuildingRemoveEnd == null)
					{
						CSBuildingRemoveEnd expr_49 = new CSBuildingRemoveEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBuildingRemoveEnd = expr_49;
					}
					long islandId = protoReader.ReadInt64();
					cSBuildingRemoveEnd.islandId = islandId;
				}
			}
			else
			{
				if (cSBuildingRemoveEnd == null)
				{
					CSBuildingRemoveEnd expr_19 = new CSBuildingRemoveEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuildingRemoveEnd = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSBuildingRemoveEnd.index = num2;
			}
		}
		if (cSBuildingRemoveEnd == null)
		{
			CSBuildingRemoveEnd expr_C9 = new CSBuildingRemoveEnd();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSBuildingRemoveEnd = expr_C9;
		}
		return cSBuildingRemoveEnd;
	}

	private static void Write(CSBuildingUp cSBuildingUp, ProtoWriter writer)
	{
		if (cSBuildingUp.GetType() != typeof(CSBuildingUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuildingUp), cSBuildingUp.GetType());
		}
		long expr_2D = cSBuildingUp.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSBuildingUp.money;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSBuildingUp.itemId;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuildingUp, writer);
	}

	private static CSBuildingUp Read(CSBuildingUp cSBuildingUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSBuildingUp == null)
						{
							CSBuildingUp expr_A0 = new CSBuildingUp();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSBuildingUp = expr_A0;
						}
						protoReader.AppendExtensionData(cSBuildingUp);
					}
					else
					{
						if (cSBuildingUp == null)
						{
							CSBuildingUp expr_79 = new CSBuildingUp();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSBuildingUp = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSBuildingUp.itemId = num2;
					}
				}
				else
				{
					if (cSBuildingUp == null)
					{
						CSBuildingUp expr_49 = new CSBuildingUp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSBuildingUp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSBuildingUp.money = num2;
				}
			}
			else
			{
				if (cSBuildingUp == null)
				{
					CSBuildingUp expr_19 = new CSBuildingUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuildingUp = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSBuildingUp.buildingId = buildingId;
			}
		}
		if (cSBuildingUp == null)
		{
			CSBuildingUp expr_C9 = new CSBuildingUp();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSBuildingUp = expr_C9;
		}
		return cSBuildingUp;
	}

	private static void Write(CSBuyArmyToken cSBuyArmyToken, ProtoWriter writer)
	{
		if (cSBuyArmyToken.GetType() != typeof(CSBuyArmyToken))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuyArmyToken), cSBuyArmyToken.GetType());
		}
		int expr_2D = cSBuyArmyToken.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuyArmyToken, writer);
	}

	private static CSBuyArmyToken Read(CSBuyArmyToken cSBuyArmyToken, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSBuyArmyToken == null)
				{
					CSBuyArmyToken expr_40 = new CSBuyArmyToken();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSBuyArmyToken = expr_40;
				}
				protoReader.AppendExtensionData(cSBuyArmyToken);
			}
			else
			{
				if (cSBuyArmyToken == null)
				{
					CSBuyArmyToken expr_19 = new CSBuyArmyToken();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuyArmyToken = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSBuyArmyToken.id = id;
			}
		}
		if (cSBuyArmyToken == null)
		{
			CSBuyArmyToken expr_69 = new CSBuyArmyToken();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSBuyArmyToken = expr_69;
		}
		return cSBuyArmyToken;
	}

	private static void Write(CSBuyBuildingQueue cSBuyBuildingQueue, ProtoWriter writer)
	{
		if (cSBuyBuildingQueue.GetType() != typeof(CSBuyBuildingQueue))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuyBuildingQueue), cSBuyBuildingQueue.GetType());
		}
		int expr_2D = cSBuyBuildingQueue.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuyBuildingQueue, writer);
	}

	private static CSBuyBuildingQueue Read(CSBuyBuildingQueue cSBuyBuildingQueue, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSBuyBuildingQueue == null)
				{
					CSBuyBuildingQueue expr_40 = new CSBuyBuildingQueue();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSBuyBuildingQueue = expr_40;
				}
				protoReader.AppendExtensionData(cSBuyBuildingQueue);
			}
			else
			{
				if (cSBuyBuildingQueue == null)
				{
					CSBuyBuildingQueue expr_19 = new CSBuyBuildingQueue();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuyBuildingQueue = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSBuyBuildingQueue.id = id;
			}
		}
		if (cSBuyBuildingQueue == null)
		{
			CSBuyBuildingQueue expr_69 = new CSBuyBuildingQueue();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSBuyBuildingQueue = expr_69;
		}
		return cSBuyBuildingQueue;
	}

	private static void Write(CSBuyGrowthFund cSBuyGrowthFund, ProtoWriter writer)
	{
		if (cSBuyGrowthFund.GetType() != typeof(CSBuyGrowthFund))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuyGrowthFund), cSBuyGrowthFund.GetType());
		}
		int expr_2D = cSBuyGrowthFund.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuyGrowthFund, writer);
	}

	private static CSBuyGrowthFund Read(CSBuyGrowthFund cSBuyGrowthFund, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSBuyGrowthFund == null)
				{
					CSBuyGrowthFund expr_40 = new CSBuyGrowthFund();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSBuyGrowthFund = expr_40;
				}
				protoReader.AppendExtensionData(cSBuyGrowthFund);
			}
			else
			{
				if (cSBuyGrowthFund == null)
				{
					CSBuyGrowthFund expr_19 = new CSBuyGrowthFund();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuyGrowthFund = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSBuyGrowthFund.id = id;
			}
		}
		if (cSBuyGrowthFund == null)
		{
			CSBuyGrowthFund expr_69 = new CSBuyGrowthFund();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSBuyGrowthFund = expr_69;
		}
		return cSBuyGrowthFund;
	}

	private static void Write(CSBuyItem cSBuyItem, ProtoWriter writer)
	{
		if (cSBuyItem.GetType() != typeof(CSBuyItem))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuyItem), cSBuyItem.GetType());
		}
		int expr_2D = cSBuyItem.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuyItem, writer);
	}

	private static CSBuyItem Read(CSBuyItem cSBuyItem, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSBuyItem == null)
				{
					CSBuyItem expr_40 = new CSBuyItem();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSBuyItem = expr_40;
				}
				protoReader.AppendExtensionData(cSBuyItem);
			}
			else
			{
				if (cSBuyItem == null)
				{
					CSBuyItem expr_19 = new CSBuyItem();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuyItem = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSBuyItem.id = id;
			}
		}
		if (cSBuyItem == null)
		{
			CSBuyItem expr_69 = new CSBuyItem();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSBuyItem = expr_69;
		}
		return cSBuyItem;
	}

	private static void Write(CSBuySearchToken cSBuySearchToken, ProtoWriter writer)
	{
		if (cSBuySearchToken.GetType() != typeof(CSBuySearchToken))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuySearchToken), cSBuySearchToken.GetType());
		}
		int expr_2D = cSBuySearchToken.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuySearchToken, writer);
	}

	private static CSBuySearchToken Read(CSBuySearchToken cSBuySearchToken, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSBuySearchToken == null)
				{
					CSBuySearchToken expr_40 = new CSBuySearchToken();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSBuySearchToken = expr_40;
				}
				protoReader.AppendExtensionData(cSBuySearchToken);
			}
			else
			{
				if (cSBuySearchToken == null)
				{
					CSBuySearchToken expr_19 = new CSBuySearchToken();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuySearchToken = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSBuySearchToken.id = id;
			}
		}
		if (cSBuySearchToken == null)
		{
			CSBuySearchToken expr_69 = new CSBuySearchToken();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSBuySearchToken = expr_69;
		}
		return cSBuySearchToken;
	}

	private static void Write(CSBuySkillToken cSBuySkillToken, ProtoWriter writer)
	{
		if (cSBuySkillToken.GetType() != typeof(CSBuySkillToken))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSBuySkillToken), cSBuySkillToken.GetType());
		}
		int expr_2D = cSBuySkillToken.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSBuySkillToken, writer);
	}

	private static CSBuySkillToken Read(CSBuySkillToken cSBuySkillToken, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSBuySkillToken == null)
				{
					CSBuySkillToken expr_40 = new CSBuySkillToken();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSBuySkillToken = expr_40;
				}
				protoReader.AppendExtensionData(cSBuySkillToken);
			}
			else
			{
				if (cSBuySkillToken == null)
				{
					CSBuySkillToken expr_19 = new CSBuySkillToken();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSBuySkillToken = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSBuySkillToken.type = type;
			}
		}
		if (cSBuySkillToken == null)
		{
			CSBuySkillToken expr_69 = new CSBuySkillToken();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSBuySkillToken = expr_69;
		}
		return cSBuySkillToken;
	}

	private static void Write(CSCalcMoney cSCalcMoney, ProtoWriter writer)
	{
		if (cSCalcMoney.GetType() != typeof(CSCalcMoney))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCalcMoney), cSCalcMoney.GetType());
		}
		int expr_2D = cSCalcMoney.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSCalcMoney.cdType;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		int expr_67 = cSCalcMoney.index;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		long expr_84 = cSCalcMoney.id;
		if (expr_84 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_84, writer);
		}
		int expr_AA = cSCalcMoney.itemId;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		List<long> expr_C7 = cSCalcMoney.cityWallIds;
		if (expr_C7 != null)
		{
			List<long> list = expr_C7;
			foreach (long arg_ED_0 in list)
			{
				ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_ED_0, writer);
			}
		}
		int expr_11C = cSCalcMoney.configureType;
		if (expr_11C != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_11C, writer);
		}
		int expr_139 = cSCalcMoney.confNum;
		if (expr_139 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_139, writer);
		}
		ProtoWriter.AppendExtensionData(cSCalcMoney, writer);
	}

	private static CSCalcMoney Read(CSCalcMoney cSCalcMoney, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (cSCalcMoney == null)
											{
												CSCalcMoney expr_1EB = new CSCalcMoney();
												ProtoReader.NoteObject(expr_1EB, protoReader);
												cSCalcMoney = expr_1EB;
											}
											protoReader.AppendExtensionData(cSCalcMoney);
										}
										else
										{
											if (cSCalcMoney == null)
											{
												CSCalcMoney expr_1C4 = new CSCalcMoney();
												ProtoReader.NoteObject(expr_1C4, protoReader);
												cSCalcMoney = expr_1C4;
											}
											int num2 = protoReader.ReadInt32();
											cSCalcMoney.confNum = num2;
										}
									}
									else
									{
										if (cSCalcMoney == null)
										{
											CSCalcMoney expr_194 = new CSCalcMoney();
											ProtoReader.NoteObject(expr_194, protoReader);
											cSCalcMoney = expr_194;
										}
										int num2 = protoReader.ReadInt32();
										cSCalcMoney.configureType = num2;
									}
								}
								else
								{
									if (cSCalcMoney == null)
									{
										CSCalcMoney expr_109 = new CSCalcMoney();
										ProtoReader.NoteObject(expr_109, protoReader);
										cSCalcMoney = expr_109;
									}
									List<long> list = cSCalcMoney.cityWallIds;
									if (list == null)
									{
										list = new List<long>();
									}
									if (protoReader.WireType != WireType.String)
									{
										int num2 = protoReader.FieldNumber;
										do
										{
											list.Add(protoReader.ReadInt64());
										}
										while (protoReader.TryReadFieldHeader(num2));
									}
									else
									{
										SubItemToken arg_176_0 = ProtoReader.StartSubItem(protoReader);
										while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
										{
											list.Add(protoReader.ReadInt64());
										}
										ProtoReader.EndSubItem(arg_176_0, protoReader);
									}
								}
							}
							else
							{
								if (cSCalcMoney == null)
								{
									CSCalcMoney expr_D9 = new CSCalcMoney();
									ProtoReader.NoteObject(expr_D9, protoReader);
									cSCalcMoney = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								cSCalcMoney.itemId = num2;
							}
						}
						else
						{
							if (cSCalcMoney == null)
							{
								CSCalcMoney expr_A9 = new CSCalcMoney();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSCalcMoney = expr_A9;
							}
							long id = protoReader.ReadInt64();
							cSCalcMoney.id = id;
						}
					}
					else
					{
						if (cSCalcMoney == null)
						{
							CSCalcMoney expr_79 = new CSCalcMoney();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSCalcMoney = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSCalcMoney.index = num2;
					}
				}
				else
				{
					if (cSCalcMoney == null)
					{
						CSCalcMoney expr_49 = new CSCalcMoney();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSCalcMoney = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSCalcMoney.cdType = num2;
				}
			}
			else
			{
				if (cSCalcMoney == null)
				{
					CSCalcMoney expr_19 = new CSCalcMoney();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCalcMoney = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSCalcMoney.type = num2;
			}
		}
		if (cSCalcMoney == null)
		{
			CSCalcMoney expr_214 = new CSCalcMoney();
			ProtoReader.NoteObject(expr_214, protoReader);
			cSCalcMoney = expr_214;
		}
		return cSCalcMoney;
	}

	private static void Write(CSCancelCDTime cSCancelCDTime, ProtoWriter writer)
	{
		if (cSCancelCDTime.GetType() != typeof(CSCancelCDTime))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCancelCDTime), cSCancelCDTime.GetType());
		}
		long expr_2D = cSCancelCDTime.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSCancelCDTime.money;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSCancelCDTime.tmp;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSCancelCDTime, writer);
	}

	private static CSCancelCDTime Read(CSCancelCDTime cSCancelCDTime, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSCancelCDTime == null)
						{
							CSCancelCDTime expr_A0 = new CSCancelCDTime();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSCancelCDTime = expr_A0;
						}
						protoReader.AppendExtensionData(cSCancelCDTime);
					}
					else
					{
						if (cSCancelCDTime == null)
						{
							CSCancelCDTime expr_79 = new CSCancelCDTime();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSCancelCDTime = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSCancelCDTime.tmp = num2;
					}
				}
				else
				{
					if (cSCancelCDTime == null)
					{
						CSCancelCDTime expr_49 = new CSCancelCDTime();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSCancelCDTime = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSCancelCDTime.money = num2;
				}
			}
			else
			{
				if (cSCancelCDTime == null)
				{
					CSCancelCDTime expr_19 = new CSCancelCDTime();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCancelCDTime = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSCancelCDTime.buildingId = buildingId;
			}
		}
		if (cSCancelCDTime == null)
		{
			CSCancelCDTime expr_C9 = new CSCancelCDTime();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSCancelCDTime = expr_C9;
		}
		return cSCancelCDTime;
	}

	private static void Write(CScancelConfigSoldier cScancelConfigSoldier, ProtoWriter writer)
	{
		if (cScancelConfigSoldier.GetType() != typeof(CScancelConfigSoldier))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CScancelConfigSoldier), cScancelConfigSoldier.GetType());
		}
		int expr_2D = cScancelConfigSoldier.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cScancelConfigSoldier, writer);
	}

	private static CScancelConfigSoldier Read(CScancelConfigSoldier cScancelConfigSoldier, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cScancelConfigSoldier == null)
				{
					CScancelConfigSoldier expr_40 = new CScancelConfigSoldier();
					ProtoReader.NoteObject(expr_40, protoReader);
					cScancelConfigSoldier = expr_40;
				}
				protoReader.AppendExtensionData(cScancelConfigSoldier);
			}
			else
			{
				if (cScancelConfigSoldier == null)
				{
					CScancelConfigSoldier expr_19 = new CScancelConfigSoldier();
					ProtoReader.NoteObject(expr_19, protoReader);
					cScancelConfigSoldier = expr_19;
				}
				int id = protoReader.ReadInt32();
				cScancelConfigSoldier.id = id;
			}
		}
		if (cScancelConfigSoldier == null)
		{
			CScancelConfigSoldier expr_69 = new CScancelConfigSoldier();
			ProtoReader.NoteObject(expr_69, protoReader);
			cScancelConfigSoldier = expr_69;
		}
		return cScancelConfigSoldier;
	}

	private static void Write(CSCancelConfigureArmy cSCancelConfigureArmy, ProtoWriter writer)
	{
		if (cSCancelConfigureArmy.GetType() != typeof(CSCancelConfigureArmy))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCancelConfigureArmy), cSCancelConfigureArmy.GetType());
		}
		int expr_2D = cSCancelConfigureArmy.armyId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = cSCancelConfigureArmy.buildingId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSCancelConfigureArmy, writer);
	}

	private static CSCancelConfigureArmy Read(CSCancelConfigureArmy cSCancelConfigureArmy, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSCancelConfigureArmy == null)
					{
						CSCancelConfigureArmy expr_70 = new CSCancelConfigureArmy();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSCancelConfigureArmy = expr_70;
					}
					protoReader.AppendExtensionData(cSCancelConfigureArmy);
				}
				else
				{
					if (cSCancelConfigureArmy == null)
					{
						CSCancelConfigureArmy expr_49 = new CSCancelConfigureArmy();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSCancelConfigureArmy = expr_49;
					}
					long buildingId = protoReader.ReadInt64();
					cSCancelConfigureArmy.buildingId = buildingId;
				}
			}
			else
			{
				if (cSCancelConfigureArmy == null)
				{
					CSCancelConfigureArmy expr_19 = new CSCancelConfigureArmy();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCancelConfigureArmy = expr_19;
				}
				int armyId = protoReader.ReadInt32();
				cSCancelConfigureArmy.armyId = armyId;
			}
		}
		if (cSCancelConfigureArmy == null)
		{
			CSCancelConfigureArmy expr_99 = new CSCancelConfigureArmy();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSCancelConfigureArmy = expr_99;
		}
		return cSCancelConfigureArmy;
	}

	private static void Write(CSCityWallBatchMove cSCityWallBatchMove, ProtoWriter protoWriter)
	{
		if (cSCityWallBatchMove.GetType() != typeof(CSCityWallBatchMove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCityWallBatchMove), cSCityWallBatchMove.GetType());
		}
		List<KVStruct> expr_2D = cSCityWallBatchMove.CityWall;
		if (expr_2D != null)
		{
			List<KVStruct> list = expr_2D;
			foreach (KVStruct arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_91 = cSCityWallBatchMove.islandId;
		if (expr_91 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_91, protoWriter);
		}
		ProtoWriter.AppendExtensionData(cSCityWallBatchMove, protoWriter);
	}

	private static CSCityWallBatchMove Read(CSCityWallBatchMove cSCityWallBatchMove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSCityWallBatchMove == null)
					{
						CSCityWallBatchMove expr_A2 = new CSCityWallBatchMove();
						ProtoReader.NoteObject(expr_A2, protoReader);
						cSCityWallBatchMove = expr_A2;
					}
					protoReader.AppendExtensionData(cSCityWallBatchMove);
				}
				else
				{
					if (cSCityWallBatchMove == null)
					{
						CSCityWallBatchMove expr_79 = new CSCityWallBatchMove();
						ProtoReader.NoteObject(expr_79, protoReader);
						cSCityWallBatchMove = expr_79;
					}
					long islandId = protoReader.ReadInt64();
					cSCityWallBatchMove.islandId = islandId;
				}
			}
			else
			{
				if (cSCityWallBatchMove == null)
				{
					CSCityWallBatchMove expr_19 = new CSCityWallBatchMove();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCityWallBatchMove = expr_19;
				}
				List<KVStruct> list = cSCityWallBatchMove.CityWall;
				if (list == null)
				{
					list = new List<KVStruct>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<KVStruct> arg_4F_0 = list;
					KVStruct arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					KVStruct arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (cSCityWallBatchMove == null)
		{
			CSCityWallBatchMove expr_CB = new CSCityWallBatchMove();
			ProtoReader.NoteObject(expr_CB, protoReader);
			cSCityWallBatchMove = expr_CB;
		}
		return cSCityWallBatchMove;
	}

	private static void Write(CSCityWallBatchUpLevel cSCityWallBatchUpLevel, ProtoWriter writer)
	{
		if (cSCityWallBatchUpLevel.GetType() != typeof(CSCityWallBatchUpLevel))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCityWallBatchUpLevel), cSCityWallBatchUpLevel.GetType());
		}
		List<long> expr_2D = cSCityWallBatchUpLevel.cityWallIds;
		if (expr_2D != null)
		{
			List<long> list = expr_2D;
			foreach (long arg_53_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_53_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSCityWallBatchUpLevel, writer);
	}

	private static CSCityWallBatchUpLevel Read(CSCityWallBatchUpLevel cSCityWallBatchUpLevel, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSCityWallBatchUpLevel == null)
				{
					CSCityWallBatchUpLevel expr_9B = new CSCityWallBatchUpLevel();
					ProtoReader.NoteObject(expr_9B, protoReader);
					cSCityWallBatchUpLevel = expr_9B;
				}
				protoReader.AppendExtensionData(cSCityWallBatchUpLevel);
			}
			else
			{
				if (cSCityWallBatchUpLevel == null)
				{
					CSCityWallBatchUpLevel expr_19 = new CSCityWallBatchUpLevel();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCityWallBatchUpLevel = expr_19;
				}
				List<long> list = cSCityWallBatchUpLevel.cityWallIds;
				if (list == null)
				{
					list = new List<long>();
				}
				if (protoReader.WireType != WireType.String)
				{
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						list.Add(protoReader.ReadInt64());
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
				else
				{
					SubItemToken arg_86_0 = ProtoReader.StartSubItem(protoReader);
					while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
					{
						list.Add(protoReader.ReadInt64());
					}
					ProtoReader.EndSubItem(arg_86_0, protoReader);
				}
			}
		}
		if (cSCityWallBatchUpLevel == null)
		{
			CSCityWallBatchUpLevel expr_C4 = new CSCityWallBatchUpLevel();
			ProtoReader.NoteObject(expr_C4, protoReader);
			cSCityWallBatchUpLevel = expr_C4;
		}
		return cSCityWallBatchUpLevel;
	}

	private static void Write(CSClearExtarArmy cSClearExtarArmy, ProtoWriter writer)
	{
		if (cSClearExtarArmy.GetType() != typeof(CSClearExtarArmy))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSClearExtarArmy), cSClearExtarArmy.GetType());
		}
		long expr_2D = cSClearExtarArmy.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSClearExtarArmy, writer);
	}

	private static CSClearExtarArmy Read(CSClearExtarArmy cSClearExtarArmy, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSClearExtarArmy == null)
				{
					CSClearExtarArmy expr_40 = new CSClearExtarArmy();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSClearExtarArmy = expr_40;
				}
				protoReader.AppendExtensionData(cSClearExtarArmy);
			}
			else
			{
				if (cSClearExtarArmy == null)
				{
					CSClearExtarArmy expr_19 = new CSClearExtarArmy();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSClearExtarArmy = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSClearExtarArmy.id = id;
			}
		}
		if (cSClearExtarArmy == null)
		{
			CSClearExtarArmy expr_69 = new CSClearExtarArmy();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSClearExtarArmy = expr_69;
		}
		return cSClearExtarArmy;
	}

	private static void Write(CSCompleteAchievement cSCompleteAchievement, ProtoWriter writer)
	{
		if (cSCompleteAchievement.GetType() != typeof(CSCompleteAchievement))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCompleteAchievement), cSCompleteAchievement.GetType());
		}
		int expr_2D = cSCompleteAchievement.achievementId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSCompleteAchievement, writer);
	}

	private static CSCompleteAchievement Read(CSCompleteAchievement cSCompleteAchievement, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSCompleteAchievement == null)
				{
					CSCompleteAchievement expr_40 = new CSCompleteAchievement();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSCompleteAchievement = expr_40;
				}
				protoReader.AppendExtensionData(cSCompleteAchievement);
			}
			else
			{
				if (cSCompleteAchievement == null)
				{
					CSCompleteAchievement expr_19 = new CSCompleteAchievement();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCompleteAchievement = expr_19;
				}
				int achievementId = protoReader.ReadInt32();
				cSCompleteAchievement.achievementId = achievementId;
			}
		}
		if (cSCompleteAchievement == null)
		{
			CSCompleteAchievement expr_69 = new CSCompleteAchievement();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSCompleteAchievement = expr_69;
		}
		return cSCompleteAchievement;
	}

	private static void Write(CSCompleteTask cSCompleteTask, ProtoWriter writer)
	{
		if (cSCompleteTask.GetType() != typeof(CSCompleteTask))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSCompleteTask), cSCompleteTask.GetType());
		}
		int expr_2D = cSCompleteTask.taskId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSCompleteTask, writer);
	}

	private static CSCompleteTask Read(CSCompleteTask cSCompleteTask, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSCompleteTask == null)
				{
					CSCompleteTask expr_40 = new CSCompleteTask();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSCompleteTask = expr_40;
				}
				protoReader.AppendExtensionData(cSCompleteTask);
			}
			else
			{
				if (cSCompleteTask == null)
				{
					CSCompleteTask expr_19 = new CSCompleteTask();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSCompleteTask = expr_19;
				}
				int taskId = protoReader.ReadInt32();
				cSCompleteTask.taskId = taskId;
			}
		}
		if (cSCompleteTask == null)
		{
			CSCompleteTask expr_69 = new CSCompleteTask();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSCompleteTask = expr_69;
		}
		return cSCompleteTask;
	}

	private static void Write(CSDebug cSDebug, ProtoWriter writer)
	{
		if (cSDebug.GetType() != typeof(CSDebug))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSDebug), cSDebug.GetType());
		}
		List<int> expr_2D = cSDebug.id;
		if (expr_2D != null)
		{
			List<int> list = expr_2D;
			foreach (int arg_53_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_53_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSDebug, writer);
	}

	private static CSDebug Read(CSDebug cSDebug, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSDebug == null)
				{
					CSDebug expr_9B = new CSDebug();
					ProtoReader.NoteObject(expr_9B, protoReader);
					cSDebug = expr_9B;
				}
				protoReader.AppendExtensionData(cSDebug);
			}
			else
			{
				if (cSDebug == null)
				{
					CSDebug expr_19 = new CSDebug();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSDebug = expr_19;
				}
				List<int> list = cSDebug.id;
				if (list == null)
				{
					list = new List<int>();
				}
				if (protoReader.WireType != WireType.String)
				{
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						list.Add(protoReader.ReadInt32());
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
				else
				{
					SubItemToken arg_86_0 = ProtoReader.StartSubItem(protoReader);
					while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
					{
						list.Add(protoReader.ReadInt32());
					}
					ProtoReader.EndSubItem(arg_86_0, protoReader);
				}
			}
		}
		if (cSDebug == null)
		{
			CSDebug expr_C4 = new CSDebug();
			ProtoReader.NoteObject(expr_C4, protoReader);
			cSDebug = expr_C4;
		}
		return cSDebug;
	}

	private static void Write(CSDeleteLegionHelpApply cSDeleteLegionHelpApply, ProtoWriter writer)
	{
		if (cSDeleteLegionHelpApply.GetType() != typeof(CSDeleteLegionHelpApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSDeleteLegionHelpApply), cSDeleteLegionHelpApply.GetType());
		}
		long expr_2D = cSDeleteLegionHelpApply.applyId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSDeleteLegionHelpApply, writer);
	}

	private static CSDeleteLegionHelpApply Read(CSDeleteLegionHelpApply cSDeleteLegionHelpApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSDeleteLegionHelpApply == null)
				{
					CSDeleteLegionHelpApply expr_40 = new CSDeleteLegionHelpApply();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSDeleteLegionHelpApply = expr_40;
				}
				protoReader.AppendExtensionData(cSDeleteLegionHelpApply);
			}
			else
			{
				if (cSDeleteLegionHelpApply == null)
				{
					CSDeleteLegionHelpApply expr_19 = new CSDeleteLegionHelpApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSDeleteLegionHelpApply = expr_19;
				}
				long applyId = protoReader.ReadInt64();
				cSDeleteLegionHelpApply.applyId = applyId;
			}
		}
		if (cSDeleteLegionHelpApply == null)
		{
			CSDeleteLegionHelpApply expr_69 = new CSDeleteLegionHelpApply();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSDeleteLegionHelpApply = expr_69;
		}
		return cSDeleteLegionHelpApply;
	}

	private static void Write(CSDisMissLegionMember cSDisMissLegionMember, ProtoWriter writer)
	{
		if (cSDisMissLegionMember.GetType() != typeof(CSDisMissLegionMember))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSDisMissLegionMember), cSDisMissLegionMember.GetType());
		}
		long expr_2D = cSDisMissLegionMember.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = cSDisMissLegionMember.targetId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSDisMissLegionMember, writer);
	}

	private static CSDisMissLegionMember Read(CSDisMissLegionMember cSDisMissLegionMember, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSDisMissLegionMember == null)
					{
						CSDisMissLegionMember expr_70 = new CSDisMissLegionMember();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSDisMissLegionMember = expr_70;
					}
					protoReader.AppendExtensionData(cSDisMissLegionMember);
				}
				else
				{
					if (cSDisMissLegionMember == null)
					{
						CSDisMissLegionMember expr_49 = new CSDisMissLegionMember();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSDisMissLegionMember = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					cSDisMissLegionMember.targetId = num2;
				}
			}
			else
			{
				if (cSDisMissLegionMember == null)
				{
					CSDisMissLegionMember expr_19 = new CSDisMissLegionMember();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSDisMissLegionMember = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				cSDisMissLegionMember.legionId = num2;
			}
		}
		if (cSDisMissLegionMember == null)
		{
			CSDisMissLegionMember expr_99 = new CSDisMissLegionMember();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSDisMissLegionMember = expr_99;
		}
		return cSDisMissLegionMember;
	}

	private static void Write(CSEquipMix cSEquipMix, ProtoWriter writer)
	{
		if (cSEquipMix.GetType() != typeof(CSEquipMix))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSEquipMix), cSEquipMix.GetType());
		}
		long expr_2D = cSEquipMix.equipId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<long> expr_53 = cSEquipMix.equip;
		if (expr_53 != null)
		{
			List<long> list = expr_53;
			foreach (long arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_79_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSEquipMix, writer);
	}

	private static CSEquipMix Read(CSEquipMix cSEquipMix, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSEquipMix == null)
					{
						CSEquipMix expr_CB = new CSEquipMix();
						ProtoReader.NoteObject(expr_CB, protoReader);
						cSEquipMix = expr_CB;
					}
					protoReader.AppendExtensionData(cSEquipMix);
				}
				else
				{
					if (cSEquipMix == null)
					{
						CSEquipMix expr_49 = new CSEquipMix();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSEquipMix = expr_49;
					}
					List<long> list = cSEquipMix.equip;
					if (list == null)
					{
						list = new List<long>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt64());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt64());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (cSEquipMix == null)
				{
					CSEquipMix expr_19 = new CSEquipMix();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSEquipMix = expr_19;
				}
				long equipId = protoReader.ReadInt64();
				cSEquipMix.equipId = equipId;
			}
		}
		if (cSEquipMix == null)
		{
			CSEquipMix expr_F4 = new CSEquipMix();
			ProtoReader.NoteObject(expr_F4, protoReader);
			cSEquipMix = expr_F4;
		}
		return cSEquipMix;
	}

	private static void Write(CSExchangeGift cSExchangeGift, ProtoWriter writer)
	{
		if (cSExchangeGift.GetType() != typeof(CSExchangeGift))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSExchangeGift), cSExchangeGift.GetType());
		}
		string expr_2D = cSExchangeGift.giftCode;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSExchangeGift, writer);
	}

	private static CSExchangeGift Read(CSExchangeGift cSExchangeGift, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSExchangeGift == null)
				{
					CSExchangeGift expr_43 = new CSExchangeGift();
					ProtoReader.NoteObject(expr_43, protoReader);
					cSExchangeGift = expr_43;
				}
				protoReader.AppendExtensionData(cSExchangeGift);
			}
			else
			{
				if (cSExchangeGift == null)
				{
					CSExchangeGift expr_19 = new CSExchangeGift();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSExchangeGift = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSExchangeGift.giftCode = text;
				}
			}
		}
		if (cSExchangeGift == null)
		{
			CSExchangeGift expr_6C = new CSExchangeGift();
			ProtoReader.NoteObject(expr_6C, protoReader);
			cSExchangeGift = expr_6C;
		}
		return cSExchangeGift;
	}

	private static void Write(CSFightingEvent cSFightingEvent, ProtoWriter protoWriter)
	{
		if (cSFightingEvent.GetType() != typeof(CSFightingEvent))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSFightingEvent), cSFightingEvent.GetType());
		}
		List<FightEventData> expr_2D = cSFightingEvent.data;
		if (expr_2D != null)
		{
			List<FightEventData> list = expr_2D;
			foreach (FightEventData arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<VFDeadData> expr_91 = cSFightingEvent.vfData;
		if (expr_91 != null)
		{
			List<VFDeadData> list2 = expr_91;
			foreach (VFDeadData arg_B7_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_B7_0, protoWriter);
				ProtoMsgSerializer.Write(arg_B7_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(cSFightingEvent, protoWriter);
	}

	private static CSFightingEvent Read(CSFightingEvent cSFightingEvent, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSFightingEvent == null)
					{
						CSFightingEvent expr_D4 = new CSFightingEvent();
						ProtoReader.NoteObject(expr_D4, protoReader);
						cSFightingEvent = expr_D4;
					}
					protoReader.AppendExtensionData(cSFightingEvent);
				}
				else
				{
					if (cSFightingEvent == null)
					{
						CSFightingEvent expr_79 = new CSFightingEvent();
						ProtoReader.NoteObject(expr_79, protoReader);
						cSFightingEvent = expr_79;
					}
					List<VFDeadData> list = cSFightingEvent.vfData;
					if (list == null)
					{
						list = new List<VFDeadData>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<VFDeadData> arg_B3_0 = list;
						VFDeadData arg_A7_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						VFDeadData arg_B3_1 = ProtoMsgSerializer.Read(arg_A7_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_B3_0.Add(arg_B3_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (cSFightingEvent == null)
				{
					CSFightingEvent expr_19 = new CSFightingEvent();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSFightingEvent = expr_19;
				}
				List<FightEventData> list2 = cSFightingEvent.data;
				if (list2 == null)
				{
					list2 = new List<FightEventData>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<FightEventData> arg_4F_0 = list2;
					FightEventData arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					FightEventData arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (cSFightingEvent == null)
		{
			CSFightingEvent expr_FD = new CSFightingEvent();
			ProtoReader.NoteObject(expr_FD, protoReader);
			cSFightingEvent = expr_FD;
		}
		return cSFightingEvent;
	}

	private static void Write(CSGetActivityList cSGetActivityList, ProtoWriter writer)
	{
		if (cSGetActivityList.GetType() != typeof(CSGetActivityList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetActivityList), cSGetActivityList.GetType());
		}
		int expr_2D = cSGetActivityList.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSGetActivityList.type;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetActivityList, writer);
	}

	private static CSGetActivityList Read(CSGetActivityList cSGetActivityList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSGetActivityList == null)
					{
						CSGetActivityList expr_70 = new CSGetActivityList();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSGetActivityList = expr_70;
					}
					protoReader.AppendExtensionData(cSGetActivityList);
				}
				else
				{
					if (cSGetActivityList == null)
					{
						CSGetActivityList expr_49 = new CSGetActivityList();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSGetActivityList = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSGetActivityList.type = num2;
				}
			}
			else
			{
				if (cSGetActivityList == null)
				{
					CSGetActivityList expr_19 = new CSGetActivityList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetActivityList = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSGetActivityList.id = num2;
			}
		}
		if (cSGetActivityList == null)
		{
			CSGetActivityList expr_99 = new CSGetActivityList();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSGetActivityList = expr_99;
		}
		return cSGetActivityList;
	}

	private static void Write(CSgetActivityPrize cSgetActivityPrize, ProtoWriter writer)
	{
		if (cSgetActivityPrize.GetType() != typeof(CSgetActivityPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSgetActivityPrize), cSgetActivityPrize.GetType());
		}
		int expr_2D = cSgetActivityPrize.activityId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSgetActivityPrize, writer);
	}

	private static CSgetActivityPrize Read(CSgetActivityPrize cSgetActivityPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSgetActivityPrize == null)
				{
					CSgetActivityPrize expr_40 = new CSgetActivityPrize();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSgetActivityPrize = expr_40;
				}
				protoReader.AppendExtensionData(cSgetActivityPrize);
			}
			else
			{
				if (cSgetActivityPrize == null)
				{
					CSgetActivityPrize expr_19 = new CSgetActivityPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSgetActivityPrize = expr_19;
				}
				int activityId = protoReader.ReadInt32();
				cSgetActivityPrize.activityId = activityId;
			}
		}
		if (cSgetActivityPrize == null)
		{
			CSgetActivityPrize expr_69 = new CSgetActivityPrize();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSgetActivityPrize = expr_69;
		}
		return cSgetActivityPrize;
	}

	private static void Write(CSGetContributionPrize cSGetContributionPrize, ProtoWriter writer)
	{
		if (cSGetContributionPrize.GetType() != typeof(CSGetContributionPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetContributionPrize), cSGetContributionPrize.GetType());
		}
		int expr_2D = cSGetContributionPrize.step;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetContributionPrize, writer);
	}

	private static CSGetContributionPrize Read(CSGetContributionPrize cSGetContributionPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSGetContributionPrize == null)
				{
					CSGetContributionPrize expr_40 = new CSGetContributionPrize();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSGetContributionPrize = expr_40;
				}
				protoReader.AppendExtensionData(cSGetContributionPrize);
			}
			else
			{
				if (cSGetContributionPrize == null)
				{
					CSGetContributionPrize expr_19 = new CSGetContributionPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetContributionPrize = expr_19;
				}
				int step = protoReader.ReadInt32();
				cSGetContributionPrize.step = step;
			}
		}
		if (cSGetContributionPrize == null)
		{
			CSGetContributionPrize expr_69 = new CSGetContributionPrize();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSGetContributionPrize = expr_69;
		}
		return cSGetContributionPrize;
	}

	private static void Write(CSGetLegionApplyList cSGetLegionApplyList, ProtoWriter writer)
	{
		if (cSGetLegionApplyList.GetType() != typeof(CSGetLegionApplyList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetLegionApplyList), cSGetLegionApplyList.GetType());
		}
		long expr_2D = cSGetLegionApplyList.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetLegionApplyList, writer);
	}

	private static CSGetLegionApplyList Read(CSGetLegionApplyList cSGetLegionApplyList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSGetLegionApplyList == null)
				{
					CSGetLegionApplyList expr_40 = new CSGetLegionApplyList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSGetLegionApplyList = expr_40;
				}
				protoReader.AppendExtensionData(cSGetLegionApplyList);
			}
			else
			{
				if (cSGetLegionApplyList == null)
				{
					CSGetLegionApplyList expr_19 = new CSGetLegionApplyList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetLegionApplyList = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSGetLegionApplyList.legionId = legionId;
			}
		}
		if (cSGetLegionApplyList == null)
		{
			CSGetLegionApplyList expr_69 = new CSGetLegionApplyList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSGetLegionApplyList = expr_69;
		}
		return cSGetLegionApplyList;
	}

	private static void Write(CSGetLegionHelpApplyList cSGetLegionHelpApplyList, ProtoWriter writer)
	{
		if (cSGetLegionHelpApplyList.GetType() != typeof(CSGetLegionHelpApplyList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetLegionHelpApplyList), cSGetLegionHelpApplyList.GetType());
		}
		long expr_2D = cSGetLegionHelpApplyList.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetLegionHelpApplyList, writer);
	}

	private static CSGetLegionHelpApplyList Read(CSGetLegionHelpApplyList cSGetLegionHelpApplyList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSGetLegionHelpApplyList == null)
				{
					CSGetLegionHelpApplyList expr_40 = new CSGetLegionHelpApplyList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSGetLegionHelpApplyList = expr_40;
				}
				protoReader.AppendExtensionData(cSGetLegionHelpApplyList);
			}
			else
			{
				if (cSGetLegionHelpApplyList == null)
				{
					CSGetLegionHelpApplyList expr_19 = new CSGetLegionHelpApplyList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetLegionHelpApplyList = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSGetLegionHelpApplyList.legionId = legionId;
			}
		}
		if (cSGetLegionHelpApplyList == null)
		{
			CSGetLegionHelpApplyList expr_69 = new CSGetLegionHelpApplyList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSGetLegionHelpApplyList = expr_69;
		}
		return cSGetLegionHelpApplyList;
	}

	private static void Write(CSGetOrderId cSGetOrderId, ProtoWriter writer)
	{
		if (cSGetOrderId.GetType() != typeof(CSGetOrderId))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetOrderId), cSGetOrderId.GetType());
		}
		int expr_2D = cSGetOrderId.goodsId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSGetOrderId.goodsCount;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		int expr_67 = cSGetOrderId.activityId;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		string expr_84 = cSGetOrderId.appleProductId;
		if (expr_84 != null)
		{
			if (!(expr_84 == ""))
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, writer);
				ProtoWriter.WriteString(expr_84, writer);
			}
		}
		long expr_B4 = cSGetOrderId.orderId;
		if (expr_B4 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_B4, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetOrderId, writer);
	}

	private static CSGetOrderId Read(CSGetOrderId cSGetOrderId, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (cSGetOrderId == null)
								{
									CSGetOrderId expr_103 = new CSGetOrderId();
									ProtoReader.NoteObject(expr_103, protoReader);
									cSGetOrderId = expr_103;
								}
								protoReader.AppendExtensionData(cSGetOrderId);
							}
							else
							{
								if (cSGetOrderId == null)
								{
									CSGetOrderId expr_DC = new CSGetOrderId();
									ProtoReader.NoteObject(expr_DC, protoReader);
									cSGetOrderId = expr_DC;
								}
								long orderId = protoReader.ReadInt64();
								cSGetOrderId.orderId = orderId;
							}
						}
						else
						{
							if (cSGetOrderId == null)
							{
								CSGetOrderId expr_A9 = new CSGetOrderId();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSGetOrderId = expr_A9;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								cSGetOrderId.appleProductId = text;
							}
						}
					}
					else
					{
						if (cSGetOrderId == null)
						{
							CSGetOrderId expr_79 = new CSGetOrderId();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSGetOrderId = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSGetOrderId.activityId = num2;
					}
				}
				else
				{
					if (cSGetOrderId == null)
					{
						CSGetOrderId expr_49 = new CSGetOrderId();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSGetOrderId = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSGetOrderId.goodsCount = num2;
				}
			}
			else
			{
				if (cSGetOrderId == null)
				{
					CSGetOrderId expr_19 = new CSGetOrderId();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetOrderId = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSGetOrderId.goodsId = num2;
			}
		}
		if (cSGetOrderId == null)
		{
			CSGetOrderId expr_12C = new CSGetOrderId();
			ProtoReader.NoteObject(expr_12C, protoReader);
			cSGetOrderId = expr_12C;
		}
		return cSGetOrderId;
	}

	private static void Write(CSGetRanking cSGetRanking, ProtoWriter writer)
	{
		if (cSGetRanking.GetType() != typeof(CSGetRanking))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetRanking), cSGetRanking.GetType());
		}
		int expr_2D = cSGetRanking.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetRanking, writer);
	}

	private static CSGetRanking Read(CSGetRanking cSGetRanking, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSGetRanking == null)
				{
					CSGetRanking expr_40 = new CSGetRanking();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSGetRanking = expr_40;
				}
				protoReader.AppendExtensionData(cSGetRanking);
			}
			else
			{
				if (cSGetRanking == null)
				{
					CSGetRanking expr_19 = new CSGetRanking();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetRanking = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSGetRanking.type = type;
			}
		}
		if (cSGetRanking == null)
		{
			CSGetRanking expr_69 = new CSGetRanking();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSGetRanking = expr_69;
		}
		return cSGetRanking;
	}

	private static void Write(CSGetSkillCard cSGetSkillCard, ProtoWriter writer)
	{
		if (cSGetSkillCard.GetType() != typeof(CSGetSkillCard))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGetSkillCard), cSGetSkillCard.GetType());
		}
		int expr_2D = cSGetSkillCard.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSGetSkillCard.buyTimes;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSGetSkillCard, writer);
	}

	private static CSGetSkillCard Read(CSGetSkillCard cSGetSkillCard, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSGetSkillCard == null)
					{
						CSGetSkillCard expr_70 = new CSGetSkillCard();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSGetSkillCard = expr_70;
					}
					protoReader.AppendExtensionData(cSGetSkillCard);
				}
				else
				{
					if (cSGetSkillCard == null)
					{
						CSGetSkillCard expr_49 = new CSGetSkillCard();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSGetSkillCard = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSGetSkillCard.buyTimes = num2;
				}
			}
			else
			{
				if (cSGetSkillCard == null)
				{
					CSGetSkillCard expr_19 = new CSGetSkillCard();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGetSkillCard = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSGetSkillCard.type = num2;
			}
		}
		if (cSGetSkillCard == null)
		{
			CSGetSkillCard expr_99 = new CSGetSkillCard();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSGetSkillCard = expr_99;
		}
		return cSGetSkillCard;
	}

	private static void Write(CSGM cSGM, ProtoWriter writer)
	{
		if (cSGM.GetType() != typeof(CSGM))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSGM), cSGM.GetType());
		}
		int expr_2D = cSGM.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		byte[] expr_4A = cSGM.data;
		if (expr_4A != null)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
			ProtoWriter.WriteBytes(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSGM, writer);
	}

	private static CSGM Read(CSGM cSGM, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSGM == null)
					{
						CSGM expr_79 = new CSGM();
						ProtoReader.NoteObject(expr_79, protoReader);
						cSGM = expr_79;
					}
					protoReader.AppendExtensionData(cSGM);
				}
				else
				{
					if (cSGM == null)
					{
						CSGM expr_49 = new CSGM();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSGM = expr_49;
					}
					byte[] array = ProtoReader.AppendBytes(cSGM.data, protoReader);
					if (array != null)
					{
						cSGM.data = array;
					}
				}
			}
			else
			{
				if (cSGM == null)
				{
					CSGM expr_19 = new CSGM();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSGM = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSGM.id = id;
			}
		}
		if (cSGM == null)
		{
			CSGM expr_A2 = new CSGM();
			ProtoReader.NoteObject(expr_A2, protoReader);
			cSGM = expr_A2;
		}
		return cSGM;
	}

	private static void Write(CSHeartbeat cSHeartbeat, ProtoWriter writer)
	{
		if (cSHeartbeat.GetType() != typeof(CSHeartbeat))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSHeartbeat), cSHeartbeat.GetType());
		}
		long expr_2D = cSHeartbeat.tmp;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = cSHeartbeat.noticeTime;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		long expr_79 = cSHeartbeat.chatTime;
		if (expr_79 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_79, writer);
		}
		int expr_9F = cSHeartbeat.flushRankHour;
		if (expr_9F != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_9F, writer);
		}
		long expr_BC = cSHeartbeat.activityTime;
		if (expr_BC != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_BC, writer);
		}
		ProtoWriter.AppendExtensionData(cSHeartbeat, writer);
	}

	private static CSHeartbeat Read(CSHeartbeat cSHeartbeat, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (cSHeartbeat == null)
								{
									CSHeartbeat expr_100 = new CSHeartbeat();
									ProtoReader.NoteObject(expr_100, protoReader);
									cSHeartbeat = expr_100;
								}
								protoReader.AppendExtensionData(cSHeartbeat);
							}
							else
							{
								if (cSHeartbeat == null)
								{
									CSHeartbeat expr_D9 = new CSHeartbeat();
									ProtoReader.NoteObject(expr_D9, protoReader);
									cSHeartbeat = expr_D9;
								}
								long num2 = protoReader.ReadInt64();
								cSHeartbeat.activityTime = num2;
							}
						}
						else
						{
							if (cSHeartbeat == null)
							{
								CSHeartbeat expr_A9 = new CSHeartbeat();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSHeartbeat = expr_A9;
							}
							int flushRankHour = protoReader.ReadInt32();
							cSHeartbeat.flushRankHour = flushRankHour;
						}
					}
					else
					{
						if (cSHeartbeat == null)
						{
							CSHeartbeat expr_79 = new CSHeartbeat();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSHeartbeat = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						cSHeartbeat.chatTime = num2;
					}
				}
				else
				{
					if (cSHeartbeat == null)
					{
						CSHeartbeat expr_49 = new CSHeartbeat();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSHeartbeat = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					cSHeartbeat.noticeTime = num2;
				}
			}
			else
			{
				if (cSHeartbeat == null)
				{
					CSHeartbeat expr_19 = new CSHeartbeat();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSHeartbeat = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				cSHeartbeat.tmp = num2;
			}
		}
		if (cSHeartbeat == null)
		{
			CSHeartbeat expr_129 = new CSHeartbeat();
			ProtoReader.NoteObject(expr_129, protoReader);
			cSHeartbeat = expr_129;
		}
		return cSHeartbeat;
	}

	private static void Write(CSIgnoreAllLegionApply cSIgnoreAllLegionApply, ProtoWriter writer)
	{
		if (cSIgnoreAllLegionApply.GetType() != typeof(CSIgnoreAllLegionApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSIgnoreAllLegionApply), cSIgnoreAllLegionApply.GetType());
		}
		int expr_2D = cSIgnoreAllLegionApply.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSIgnoreAllLegionApply, writer);
	}

	private static CSIgnoreAllLegionApply Read(CSIgnoreAllLegionApply cSIgnoreAllLegionApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSIgnoreAllLegionApply == null)
				{
					CSIgnoreAllLegionApply expr_40 = new CSIgnoreAllLegionApply();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSIgnoreAllLegionApply = expr_40;
				}
				protoReader.AppendExtensionData(cSIgnoreAllLegionApply);
			}
			else
			{
				if (cSIgnoreAllLegionApply == null)
				{
					CSIgnoreAllLegionApply expr_19 = new CSIgnoreAllLegionApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSIgnoreAllLegionApply = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSIgnoreAllLegionApply.id = id;
			}
		}
		if (cSIgnoreAllLegionApply == null)
		{
			CSIgnoreAllLegionApply expr_69 = new CSIgnoreAllLegionApply();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSIgnoreAllLegionApply = expr_69;
		}
		return cSIgnoreAllLegionApply;
	}

	private static void Write(CSIgnoreLegionApply cSIgnoreLegionApply, ProtoWriter writer)
	{
		if (cSIgnoreLegionApply.GetType() != typeof(CSIgnoreLegionApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSIgnoreLegionApply), cSIgnoreLegionApply.GetType());
		}
		long expr_2D = cSIgnoreLegionApply.applyId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSIgnoreLegionApply, writer);
	}

	private static CSIgnoreLegionApply Read(CSIgnoreLegionApply cSIgnoreLegionApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSIgnoreLegionApply == null)
				{
					CSIgnoreLegionApply expr_40 = new CSIgnoreLegionApply();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSIgnoreLegionApply = expr_40;
				}
				protoReader.AppendExtensionData(cSIgnoreLegionApply);
			}
			else
			{
				if (cSIgnoreLegionApply == null)
				{
					CSIgnoreLegionApply expr_19 = new CSIgnoreLegionApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSIgnoreLegionApply = expr_19;
				}
				long applyId = protoReader.ReadInt64();
				cSIgnoreLegionApply.applyId = applyId;
			}
		}
		if (cSIgnoreLegionApply == null)
		{
			CSIgnoreLegionApply expr_69 = new CSIgnoreLegionApply();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSIgnoreLegionApply = expr_69;
		}
		return cSIgnoreLegionApply;
	}

	private static void Write(CSItemList cSItemList, ProtoWriter writer)
	{
		if (cSItemList.GetType() != typeof(CSItemList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSItemList), cSItemList.GetType());
		}
		int expr_2D = cSItemList.typeId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSItemList, writer);
	}

	private static CSItemList Read(CSItemList cSItemList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSItemList == null)
				{
					CSItemList expr_40 = new CSItemList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSItemList = expr_40;
				}
				protoReader.AppendExtensionData(cSItemList);
			}
			else
			{
				if (cSItemList == null)
				{
					CSItemList expr_19 = new CSItemList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSItemList = expr_19;
				}
				int typeId = protoReader.ReadInt32();
				cSItemList.typeId = typeId;
			}
		}
		if (cSItemList == null)
		{
			CSItemList expr_69 = new CSItemList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSItemList = expr_69;
		}
		return cSItemList;
	}

	private static void Write(CSItemMix cSItemMix, ProtoWriter writer)
	{
		if (cSItemMix.GetType() != typeof(CSItemMix))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSItemMix), cSItemMix.GetType());
		}
		int expr_2D = cSItemMix.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSItemMix.itemNum;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSItemMix, writer);
	}

	private static CSItemMix Read(CSItemMix cSItemMix, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSItemMix == null)
					{
						CSItemMix expr_70 = new CSItemMix();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSItemMix = expr_70;
					}
					protoReader.AppendExtensionData(cSItemMix);
				}
				else
				{
					if (cSItemMix == null)
					{
						CSItemMix expr_49 = new CSItemMix();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSItemMix = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSItemMix.itemNum = num2;
				}
			}
			else
			{
				if (cSItemMix == null)
				{
					CSItemMix expr_19 = new CSItemMix();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSItemMix = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSItemMix.itemId = num2;
			}
		}
		if (cSItemMix == null)
		{
			CSItemMix expr_99 = new CSItemMix();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSItemMix = expr_99;
		}
		return cSItemMix;
	}

	private static void Write(CSLegionAdd cSLegionAdd, ProtoWriter writer)
	{
		if (cSLegionAdd.GetType() != typeof(CSLegionAdd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionAdd), cSLegionAdd.GetType());
		}
		long expr_2D = cSLegionAdd.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionAdd, writer);
	}

	private static CSLegionAdd Read(CSLegionAdd cSLegionAdd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLegionAdd == null)
				{
					CSLegionAdd expr_40 = new CSLegionAdd();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLegionAdd = expr_40;
				}
				protoReader.AppendExtensionData(cSLegionAdd);
			}
			else
			{
				if (cSLegionAdd == null)
				{
					CSLegionAdd expr_19 = new CSLegionAdd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionAdd = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSLegionAdd.legionId = legionId;
			}
		}
		if (cSLegionAdd == null)
		{
			CSLegionAdd expr_69 = new CSLegionAdd();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLegionAdd = expr_69;
		}
		return cSLegionAdd;
	}

	private static void Write(CSLegionCreate cSLegionCreate, ProtoWriter writer)
	{
		if (cSLegionCreate.GetType() != typeof(CSLegionCreate))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionCreate), cSLegionCreate.GetType());
		}
		string expr_2D = cSLegionCreate.name;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		int expr_5D = cSLegionCreate.logo;
		if (expr_5D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_5D, writer);
		}
		int expr_7A = cSLegionCreate.needMinMedal;
		if (expr_7A != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_7A, writer);
		}
		int expr_97 = cSLegionCreate.openType;
		if (expr_97 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_97, writer);
		}
		string expr_B4 = cSLegionCreate.notice;
		if (expr_B4 != null)
		{
			if (!(expr_B4 == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, writer);
				ProtoWriter.WriteString(expr_B4, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSLegionCreate, writer);
	}

	private static CSLegionCreate Read(CSLegionCreate cSLegionCreate, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (cSLegionCreate == null)
								{
									CSLegionCreate expr_106 = new CSLegionCreate();
									ProtoReader.NoteObject(expr_106, protoReader);
									cSLegionCreate = expr_106;
								}
								protoReader.AppendExtensionData(cSLegionCreate);
							}
							else
							{
								if (cSLegionCreate == null)
								{
									CSLegionCreate expr_DC = new CSLegionCreate();
									ProtoReader.NoteObject(expr_DC, protoReader);
									cSLegionCreate = expr_DC;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									cSLegionCreate.notice = text;
								}
							}
						}
						else
						{
							if (cSLegionCreate == null)
							{
								CSLegionCreate expr_AC = new CSLegionCreate();
								ProtoReader.NoteObject(expr_AC, protoReader);
								cSLegionCreate = expr_AC;
							}
							int num2 = protoReader.ReadInt32();
							cSLegionCreate.openType = num2;
						}
					}
					else
					{
						if (cSLegionCreate == null)
						{
							CSLegionCreate expr_7C = new CSLegionCreate();
							ProtoReader.NoteObject(expr_7C, protoReader);
							cSLegionCreate = expr_7C;
						}
						int num2 = protoReader.ReadInt32();
						cSLegionCreate.needMinMedal = num2;
					}
				}
				else
				{
					if (cSLegionCreate == null)
					{
						CSLegionCreate expr_4C = new CSLegionCreate();
						ProtoReader.NoteObject(expr_4C, protoReader);
						cSLegionCreate = expr_4C;
					}
					int num2 = protoReader.ReadInt32();
					cSLegionCreate.logo = num2;
				}
			}
			else
			{
				if (cSLegionCreate == null)
				{
					CSLegionCreate expr_19 = new CSLegionCreate();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionCreate = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSLegionCreate.name = text;
				}
			}
		}
		if (cSLegionCreate == null)
		{
			CSLegionCreate expr_12F = new CSLegionCreate();
			ProtoReader.NoteObject(expr_12F, protoReader);
			cSLegionCreate = expr_12F;
		}
		return cSLegionCreate;
	}

	private static void Write(CSLegionData cSLegionData, ProtoWriter writer)
	{
		if (cSLegionData.GetType() != typeof(CSLegionData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionData), cSLegionData.GetType());
		}
		long expr_2D = cSLegionData.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionData, writer);
	}

	private static CSLegionData Read(CSLegionData cSLegionData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLegionData == null)
				{
					CSLegionData expr_40 = new CSLegionData();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLegionData = expr_40;
				}
				protoReader.AppendExtensionData(cSLegionData);
			}
			else
			{
				if (cSLegionData == null)
				{
					CSLegionData expr_19 = new CSLegionData();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionData = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSLegionData.legionId = legionId;
			}
		}
		if (cSLegionData == null)
		{
			CSLegionData expr_69 = new CSLegionData();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLegionData = expr_69;
		}
		return cSLegionData;
	}

	private static void Write(CSLegionHelp cSLegionHelp, ProtoWriter writer)
	{
		if (cSLegionHelp.GetType() != typeof(CSLegionHelp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionHelp), cSLegionHelp.GetType());
		}
		long expr_2D = cSLegionHelp.applyId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionHelp, writer);
	}

	private static CSLegionHelp Read(CSLegionHelp cSLegionHelp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLegionHelp == null)
				{
					CSLegionHelp expr_40 = new CSLegionHelp();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLegionHelp = expr_40;
				}
				protoReader.AppendExtensionData(cSLegionHelp);
			}
			else
			{
				if (cSLegionHelp == null)
				{
					CSLegionHelp expr_19 = new CSLegionHelp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionHelp = expr_19;
				}
				long applyId = protoReader.ReadInt64();
				cSLegionHelp.applyId = applyId;
			}
		}
		if (cSLegionHelp == null)
		{
			CSLegionHelp expr_69 = new CSLegionHelp();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLegionHelp = expr_69;
		}
		return cSLegionHelp;
	}

	private static void Write(CSLegionHelpApply cSLegionHelpApply, ProtoWriter writer)
	{
		if (cSLegionHelpApply.GetType() != typeof(CSLegionHelpApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionHelpApply), cSLegionHelpApply.GetType());
		}
		long expr_2D = cSLegionHelpApply.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionHelpApply, writer);
	}

	private static CSLegionHelpApply Read(CSLegionHelpApply cSLegionHelpApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLegionHelpApply == null)
				{
					CSLegionHelpApply expr_40 = new CSLegionHelpApply();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLegionHelpApply = expr_40;
				}
				protoReader.AppendExtensionData(cSLegionHelpApply);
			}
			else
			{
				if (cSLegionHelpApply == null)
				{
					CSLegionHelpApply expr_19 = new CSLegionHelpApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionHelpApply = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSLegionHelpApply.buildingId = buildingId;
			}
		}
		if (cSLegionHelpApply == null)
		{
			CSLegionHelpApply expr_69 = new CSLegionHelpApply();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLegionHelpApply = expr_69;
		}
		return cSLegionHelpApply;
	}

	private static void Write(CSLegionJobUpOrDown cSLegionJobUpOrDown, ProtoWriter writer)
	{
		if (cSLegionJobUpOrDown.GetType() != typeof(CSLegionJobUpOrDown))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionJobUpOrDown), cSLegionJobUpOrDown.GetType());
		}
		long expr_2D = cSLegionJobUpOrDown.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = cSLegionJobUpOrDown.targetId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = cSLegionJobUpOrDown.type;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionJobUpOrDown, writer);
	}

	private static CSLegionJobUpOrDown Read(CSLegionJobUpOrDown cSLegionJobUpOrDown, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSLegionJobUpOrDown == null)
						{
							CSLegionJobUpOrDown expr_A0 = new CSLegionJobUpOrDown();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSLegionJobUpOrDown = expr_A0;
						}
						protoReader.AppendExtensionData(cSLegionJobUpOrDown);
					}
					else
					{
						if (cSLegionJobUpOrDown == null)
						{
							CSLegionJobUpOrDown expr_79 = new CSLegionJobUpOrDown();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSLegionJobUpOrDown = expr_79;
						}
						int type = protoReader.ReadInt32();
						cSLegionJobUpOrDown.type = type;
					}
				}
				else
				{
					if (cSLegionJobUpOrDown == null)
					{
						CSLegionJobUpOrDown expr_49 = new CSLegionJobUpOrDown();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSLegionJobUpOrDown = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					cSLegionJobUpOrDown.targetId = num2;
				}
			}
			else
			{
				if (cSLegionJobUpOrDown == null)
				{
					CSLegionJobUpOrDown expr_19 = new CSLegionJobUpOrDown();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionJobUpOrDown = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				cSLegionJobUpOrDown.legionId = num2;
			}
		}
		if (cSLegionJobUpOrDown == null)
		{
			CSLegionJobUpOrDown expr_C9 = new CSLegionJobUpOrDown();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSLegionJobUpOrDown = expr_C9;
		}
		return cSLegionJobUpOrDown;
	}

	private static void Write(CSLegionMemberData cSLegionMemberData, ProtoWriter writer)
	{
		if (cSLegionMemberData.GetType() != typeof(CSLegionMemberData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionMemberData), cSLegionMemberData.GetType());
		}
		long expr_2D = cSLegionMemberData.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionMemberData, writer);
	}

	private static CSLegionMemberData Read(CSLegionMemberData cSLegionMemberData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLegionMemberData == null)
				{
					CSLegionMemberData expr_40 = new CSLegionMemberData();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLegionMemberData = expr_40;
				}
				protoReader.AppendExtensionData(cSLegionMemberData);
			}
			else
			{
				if (cSLegionMemberData == null)
				{
					CSLegionMemberData expr_19 = new CSLegionMemberData();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionMemberData = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSLegionMemberData.legionId = legionId;
			}
		}
		if (cSLegionMemberData == null)
		{
			CSLegionMemberData expr_69 = new CSLegionMemberData();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLegionMemberData = expr_69;
		}
		return cSLegionMemberData;
	}

	private static void Write(CSLegionOut cSLegionOut, ProtoWriter writer)
	{
		if (cSLegionOut.GetType() != typeof(CSLegionOut))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLegionOut), cSLegionOut.GetType());
		}
		long expr_2D = cSLegionOut.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLegionOut, writer);
	}

	private static CSLegionOut Read(CSLegionOut cSLegionOut, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLegionOut == null)
				{
					CSLegionOut expr_40 = new CSLegionOut();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLegionOut = expr_40;
				}
				protoReader.AppendExtensionData(cSLegionOut);
			}
			else
			{
				if (cSLegionOut == null)
				{
					CSLegionOut expr_19 = new CSLegionOut();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLegionOut = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSLegionOut.legionId = legionId;
			}
		}
		if (cSLegionOut == null)
		{
			CSLegionOut expr_69 = new CSLegionOut();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLegionOut = expr_69;
		}
		return cSLegionOut;
	}

	private static void Write(CSLogin cSLogin, ProtoWriter writer)
	{
		if (cSLogin.GetType() != typeof(CSLogin))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLogin), cSLogin.GetType());
		}
		string expr_2D = cSLogin.platformId;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		string expr_5D = cSLogin.imei;
		if (expr_5D != null)
		{
			if (!(expr_5D == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_5D, writer);
			}
		}
		string expr_8D = cSLogin.equModel;
		if (expr_8D != null)
		{
			if (!(expr_8D == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_8D, writer);
			}
		}
		string expr_BD = cSLogin.token;
		if (expr_BD != null)
		{
			if (!(expr_BD == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, writer);
				ProtoWriter.WriteString(expr_BD, writer);
			}
		}
		long expr_ED = cSLogin.time;
		if (expr_ED != 0L)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_ED, writer);
		}
		string expr_113 = cSLogin.channelId;
		if (expr_113 != null)
		{
			if (!(expr_113 == ""))
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, writer);
				ProtoWriter.WriteString(expr_113, writer);
			}
		}
		bool expr_143 = cSLogin.sdk;
		if (expr_143)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_143, writer);
		}
		string expr_160 = cSLogin.clientVersion;
		if (expr_160 != null)
		{
			if (!(expr_160 == ""))
			{
				ProtoWriter.WriteFieldHeader(9, WireType.String, writer);
				ProtoWriter.WriteString(expr_160, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSLogin, writer);
	}

	private static CSLogin Read(CSLogin cSLogin, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (cSLogin == null)
											{
												CSLogin expr_1A3 = new CSLogin();
												ProtoReader.NoteObject(expr_1A3, protoReader);
												cSLogin = expr_1A3;
											}
											protoReader.AppendExtensionData(cSLogin);
										}
										else
										{
											if (cSLogin == null)
											{
												CSLogin expr_179 = new CSLogin();
												ProtoReader.NoteObject(expr_179, protoReader);
												cSLogin = expr_179;
											}
											string text = protoReader.ReadString();
											if (text != null)
											{
												cSLogin.clientVersion = text;
											}
										}
									}
									else
									{
										if (cSLogin == null)
										{
											CSLogin expr_148 = new CSLogin();
											ProtoReader.NoteObject(expr_148, protoReader);
											cSLogin = expr_148;
										}
										bool sdk = protoReader.ReadBoolean();
										cSLogin.sdk = sdk;
									}
								}
								else
								{
									if (cSLogin == null)
									{
										CSLogin expr_115 = new CSLogin();
										ProtoReader.NoteObject(expr_115, protoReader);
										cSLogin = expr_115;
									}
									string text = protoReader.ReadString();
									if (text != null)
									{
										cSLogin.channelId = text;
									}
								}
							}
							else
							{
								if (cSLogin == null)
								{
									CSLogin expr_E5 = new CSLogin();
									ProtoReader.NoteObject(expr_E5, protoReader);
									cSLogin = expr_E5;
								}
								long time = protoReader.ReadInt64();
								cSLogin.time = time;
							}
						}
						else
						{
							if (cSLogin == null)
							{
								CSLogin expr_B2 = new CSLogin();
								ProtoReader.NoteObject(expr_B2, protoReader);
								cSLogin = expr_B2;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								cSLogin.token = text;
							}
						}
					}
					else
					{
						if (cSLogin == null)
						{
							CSLogin expr_7F = new CSLogin();
							ProtoReader.NoteObject(expr_7F, protoReader);
							cSLogin = expr_7F;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							cSLogin.equModel = text;
						}
					}
				}
				else
				{
					if (cSLogin == null)
					{
						CSLogin expr_4C = new CSLogin();
						ProtoReader.NoteObject(expr_4C, protoReader);
						cSLogin = expr_4C;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						cSLogin.imei = text;
					}
				}
			}
			else
			{
				if (cSLogin == null)
				{
					CSLogin expr_19 = new CSLogin();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLogin = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSLogin.platformId = text;
				}
			}
		}
		if (cSLogin == null)
		{
			CSLogin expr_1CC = new CSLogin();
			ProtoReader.NoteObject(expr_1CC, protoReader);
			cSLogin = expr_1CC;
		}
		return cSLogin;
	}

	private static void Write(CSLoginData cSLoginData, ProtoWriter writer)
	{
		if (cSLoginData.GetType() != typeof(CSLoginData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSLoginData), cSLoginData.GetType());
		}
		int expr_2D = cSLoginData.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSLoginData, writer);
	}

	private static CSLoginData Read(CSLoginData cSLoginData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSLoginData == null)
				{
					CSLoginData expr_40 = new CSLoginData();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSLoginData = expr_40;
				}
				protoReader.AppendExtensionData(cSLoginData);
			}
			else
			{
				if (cSLoginData == null)
				{
					CSLoginData expr_19 = new CSLoginData();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSLoginData = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSLoginData.id = id;
			}
		}
		if (cSLoginData == null)
		{
			CSLoginData expr_69 = new CSLoginData();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSLoginData = expr_69;
		}
		return cSLoginData;
	}

	private static void Write(CSMilitaryRankPrize cSMilitaryRankPrize, ProtoWriter writer)
	{
		if (cSMilitaryRankPrize.GetType() != typeof(CSMilitaryRankPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSMilitaryRankPrize), cSMilitaryRankPrize.GetType());
		}
		int expr_2D = cSMilitaryRankPrize.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSMilitaryRankPrize, writer);
	}

	private static CSMilitaryRankPrize Read(CSMilitaryRankPrize cSMilitaryRankPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSMilitaryRankPrize == null)
				{
					CSMilitaryRankPrize expr_40 = new CSMilitaryRankPrize();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSMilitaryRankPrize = expr_40;
				}
				protoReader.AppendExtensionData(cSMilitaryRankPrize);
			}
			else
			{
				if (cSMilitaryRankPrize == null)
				{
					CSMilitaryRankPrize expr_19 = new CSMilitaryRankPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSMilitaryRankPrize = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSMilitaryRankPrize.id = id;
			}
		}
		if (cSMilitaryRankPrize == null)
		{
			CSMilitaryRankPrize expr_69 = new CSMilitaryRankPrize();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSMilitaryRankPrize = expr_69;
		}
		return cSMilitaryRankPrize;
	}

	private static void Write(CSModifyLegionInfo cSModifyLegionInfo, ProtoWriter protoWriter)
	{
		if (cSModifyLegionInfo.GetType() != typeof(CSModifyLegionInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSModifyLegionInfo), cSModifyLegionInfo.GetType());
		}
		long expr_2D = cSModifyLegionInfo.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStructStr> expr_53 = cSModifyLegionInfo.data;
		if (expr_53 != null)
		{
			List<KVStructStr> list = expr_53;
			foreach (KVStructStr arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(cSModifyLegionInfo, protoWriter);
	}

	private static CSModifyLegionInfo Read(CSModifyLegionInfo cSModifyLegionInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSModifyLegionInfo == null)
					{
						CSModifyLegionInfo expr_A2 = new CSModifyLegionInfo();
						ProtoReader.NoteObject(expr_A2, protoReader);
						cSModifyLegionInfo = expr_A2;
					}
					protoReader.AppendExtensionData(cSModifyLegionInfo);
				}
				else
				{
					if (cSModifyLegionInfo == null)
					{
						CSModifyLegionInfo expr_49 = new CSModifyLegionInfo();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSModifyLegionInfo = expr_49;
					}
					List<KVStructStr> list = cSModifyLegionInfo.data;
					if (list == null)
					{
						list = new List<KVStructStr>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStructStr> arg_81_0 = list;
						KVStructStr arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStructStr arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (cSModifyLegionInfo == null)
				{
					CSModifyLegionInfo expr_19 = new CSModifyLegionInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSModifyLegionInfo = expr_19;
				}
				long legionId = protoReader.ReadInt64();
				cSModifyLegionInfo.legionId = legionId;
			}
		}
		if (cSModifyLegionInfo == null)
		{
			CSModifyLegionInfo expr_CB = new CSModifyLegionInfo();
			ProtoReader.NoteObject(expr_CB, protoReader);
			cSModifyLegionInfo = expr_CB;
		}
		return cSModifyLegionInfo;
	}

	private static void Write(CSNewGuide cSNewGuide, ProtoWriter writer)
	{
		if (cSNewGuide.GetType() != typeof(CSNewGuide))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSNewGuide), cSNewGuide.GetType());
		}
		int expr_2D = cSNewGuide.guideId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSNewGuide.tmp;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		int expr_67 = cSNewGuide.taskGuideId;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		ProtoWriter.AppendExtensionData(cSNewGuide, writer);
	}

	private static CSNewGuide Read(CSNewGuide cSNewGuide, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSNewGuide == null)
						{
							CSNewGuide expr_A0 = new CSNewGuide();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSNewGuide = expr_A0;
						}
						protoReader.AppendExtensionData(cSNewGuide);
					}
					else
					{
						if (cSNewGuide == null)
						{
							CSNewGuide expr_79 = new CSNewGuide();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSNewGuide = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSNewGuide.taskGuideId = num2;
					}
				}
				else
				{
					if (cSNewGuide == null)
					{
						CSNewGuide expr_49 = new CSNewGuide();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSNewGuide = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSNewGuide.tmp = num2;
				}
			}
			else
			{
				if (cSNewGuide == null)
				{
					CSNewGuide expr_19 = new CSNewGuide();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSNewGuide = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSNewGuide.guideId = num2;
			}
		}
		if (cSNewGuide == null)
		{
			CSNewGuide expr_C9 = new CSNewGuide();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSNewGuide = expr_C9;
		}
		return cSNewGuide;
	}

	private static void Write(CSOfficerAddExp cSOfficerAddExp, ProtoWriter writer)
	{
		if (cSOfficerAddExp.GetType() != typeof(CSOfficerAddExp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerAddExp), cSOfficerAddExp.GetType());
		}
		long expr_2D = cSOfficerAddExp.officerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSOfficerAddExp.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSOfficerAddExp.money;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerAddExp, writer);
	}

	private static CSOfficerAddExp Read(CSOfficerAddExp cSOfficerAddExp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSOfficerAddExp == null)
						{
							CSOfficerAddExp expr_A0 = new CSOfficerAddExp();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSOfficerAddExp = expr_A0;
						}
						protoReader.AppendExtensionData(cSOfficerAddExp);
					}
					else
					{
						if (cSOfficerAddExp == null)
						{
							CSOfficerAddExp expr_79 = new CSOfficerAddExp();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSOfficerAddExp = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSOfficerAddExp.money = num2;
					}
				}
				else
				{
					if (cSOfficerAddExp == null)
					{
						CSOfficerAddExp expr_49 = new CSOfficerAddExp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOfficerAddExp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSOfficerAddExp.itemId = num2;
				}
			}
			else
			{
				if (cSOfficerAddExp == null)
				{
					CSOfficerAddExp expr_19 = new CSOfficerAddExp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerAddExp = expr_19;
				}
				long officerId = protoReader.ReadInt64();
				cSOfficerAddExp.officerId = officerId;
			}
		}
		if (cSOfficerAddExp == null)
		{
			CSOfficerAddExp expr_C9 = new CSOfficerAddExp();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSOfficerAddExp = expr_C9;
		}
		return cSOfficerAddExp;
	}

	private static void Write(CSOfficerDismiss cSOfficerDismiss, ProtoWriter writer)
	{
		if (cSOfficerDismiss.GetType() != typeof(CSOfficerDismiss))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerDismiss), cSOfficerDismiss.GetType());
		}
		long expr_2D = cSOfficerDismiss.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerDismiss, writer);
	}

	private static CSOfficerDismiss Read(CSOfficerDismiss cSOfficerDismiss, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSOfficerDismiss == null)
				{
					CSOfficerDismiss expr_40 = new CSOfficerDismiss();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSOfficerDismiss = expr_40;
				}
				protoReader.AppendExtensionData(cSOfficerDismiss);
			}
			else
			{
				if (cSOfficerDismiss == null)
				{
					CSOfficerDismiss expr_19 = new CSOfficerDismiss();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerDismiss = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSOfficerDismiss.id = id;
			}
		}
		if (cSOfficerDismiss == null)
		{
			CSOfficerDismiss expr_69 = new CSOfficerDismiss();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSOfficerDismiss = expr_69;
		}
		return cSOfficerDismiss;
	}

	private static void Write(CSOfficerEmploy cSOfficerEmploy, ProtoWriter writer)
	{
		if (cSOfficerEmploy.GetType() != typeof(CSOfficerEmploy))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerEmploy), cSOfficerEmploy.GetType());
		}
		long expr_2D = cSOfficerEmploy.officerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSOfficerEmploy.money;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerEmploy, writer);
	}

	private static CSOfficerEmploy Read(CSOfficerEmploy cSOfficerEmploy, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSOfficerEmploy == null)
					{
						CSOfficerEmploy expr_70 = new CSOfficerEmploy();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSOfficerEmploy = expr_70;
					}
					protoReader.AppendExtensionData(cSOfficerEmploy);
				}
				else
				{
					if (cSOfficerEmploy == null)
					{
						CSOfficerEmploy expr_49 = new CSOfficerEmploy();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOfficerEmploy = expr_49;
					}
					int money = protoReader.ReadInt32();
					cSOfficerEmploy.money = money;
				}
			}
			else
			{
				if (cSOfficerEmploy == null)
				{
					CSOfficerEmploy expr_19 = new CSOfficerEmploy();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerEmploy = expr_19;
				}
				long officerId = protoReader.ReadInt64();
				cSOfficerEmploy.officerId = officerId;
			}
		}
		if (cSOfficerEmploy == null)
		{
			CSOfficerEmploy expr_99 = new CSOfficerEmploy();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSOfficerEmploy = expr_99;
		}
		return cSOfficerEmploy;
	}

	private static void Write(CSOfficerEquOn cSOfficerEquOn, ProtoWriter writer)
	{
		if (cSOfficerEquOn.GetType() != typeof(CSOfficerEquOn))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerEquOn), cSOfficerEquOn.GetType());
		}
		long expr_2D = cSOfficerEquOn.equId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = cSOfficerEquOn.officerId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = cSOfficerEquOn.equLoc;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerEquOn, writer);
	}

	private static CSOfficerEquOn Read(CSOfficerEquOn cSOfficerEquOn, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSOfficerEquOn == null)
						{
							CSOfficerEquOn expr_A0 = new CSOfficerEquOn();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSOfficerEquOn = expr_A0;
						}
						protoReader.AppendExtensionData(cSOfficerEquOn);
					}
					else
					{
						if (cSOfficerEquOn == null)
						{
							CSOfficerEquOn expr_79 = new CSOfficerEquOn();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSOfficerEquOn = expr_79;
						}
						int equLoc = protoReader.ReadInt32();
						cSOfficerEquOn.equLoc = equLoc;
					}
				}
				else
				{
					if (cSOfficerEquOn == null)
					{
						CSOfficerEquOn expr_49 = new CSOfficerEquOn();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOfficerEquOn = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					cSOfficerEquOn.officerId = num2;
				}
			}
			else
			{
				if (cSOfficerEquOn == null)
				{
					CSOfficerEquOn expr_19 = new CSOfficerEquOn();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerEquOn = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				cSOfficerEquOn.equId = num2;
			}
		}
		if (cSOfficerEquOn == null)
		{
			CSOfficerEquOn expr_C9 = new CSOfficerEquOn();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSOfficerEquOn = expr_C9;
		}
		return cSOfficerEquOn;
	}

	private static void Write(CSOfficerFreeze cSOfficerFreeze, ProtoWriter writer)
	{
		if (cSOfficerFreeze.GetType() != typeof(CSOfficerFreeze))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerFreeze), cSOfficerFreeze.GetType());
		}
		long expr_2D = cSOfficerFreeze.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerFreeze, writer);
	}

	private static CSOfficerFreeze Read(CSOfficerFreeze cSOfficerFreeze, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSOfficerFreeze == null)
				{
					CSOfficerFreeze expr_40 = new CSOfficerFreeze();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSOfficerFreeze = expr_40;
				}
				protoReader.AppendExtensionData(cSOfficerFreeze);
			}
			else
			{
				if (cSOfficerFreeze == null)
				{
					CSOfficerFreeze expr_19 = new CSOfficerFreeze();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerFreeze = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSOfficerFreeze.id = id;
			}
		}
		if (cSOfficerFreeze == null)
		{
			CSOfficerFreeze expr_69 = new CSOfficerFreeze();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSOfficerFreeze = expr_69;
		}
		return cSOfficerFreeze;
	}

	private static void Write(CSOfficerList cSOfficerList, ProtoWriter writer)
	{
		if (cSOfficerList.GetType() != typeof(CSOfficerList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerList), cSOfficerList.GetType());
		}
		int expr_2D = cSOfficerList.typeId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerList, writer);
	}

	private static CSOfficerList Read(CSOfficerList cSOfficerList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSOfficerList == null)
				{
					CSOfficerList expr_40 = new CSOfficerList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSOfficerList = expr_40;
				}
				protoReader.AppendExtensionData(cSOfficerList);
			}
			else
			{
				if (cSOfficerList == null)
				{
					CSOfficerList expr_19 = new CSOfficerList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerList = expr_19;
				}
				int typeId = protoReader.ReadInt32();
				cSOfficerList.typeId = typeId;
			}
		}
		if (cSOfficerList == null)
		{
			CSOfficerList expr_69 = new CSOfficerList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSOfficerList = expr_69;
		}
		return cSOfficerList;
	}

	private static void Write(CSOfficerRecruit cSOfficerRecruit, ProtoWriter writer)
	{
		if (cSOfficerRecruit.GetType() != typeof(CSOfficerRecruit))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerRecruit), cSOfficerRecruit.GetType());
		}
		int expr_2D = cSOfficerRecruit.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSOfficerRecruit.recruitType;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerRecruit, writer);
	}

	private static CSOfficerRecruit Read(CSOfficerRecruit cSOfficerRecruit, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 3)
				{
					if (cSOfficerRecruit == null)
					{
						CSOfficerRecruit expr_70 = new CSOfficerRecruit();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSOfficerRecruit = expr_70;
					}
					protoReader.AppendExtensionData(cSOfficerRecruit);
				}
				else
				{
					if (cSOfficerRecruit == null)
					{
						CSOfficerRecruit expr_49 = new CSOfficerRecruit();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOfficerRecruit = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSOfficerRecruit.recruitType = num2;
				}
			}
			else
			{
				if (cSOfficerRecruit == null)
				{
					CSOfficerRecruit expr_19 = new CSOfficerRecruit();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerRecruit = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSOfficerRecruit.type = num2;
			}
		}
		if (cSOfficerRecruit == null)
		{
			CSOfficerRecruit expr_99 = new CSOfficerRecruit();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSOfficerRecruit = expr_99;
		}
		return cSOfficerRecruit;
	}

	private static void Write(CSOfficerSkillUp cSOfficerSkillUp, ProtoWriter writer)
	{
		if (cSOfficerSkillUp.GetType() != typeof(CSOfficerSkillUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerSkillUp), cSOfficerSkillUp.GetType());
		}
		long expr_2D = cSOfficerSkillUp.officerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSOfficerSkillUp.skillId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSOfficerSkillUp.type;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerSkillUp, writer);
	}

	private static CSOfficerSkillUp Read(CSOfficerSkillUp cSOfficerSkillUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSOfficerSkillUp == null)
						{
							CSOfficerSkillUp expr_A0 = new CSOfficerSkillUp();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSOfficerSkillUp = expr_A0;
						}
						protoReader.AppendExtensionData(cSOfficerSkillUp);
					}
					else
					{
						if (cSOfficerSkillUp == null)
						{
							CSOfficerSkillUp expr_79 = new CSOfficerSkillUp();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSOfficerSkillUp = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSOfficerSkillUp.type = num2;
					}
				}
				else
				{
					if (cSOfficerSkillUp == null)
					{
						CSOfficerSkillUp expr_49 = new CSOfficerSkillUp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOfficerSkillUp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSOfficerSkillUp.skillId = num2;
				}
			}
			else
			{
				if (cSOfficerSkillUp == null)
				{
					CSOfficerSkillUp expr_19 = new CSOfficerSkillUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerSkillUp = expr_19;
				}
				long officerId = protoReader.ReadInt64();
				cSOfficerSkillUp.officerId = officerId;
			}
		}
		if (cSOfficerSkillUp == null)
		{
			CSOfficerSkillUp expr_C9 = new CSOfficerSkillUp();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSOfficerSkillUp = expr_C9;
		}
		return cSOfficerSkillUp;
	}

	private static void Write(CSOfficerUpQuality cSOfficerUpQuality, ProtoWriter writer)
	{
		if (cSOfficerUpQuality.GetType() != typeof(CSOfficerUpQuality))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOfficerUpQuality), cSOfficerUpQuality.GetType());
		}
		long expr_2D = cSOfficerUpQuality.officerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSOfficerUpQuality.money;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSOfficerUpQuality, writer);
	}

	private static CSOfficerUpQuality Read(CSOfficerUpQuality cSOfficerUpQuality, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSOfficerUpQuality == null)
					{
						CSOfficerUpQuality expr_70 = new CSOfficerUpQuality();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSOfficerUpQuality = expr_70;
					}
					protoReader.AppendExtensionData(cSOfficerUpQuality);
				}
				else
				{
					if (cSOfficerUpQuality == null)
					{
						CSOfficerUpQuality expr_49 = new CSOfficerUpQuality();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOfficerUpQuality = expr_49;
					}
					int money = protoReader.ReadInt32();
					cSOfficerUpQuality.money = money;
				}
			}
			else
			{
				if (cSOfficerUpQuality == null)
				{
					CSOfficerUpQuality expr_19 = new CSOfficerUpQuality();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOfficerUpQuality = expr_19;
				}
				long officerId = protoReader.ReadInt64();
				cSOfficerUpQuality.officerId = officerId;
			}
		}
		if (cSOfficerUpQuality == null)
		{
			CSOfficerUpQuality expr_99 = new CSOfficerUpQuality();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSOfficerUpQuality = expr_99;
		}
		return cSOfficerUpQuality;
	}

	private static void Write(CSOnlineRewards cSOnlineRewards, ProtoWriter writer)
	{
		if (cSOnlineRewards.GetType() != typeof(CSOnlineRewards))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOnlineRewards), cSOnlineRewards.GetType());
		}
		int expr_2D = cSOnlineRewards.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSOnlineRewards, writer);
	}

	private static CSOnlineRewards Read(CSOnlineRewards cSOnlineRewards, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSOnlineRewards == null)
				{
					CSOnlineRewards expr_40 = new CSOnlineRewards();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSOnlineRewards = expr_40;
				}
				protoReader.AppendExtensionData(cSOnlineRewards);
			}
			else
			{
				if (cSOnlineRewards == null)
				{
					CSOnlineRewards expr_19 = new CSOnlineRewards();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOnlineRewards = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSOnlineRewards.id = id;
			}
		}
		if (cSOnlineRewards == null)
		{
			CSOnlineRewards expr_69 = new CSOnlineRewards();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSOnlineRewards = expr_69;
		}
		return cSOnlineRewards;
	}

	private static void Write(CSOpenBattleBox cSOpenBattleBox, ProtoWriter writer)
	{
		if (cSOpenBattleBox.GetType() != typeof(CSOpenBattleBox))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOpenBattleBox), cSOpenBattleBox.GetType());
		}
		int expr_2D = cSOpenBattleBox.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSOpenBattleBox.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		int expr_67 = cSOpenBattleBox.battleId;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_67, writer);
		}
		ProtoWriter.AppendExtensionData(cSOpenBattleBox, writer);
	}

	private static CSOpenBattleBox Read(CSOpenBattleBox cSOpenBattleBox, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSOpenBattleBox == null)
						{
							CSOpenBattleBox expr_A0 = new CSOpenBattleBox();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSOpenBattleBox = expr_A0;
						}
						protoReader.AppendExtensionData(cSOpenBattleBox);
					}
					else
					{
						if (cSOpenBattleBox == null)
						{
							CSOpenBattleBox expr_79 = new CSOpenBattleBox();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSOpenBattleBox = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSOpenBattleBox.battleId = num2;
					}
				}
				else
				{
					if (cSOpenBattleBox == null)
					{
						CSOpenBattleBox expr_49 = new CSOpenBattleBox();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOpenBattleBox = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSOpenBattleBox.money = num2;
				}
			}
			else
			{
				if (cSOpenBattleBox == null)
				{
					CSOpenBattleBox expr_19 = new CSOpenBattleBox();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOpenBattleBox = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSOpenBattleBox.itemId = num2;
			}
		}
		if (cSOpenBattleBox == null)
		{
			CSOpenBattleBox expr_C9 = new CSOpenBattleBox();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSOpenBattleBox = expr_C9;
		}
		return cSOpenBattleBox;
	}

	private static void Write(CSOpenBattleFieldBox cSOpenBattleFieldBox, ProtoWriter writer)
	{
		if (cSOpenBattleFieldBox.GetType() != typeof(CSOpenBattleFieldBox))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOpenBattleFieldBox), cSOpenBattleFieldBox.GetType());
		}
		int expr_2D = cSOpenBattleFieldBox.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSOpenBattleFieldBox.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSOpenBattleFieldBox, writer);
	}

	private static CSOpenBattleFieldBox Read(CSOpenBattleFieldBox cSOpenBattleFieldBox, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSOpenBattleFieldBox == null)
					{
						CSOpenBattleFieldBox expr_70 = new CSOpenBattleFieldBox();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSOpenBattleFieldBox = expr_70;
					}
					protoReader.AppendExtensionData(cSOpenBattleFieldBox);
				}
				else
				{
					if (cSOpenBattleFieldBox == null)
					{
						CSOpenBattleFieldBox expr_49 = new CSOpenBattleFieldBox();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOpenBattleFieldBox = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSOpenBattleFieldBox.money = num2;
				}
			}
			else
			{
				if (cSOpenBattleFieldBox == null)
				{
					CSOpenBattleFieldBox expr_19 = new CSOpenBattleFieldBox();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOpenBattleFieldBox = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSOpenBattleFieldBox.itemId = num2;
			}
		}
		if (cSOpenBattleFieldBox == null)
		{
			CSOpenBattleFieldBox expr_99 = new CSOpenBattleFieldBox();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSOpenBattleFieldBox = expr_99;
		}
		return cSOpenBattleFieldBox;
	}

	private static void Write(CSOpenBox cSOpenBox, ProtoWriter writer)
	{
		if (cSOpenBox.GetType() != typeof(CSOpenBox))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOpenBox), cSOpenBox.GetType());
		}
		int expr_2D = cSOpenBox.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSOpenBox, writer);
	}

	private static CSOpenBox Read(CSOpenBox cSOpenBox, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (cSOpenBox == null)
				{
					CSOpenBox expr_40 = new CSOpenBox();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSOpenBox = expr_40;
				}
				protoReader.AppendExtensionData(cSOpenBox);
			}
			else
			{
				if (cSOpenBox == null)
				{
					CSOpenBox expr_19 = new CSOpenBox();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOpenBox = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSOpenBox.id = id;
			}
		}
		if (cSOpenBox == null)
		{
			CSOpenBox expr_69 = new CSOpenBox();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSOpenBox = expr_69;
		}
		return cSOpenBox;
	}

	private static void Write(CSOpenCloud cSOpenCloud, ProtoWriter writer)
	{
		if (cSOpenCloud.GetType() != typeof(CSOpenCloud))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOpenCloud), cSOpenCloud.GetType());
		}
		int expr_2D = cSOpenCloud.cloudGroupId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSOpenCloud.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSOpenCloud, writer);
	}

	private static CSOpenCloud Read(CSOpenCloud cSOpenCloud, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSOpenCloud == null)
					{
						CSOpenCloud expr_70 = new CSOpenCloud();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSOpenCloud = expr_70;
					}
					protoReader.AppendExtensionData(cSOpenCloud);
				}
				else
				{
					if (cSOpenCloud == null)
					{
						CSOpenCloud expr_49 = new CSOpenCloud();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSOpenCloud = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSOpenCloud.money = num2;
				}
			}
			else
			{
				if (cSOpenCloud == null)
				{
					CSOpenCloud expr_19 = new CSOpenCloud();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOpenCloud = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSOpenCloud.cloudGroupId = num2;
			}
		}
		if (cSOpenCloud == null)
		{
			CSOpenCloud expr_99 = new CSOpenCloud();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSOpenCloud = expr_99;
		}
		return cSOpenCloud;
	}

	private static void Write(CSOpenEliteBox cSOpenEliteBox, ProtoWriter writer)
	{
		if (cSOpenEliteBox.GetType() != typeof(CSOpenEliteBox))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSOpenEliteBox), cSOpenEliteBox.GetType());
		}
		int expr_2D = cSOpenEliteBox.boxId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSOpenEliteBox, writer);
	}

	private static CSOpenEliteBox Read(CSOpenEliteBox cSOpenEliteBox, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSOpenEliteBox == null)
				{
					CSOpenEliteBox expr_40 = new CSOpenEliteBox();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSOpenEliteBox = expr_40;
				}
				protoReader.AppendExtensionData(cSOpenEliteBox);
			}
			else
			{
				if (cSOpenEliteBox == null)
				{
					CSOpenEliteBox expr_19 = new CSOpenEliteBox();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSOpenEliteBox = expr_19;
				}
				int boxId = protoReader.ReadInt32();
				cSOpenEliteBox.boxId = boxId;
			}
		}
		if (cSOpenEliteBox == null)
		{
			CSOpenEliteBox expr_69 = new CSOpenEliteBox();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSOpenEliteBox = expr_69;
		}
		return cSOpenEliteBox;
	}

	private static void Write(CSPatrolArmyConfigure cSPatrolArmyConfigure, ProtoWriter writer)
	{
		if (cSPatrolArmyConfigure.GetType() != typeof(CSPatrolArmyConfigure))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSPatrolArmyConfigure), cSPatrolArmyConfigure.GetType());
		}
		long expr_2D = cSPatrolArmyConfigure.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSPatrolArmyConfigure.money;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSPatrolArmyConfigure.waves;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = cSPatrolArmyConfigure.configureType;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		ProtoWriter.AppendExtensionData(cSPatrolArmyConfigure, writer);
	}

	private static CSPatrolArmyConfigure Read(CSPatrolArmyConfigure cSPatrolArmyConfigure, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (cSPatrolArmyConfigure == null)
							{
								CSPatrolArmyConfigure expr_D0 = new CSPatrolArmyConfigure();
								ProtoReader.NoteObject(expr_D0, protoReader);
								cSPatrolArmyConfigure = expr_D0;
							}
							protoReader.AppendExtensionData(cSPatrolArmyConfigure);
						}
						else
						{
							if (cSPatrolArmyConfigure == null)
							{
								CSPatrolArmyConfigure expr_A9 = new CSPatrolArmyConfigure();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSPatrolArmyConfigure = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							cSPatrolArmyConfigure.configureType = num2;
						}
					}
					else
					{
						if (cSPatrolArmyConfigure == null)
						{
							CSPatrolArmyConfigure expr_79 = new CSPatrolArmyConfigure();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSPatrolArmyConfigure = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSPatrolArmyConfigure.waves = num2;
					}
				}
				else
				{
					if (cSPatrolArmyConfigure == null)
					{
						CSPatrolArmyConfigure expr_49 = new CSPatrolArmyConfigure();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSPatrolArmyConfigure = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSPatrolArmyConfigure.money = num2;
				}
			}
			else
			{
				if (cSPatrolArmyConfigure == null)
				{
					CSPatrolArmyConfigure expr_19 = new CSPatrolArmyConfigure();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSPatrolArmyConfigure = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSPatrolArmyConfigure.buildingId = buildingId;
			}
		}
		if (cSPatrolArmyConfigure == null)
		{
			CSPatrolArmyConfigure expr_F9 = new CSPatrolArmyConfigure();
			ProtoReader.NoteObject(expr_F9, protoReader);
			cSPatrolArmyConfigure = expr_F9;
		}
		return cSPatrolArmyConfigure;
	}

	private static void Write(CSPayCallback cSPayCallback, ProtoWriter writer)
	{
		if (cSPayCallback.GetType() != typeof(CSPayCallback))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSPayCallback), cSPayCallback.GetType());
		}
		string expr_2D = cSPayCallback.userid;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		string expr_5D = cSPayCallback.appid;
		if (expr_5D != null)
		{
			if (!(expr_5D == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_5D, writer);
			}
		}
		string expr_8D = cSPayCallback.goodsid;
		if (expr_8D != null)
		{
			if (!(expr_8D == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_8D, writer);
			}
		}
		string expr_BD = cSPayCallback.money;
		if (expr_BD != null)
		{
			if (!(expr_BD == ""))
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, writer);
				ProtoWriter.WriteString(expr_BD, writer);
			}
		}
		string expr_ED = cSPayCallback.noteone;
		if (expr_ED != null)
		{
			if (!(expr_ED == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, writer);
				ProtoWriter.WriteString(expr_ED, writer);
			}
		}
		string expr_11D = cSPayCallback.notetwo;
		if (expr_11D != null)
		{
			if (!(expr_11D == ""))
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, writer);
				ProtoWriter.WriteString(expr_11D, writer);
			}
		}
		string expr_14D = cSPayCallback.cooorderserial;
		if (expr_14D != null)
		{
			if (!(expr_14D == ""))
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, writer);
				ProtoWriter.WriteString(expr_14D, writer);
			}
		}
		string expr_17D = cSPayCallback.rolename;
		if (expr_17D != null)
		{
			if (!(expr_17D == ""))
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, writer);
				ProtoWriter.WriteString(expr_17D, writer);
			}
		}
		string expr_1AD = cSPayCallback.serverid;
		if (expr_1AD != null)
		{
			if (!(expr_1AD == ""))
			{
				ProtoWriter.WriteFieldHeader(9, WireType.String, writer);
				ProtoWriter.WriteString(expr_1AD, writer);
			}
		}
		string expr_1DE = cSPayCallback.goodscount;
		if (expr_1DE != null)
		{
			if (!(expr_1DE == ""))
			{
				ProtoWriter.WriteFieldHeader(10, WireType.String, writer);
				ProtoWriter.WriteString(expr_1DE, writer);
			}
		}
		string expr_20F = cSPayCallback.goodsname;
		if (expr_20F != null)
		{
			if (!(expr_20F == ""))
			{
				ProtoWriter.WriteFieldHeader(11, WireType.String, writer);
				ProtoWriter.WriteString(expr_20F, writer);
			}
		}
		string expr_240 = cSPayCallback.serialnumber;
		if (expr_240 != null)
		{
			if (!(expr_240 == ""))
			{
				ProtoWriter.WriteFieldHeader(12, WireType.String, writer);
				ProtoWriter.WriteString(expr_240, writer);
			}
		}
		string expr_271 = cSPayCallback.sign;
		if (expr_271 != null)
		{
			if (!(expr_271 == ""))
			{
				ProtoWriter.WriteFieldHeader(13, WireType.String, writer);
				ProtoWriter.WriteString(expr_271, writer);
			}
		}
		string expr_2A2 = cSPayCallback.time;
		if (expr_2A2 != null)
		{
			if (!(expr_2A2 == ""))
			{
				ProtoWriter.WriteFieldHeader(14, WireType.String, writer);
				ProtoWriter.WriteString(expr_2A2, writer);
			}
		}
		string expr_2D3 = cSPayCallback.token;
		if (expr_2D3 != null)
		{
			if (!(expr_2D3 == ""))
			{
				ProtoWriter.WriteFieldHeader(15, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D3, writer);
			}
		}
		string expr_304 = cSPayCallback.appkey;
		if (expr_304 != null)
		{
			if (!(expr_304 == ""))
			{
				ProtoWriter.WriteFieldHeader(16, WireType.String, writer);
				ProtoWriter.WriteString(expr_304, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSPayCallback, writer);
	}

	private static CSPayCallback Read(CSPayCallback cSPayCallback, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 10)
												{
													if (num != 11)
													{
														if (num != 12)
														{
															if (num != 13)
															{
																if (num != 14)
																{
																	if (num != 15)
																	{
																		if (num != 16)
																		{
																			if (cSPayCallback == null)
																			{
																				CSPayCallback expr_348 = new CSPayCallback();
																				ProtoReader.NoteObject(expr_348, protoReader);
																				cSPayCallback = expr_348;
																			}
																			protoReader.AppendExtensionData(cSPayCallback);
																		}
																		else
																		{
																			if (cSPayCallback == null)
																			{
																				CSPayCallback expr_31E = new CSPayCallback();
																				ProtoReader.NoteObject(expr_31E, protoReader);
																				cSPayCallback = expr_31E;
																			}
																			string text = protoReader.ReadString();
																			if (text != null)
																			{
																				cSPayCallback.appkey = text;
																			}
																		}
																	}
																	else
																	{
																		if (cSPayCallback == null)
																		{
																			CSPayCallback expr_2EA = new CSPayCallback();
																			ProtoReader.NoteObject(expr_2EA, protoReader);
																			cSPayCallback = expr_2EA;
																		}
																		string text = protoReader.ReadString();
																		if (text != null)
																		{
																			cSPayCallback.token = text;
																		}
																	}
																}
																else
																{
																	if (cSPayCallback == null)
																	{
																		CSPayCallback expr_2B6 = new CSPayCallback();
																		ProtoReader.NoteObject(expr_2B6, protoReader);
																		cSPayCallback = expr_2B6;
																	}
																	string text = protoReader.ReadString();
																	if (text != null)
																	{
																		cSPayCallback.time = text;
																	}
																}
															}
															else
															{
																if (cSPayCallback == null)
																{
																	CSPayCallback expr_282 = new CSPayCallback();
																	ProtoReader.NoteObject(expr_282, protoReader);
																	cSPayCallback = expr_282;
																}
																string text = protoReader.ReadString();
																if (text != null)
																{
																	cSPayCallback.sign = text;
																}
															}
														}
														else
														{
															if (cSPayCallback == null)
															{
																CSPayCallback expr_24E = new CSPayCallback();
																ProtoReader.NoteObject(expr_24E, protoReader);
																cSPayCallback = expr_24E;
															}
															string text = protoReader.ReadString();
															if (text != null)
															{
																cSPayCallback.serialnumber = text;
															}
														}
													}
													else
													{
														if (cSPayCallback == null)
														{
															CSPayCallback expr_21A = new CSPayCallback();
															ProtoReader.NoteObject(expr_21A, protoReader);
															cSPayCallback = expr_21A;
														}
														string text = protoReader.ReadString();
														if (text != null)
														{
															cSPayCallback.goodsname = text;
														}
													}
												}
												else
												{
													if (cSPayCallback == null)
													{
														CSPayCallback expr_1E6 = new CSPayCallback();
														ProtoReader.NoteObject(expr_1E6, protoReader);
														cSPayCallback = expr_1E6;
													}
													string text = protoReader.ReadString();
													if (text != null)
													{
														cSPayCallback.goodscount = text;
													}
												}
											}
											else
											{
												if (cSPayCallback == null)
												{
													CSPayCallback expr_1B2 = new CSPayCallback();
													ProtoReader.NoteObject(expr_1B2, protoReader);
													cSPayCallback = expr_1B2;
												}
												string text = protoReader.ReadString();
												if (text != null)
												{
													cSPayCallback.serverid = text;
												}
											}
										}
										else
										{
											if (cSPayCallback == null)
											{
												CSPayCallback expr_17E = new CSPayCallback();
												ProtoReader.NoteObject(expr_17E, protoReader);
												cSPayCallback = expr_17E;
											}
											string text = protoReader.ReadString();
											if (text != null)
											{
												cSPayCallback.rolename = text;
											}
										}
									}
									else
									{
										if (cSPayCallback == null)
										{
											CSPayCallback expr_14B = new CSPayCallback();
											ProtoReader.NoteObject(expr_14B, protoReader);
											cSPayCallback = expr_14B;
										}
										string text = protoReader.ReadString();
										if (text != null)
										{
											cSPayCallback.cooorderserial = text;
										}
									}
								}
								else
								{
									if (cSPayCallback == null)
									{
										CSPayCallback expr_118 = new CSPayCallback();
										ProtoReader.NoteObject(expr_118, protoReader);
										cSPayCallback = expr_118;
									}
									string text = protoReader.ReadString();
									if (text != null)
									{
										cSPayCallback.notetwo = text;
									}
								}
							}
							else
							{
								if (cSPayCallback == null)
								{
									CSPayCallback expr_E5 = new CSPayCallback();
									ProtoReader.NoteObject(expr_E5, protoReader);
									cSPayCallback = expr_E5;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									cSPayCallback.noteone = text;
								}
							}
						}
						else
						{
							if (cSPayCallback == null)
							{
								CSPayCallback expr_B2 = new CSPayCallback();
								ProtoReader.NoteObject(expr_B2, protoReader);
								cSPayCallback = expr_B2;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								cSPayCallback.money = text;
							}
						}
					}
					else
					{
						if (cSPayCallback == null)
						{
							CSPayCallback expr_7F = new CSPayCallback();
							ProtoReader.NoteObject(expr_7F, protoReader);
							cSPayCallback = expr_7F;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							cSPayCallback.goodsid = text;
						}
					}
				}
				else
				{
					if (cSPayCallback == null)
					{
						CSPayCallback expr_4C = new CSPayCallback();
						ProtoReader.NoteObject(expr_4C, protoReader);
						cSPayCallback = expr_4C;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						cSPayCallback.appid = text;
					}
				}
			}
			else
			{
				if (cSPayCallback == null)
				{
					CSPayCallback expr_19 = new CSPayCallback();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSPayCallback = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSPayCallback.userid = text;
				}
			}
		}
		if (cSPayCallback == null)
		{
			CSPayCallback expr_371 = new CSPayCallback();
			ProtoReader.NoteObject(expr_371, protoReader);
			cSPayCallback = expr_371;
		}
		return cSPayCallback;
	}

	private static void Write(CSPlayerWorldMap cSPlayerWorldMap, ProtoWriter writer)
	{
		if (cSPlayerWorldMap.GetType() != typeof(CSPlayerWorldMap))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSPlayerWorldMap), cSPlayerWorldMap.GetType());
		}
		long expr_2D = cSPlayerWorldMap.worldMapId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSPlayerWorldMap, writer);
	}

	private static CSPlayerWorldMap Read(CSPlayerWorldMap cSPlayerWorldMap, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSPlayerWorldMap == null)
				{
					CSPlayerWorldMap expr_40 = new CSPlayerWorldMap();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSPlayerWorldMap = expr_40;
				}
				protoReader.AppendExtensionData(cSPlayerWorldMap);
			}
			else
			{
				if (cSPlayerWorldMap == null)
				{
					CSPlayerWorldMap expr_19 = new CSPlayerWorldMap();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSPlayerWorldMap = expr_19;
				}
				long worldMapId = protoReader.ReadInt64();
				cSPlayerWorldMap.worldMapId = worldMapId;
			}
		}
		if (cSPlayerWorldMap == null)
		{
			CSPlayerWorldMap expr_69 = new CSPlayerWorldMap();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSPlayerWorldMap = expr_69;
		}
		return cSPlayerWorldMap;
	}

	private static void Write(CSPVP cSPVP, ProtoWriter writer)
	{
		if (cSPVP.GetType() != typeof(CSPVP))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSPVP), cSPVP.GetType());
		}
		int expr_2D = cSPVP.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSPVP, writer);
	}

	private static CSPVP Read(CSPVP cSPVP, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSPVP == null)
				{
					CSPVP expr_40 = new CSPVP();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSPVP = expr_40;
				}
				protoReader.AppendExtensionData(cSPVP);
			}
			else
			{
				if (cSPVP == null)
				{
					CSPVP expr_19 = new CSPVP();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSPVP = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSPVP.id = id;
			}
		}
		if (cSPVP == null)
		{
			CSPVP expr_69 = new CSPVP();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSPVP = expr_69;
		}
		return cSPVP;
	}

	private static void Write(CSRandomLegion cSRandomLegion, ProtoWriter writer)
	{
		if (cSRandomLegion.GetType() != typeof(CSRandomLegion))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRandomLegion), cSRandomLegion.GetType());
		}
		int expr_2D = cSRandomLegion.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRandomLegion, writer);
	}

	private static CSRandomLegion Read(CSRandomLegion cSRandomLegion, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRandomLegion == null)
				{
					CSRandomLegion expr_40 = new CSRandomLegion();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRandomLegion = expr_40;
				}
				protoReader.AppendExtensionData(cSRandomLegion);
			}
			else
			{
				if (cSRandomLegion == null)
				{
					CSRandomLegion expr_19 = new CSRandomLegion();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRandomLegion = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSRandomLegion.id = id;
			}
		}
		if (cSRandomLegion == null)
		{
			CSRandomLegion expr_69 = new CSRandomLegion();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRandomLegion = expr_69;
		}
		return cSRandomLegion;
	}

	private static void Write(CSRankingList cSRankingList, ProtoWriter writer)
	{
		if (cSRankingList.GetType() != typeof(CSRankingList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRankingList), cSRankingList.GetType());
		}
		int expr_2D = cSRankingList.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRankingList, writer);
	}

	private static CSRankingList Read(CSRankingList cSRankingList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRankingList == null)
				{
					CSRankingList expr_40 = new CSRankingList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRankingList = expr_40;
				}
				protoReader.AppendExtensionData(cSRankingList);
			}
			else
			{
				if (cSRankingList == null)
				{
					CSRankingList expr_19 = new CSRankingList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRankingList = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSRankingList.type = type;
			}
		}
		if (cSRankingList == null)
		{
			CSRankingList expr_69 = new CSRankingList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRankingList = expr_69;
		}
		return cSRankingList;
	}

	private static void Write(CSRankingPrize cSRankingPrize, ProtoWriter writer)
	{
		if (cSRankingPrize.GetType() != typeof(CSRankingPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRankingPrize), cSRankingPrize.GetType());
		}
		int expr_2D = cSRankingPrize.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRankingPrize, writer);
	}

	private static CSRankingPrize Read(CSRankingPrize cSRankingPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRankingPrize == null)
				{
					CSRankingPrize expr_40 = new CSRankingPrize();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRankingPrize = expr_40;
				}
				protoReader.AppendExtensionData(cSRankingPrize);
			}
			else
			{
				if (cSRankingPrize == null)
				{
					CSRankingPrize expr_19 = new CSRankingPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRankingPrize = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSRankingPrize.type = type;
			}
		}
		if (cSRankingPrize == null)
		{
			CSRankingPrize expr_69 = new CSRankingPrize();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRankingPrize = expr_69;
		}
		return cSRankingPrize;
	}

	private static void Write(CSRankingPrizeList cSRankingPrizeList, ProtoWriter writer)
	{
		if (cSRankingPrizeList.GetType() != typeof(CSRankingPrizeList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRankingPrizeList), cSRankingPrizeList.GetType());
		}
		int expr_2D = cSRankingPrizeList.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRankingPrizeList, writer);
	}

	private static CSRankingPrizeList Read(CSRankingPrizeList cSRankingPrizeList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRankingPrizeList == null)
				{
					CSRankingPrizeList expr_40 = new CSRankingPrizeList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRankingPrizeList = expr_40;
				}
				protoReader.AppendExtensionData(cSRankingPrizeList);
			}
			else
			{
				if (cSRankingPrizeList == null)
				{
					CSRankingPrizeList expr_19 = new CSRankingPrizeList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRankingPrizeList = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSRankingPrizeList.type = type;
			}
		}
		if (cSRankingPrizeList == null)
		{
			CSRankingPrizeList expr_69 = new CSRankingPrizeList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRankingPrizeList = expr_69;
		}
		return cSRankingPrizeList;
	}

	private static void Write(CSReadMail cSReadMail, ProtoWriter writer)
	{
		if (cSReadMail.GetType() != typeof(CSReadMail))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReadMail), cSReadMail.GetType());
		}
		long expr_2D = cSReadMail.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReadMail, writer);
	}

	private static CSReadMail Read(CSReadMail cSReadMail, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReadMail == null)
				{
					CSReadMail expr_40 = new CSReadMail();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReadMail = expr_40;
				}
				protoReader.AppendExtensionData(cSReadMail);
			}
			else
			{
				if (cSReadMail == null)
				{
					CSReadMail expr_19 = new CSReadMail();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReadMail = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSReadMail.id = id;
			}
		}
		if (cSReadMail == null)
		{
			CSReadMail expr_69 = new CSReadMail();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReadMail = expr_69;
		}
		return cSReadMail;
	}

	private static void Write(CSReadNotice cSReadNotice, ProtoWriter writer)
	{
		if (cSReadNotice.GetType() != typeof(CSReadNotice))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReadNotice), cSReadNotice.GetType());
		}
		int expr_2D = cSReadNotice.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReadNotice, writer);
	}

	private static CSReadNotice Read(CSReadNotice cSReadNotice, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReadNotice == null)
				{
					CSReadNotice expr_40 = new CSReadNotice();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReadNotice = expr_40;
				}
				protoReader.AppendExtensionData(cSReadNotice);
			}
			else
			{
				if (cSReadNotice == null)
				{
					CSReadNotice expr_19 = new CSReadNotice();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReadNotice = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSReadNotice.type = type;
			}
		}
		if (cSReadNotice == null)
		{
			CSReadNotice expr_69 = new CSReadNotice();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReadNotice = expr_69;
		}
		return cSReadNotice;
	}

	private static void Write(CSReceiveAccumulativeSignRewards cSReceiveAccumulativeSignRewards, ProtoWriter writer)
	{
		if (cSReceiveAccumulativeSignRewards.GetType() != typeof(CSReceiveAccumulativeSignRewards))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReceiveAccumulativeSignRewards), cSReceiveAccumulativeSignRewards.GetType());
		}
		int expr_2D = cSReceiveAccumulativeSignRewards.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReceiveAccumulativeSignRewards, writer);
	}

	private static CSReceiveAccumulativeSignRewards Read(CSReceiveAccumulativeSignRewards cSReceiveAccumulativeSignRewards, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReceiveAccumulativeSignRewards == null)
				{
					CSReceiveAccumulativeSignRewards expr_40 = new CSReceiveAccumulativeSignRewards();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReceiveAccumulativeSignRewards = expr_40;
				}
				protoReader.AppendExtensionData(cSReceiveAccumulativeSignRewards);
			}
			else
			{
				if (cSReceiveAccumulativeSignRewards == null)
				{
					CSReceiveAccumulativeSignRewards expr_19 = new CSReceiveAccumulativeSignRewards();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReceiveAccumulativeSignRewards = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSReceiveAccumulativeSignRewards.id = id;
			}
		}
		if (cSReceiveAccumulativeSignRewards == null)
		{
			CSReceiveAccumulativeSignRewards expr_69 = new CSReceiveAccumulativeSignRewards();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReceiveAccumulativeSignRewards = expr_69;
		}
		return cSReceiveAccumulativeSignRewards;
	}

	private static void Write(CSReceiveMailAttachment cSReceiveMailAttachment, ProtoWriter writer)
	{
		if (cSReceiveMailAttachment.GetType() != typeof(CSReceiveMailAttachment))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReceiveMailAttachment), cSReceiveMailAttachment.GetType());
		}
		long expr_2D = cSReceiveMailAttachment.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReceiveMailAttachment, writer);
	}

	private static CSReceiveMailAttachment Read(CSReceiveMailAttachment cSReceiveMailAttachment, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReceiveMailAttachment == null)
				{
					CSReceiveMailAttachment expr_40 = new CSReceiveMailAttachment();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReceiveMailAttachment = expr_40;
				}
				protoReader.AppendExtensionData(cSReceiveMailAttachment);
			}
			else
			{
				if (cSReceiveMailAttachment == null)
				{
					CSReceiveMailAttachment expr_19 = new CSReceiveMailAttachment();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReceiveMailAttachment = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSReceiveMailAttachment.id = id;
			}
		}
		if (cSReceiveMailAttachment == null)
		{
			CSReceiveMailAttachment expr_69 = new CSReceiveMailAttachment();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReceiveMailAttachment = expr_69;
		}
		return cSReceiveMailAttachment;
	}

	private static void Write(CSReceiveReportMoney cSReceiveReportMoney, ProtoWriter writer)
	{
		if (cSReceiveReportMoney.GetType() != typeof(CSReceiveReportMoney))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReceiveReportMoney), cSReceiveReportMoney.GetType());
		}
		long expr_2D = cSReceiveReportMoney.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReceiveReportMoney, writer);
	}

	private static CSReceiveReportMoney Read(CSReceiveReportMoney cSReceiveReportMoney, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReceiveReportMoney == null)
				{
					CSReceiveReportMoney expr_40 = new CSReceiveReportMoney();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReceiveReportMoney = expr_40;
				}
				protoReader.AppendExtensionData(cSReceiveReportMoney);
			}
			else
			{
				if (cSReceiveReportMoney == null)
				{
					CSReceiveReportMoney expr_19 = new CSReceiveReportMoney();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReceiveReportMoney = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSReceiveReportMoney.id = id;
			}
		}
		if (cSReceiveReportMoney == null)
		{
			CSReceiveReportMoney expr_69 = new CSReceiveReportMoney();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReceiveReportMoney = expr_69;
		}
		return cSReceiveReportMoney;
	}

	private static void Write(CSReceiveVipDailyMoney cSReceiveVipDailyMoney, ProtoWriter writer)
	{
		if (cSReceiveVipDailyMoney.GetType() != typeof(CSReceiveVipDailyMoney))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReceiveVipDailyMoney), cSReceiveVipDailyMoney.GetType());
		}
		int expr_2D = cSReceiveVipDailyMoney.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReceiveVipDailyMoney, writer);
	}

	private static CSReceiveVipDailyMoney Read(CSReceiveVipDailyMoney cSReceiveVipDailyMoney, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReceiveVipDailyMoney == null)
				{
					CSReceiveVipDailyMoney expr_40 = new CSReceiveVipDailyMoney();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReceiveVipDailyMoney = expr_40;
				}
				protoReader.AppendExtensionData(cSReceiveVipDailyMoney);
			}
			else
			{
				if (cSReceiveVipDailyMoney == null)
				{
					CSReceiveVipDailyMoney expr_19 = new CSReceiveVipDailyMoney();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReceiveVipDailyMoney = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSReceiveVipDailyMoney.id = id;
			}
		}
		if (cSReceiveVipDailyMoney == null)
		{
			CSReceiveVipDailyMoney expr_69 = new CSReceiveVipDailyMoney();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReceiveVipDailyMoney = expr_69;
		}
		return cSReceiveVipDailyMoney;
	}

	private static void Write(CSReconnection cSReconnection, ProtoWriter writer)
	{
		if (cSReconnection.GetType() != typeof(CSReconnection))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReconnection), cSReconnection.GetType());
		}
		string expr_2D = cSReconnection.session;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSReconnection, writer);
	}

	private static CSReconnection Read(CSReconnection cSReconnection, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReconnection == null)
				{
					CSReconnection expr_43 = new CSReconnection();
					ProtoReader.NoteObject(expr_43, protoReader);
					cSReconnection = expr_43;
				}
				protoReader.AppendExtensionData(cSReconnection);
			}
			else
			{
				if (cSReconnection == null)
				{
					CSReconnection expr_19 = new CSReconnection();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReconnection = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSReconnection.session = text;
				}
			}
		}
		if (cSReconnection == null)
		{
			CSReconnection expr_6C = new CSReconnection();
			ProtoReader.NoteObject(expr_6C, protoReader);
			cSReconnection = expr_6C;
		}
		return cSReconnection;
	}

	private static void Write(CSRefreshActivity cSRefreshActivity, ProtoWriter writer)
	{
		if (cSRefreshActivity.GetType() != typeof(CSRefreshActivity))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRefreshActivity), cSRefreshActivity.GetType());
		}
		int expr_2D = cSRefreshActivity.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSRefreshActivity.worldMapId;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSRefreshActivity, writer);
	}

	private static CSRefreshActivity Read(CSRefreshActivity cSRefreshActivity, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSRefreshActivity == null)
					{
						CSRefreshActivity expr_70 = new CSRefreshActivity();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSRefreshActivity = expr_70;
					}
					protoReader.AppendExtensionData(cSRefreshActivity);
				}
				else
				{
					if (cSRefreshActivity == null)
					{
						CSRefreshActivity expr_49 = new CSRefreshActivity();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSRefreshActivity = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSRefreshActivity.worldMapId = num2;
				}
			}
			else
			{
				if (cSRefreshActivity == null)
				{
					CSRefreshActivity expr_19 = new CSRefreshActivity();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRefreshActivity = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSRefreshActivity.id = num2;
			}
		}
		if (cSRefreshActivity == null)
		{
			CSRefreshActivity expr_99 = new CSRefreshActivity();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSRefreshActivity = expr_99;
		}
		return cSRefreshActivity;
	}

	private static void Write(CSRefreshArmsDealer cSRefreshArmsDealer, ProtoWriter writer)
	{
		if (cSRefreshArmsDealer.GetType() != typeof(CSRefreshArmsDealer))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRefreshArmsDealer), cSRefreshArmsDealer.GetType());
		}
		int expr_2D = cSRefreshArmsDealer.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRefreshArmsDealer, writer);
	}

	private static CSRefreshArmsDealer Read(CSRefreshArmsDealer cSRefreshArmsDealer, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRefreshArmsDealer == null)
				{
					CSRefreshArmsDealer expr_40 = new CSRefreshArmsDealer();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRefreshArmsDealer = expr_40;
				}
				protoReader.AppendExtensionData(cSRefreshArmsDealer);
			}
			else
			{
				if (cSRefreshArmsDealer == null)
				{
					CSRefreshArmsDealer expr_19 = new CSRefreshArmsDealer();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRefreshArmsDealer = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSRefreshArmsDealer.id = id;
			}
		}
		if (cSRefreshArmsDealer == null)
		{
			CSRefreshArmsDealer expr_69 = new CSRefreshArmsDealer();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRefreshArmsDealer = expr_69;
		}
		return cSRefreshArmsDealer;
	}

	private static void Write(CSRefreshArmsDealerUseMoney cSRefreshArmsDealerUseMoney, ProtoWriter writer)
	{
		if (cSRefreshArmsDealerUseMoney.GetType() != typeof(CSRefreshArmsDealerUseMoney))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRefreshArmsDealerUseMoney), cSRefreshArmsDealerUseMoney.GetType());
		}
		int expr_2D = cSRefreshArmsDealerUseMoney.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRefreshArmsDealerUseMoney, writer);
	}

	private static CSRefreshArmsDealerUseMoney Read(CSRefreshArmsDealerUseMoney cSRefreshArmsDealerUseMoney, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRefreshArmsDealerUseMoney == null)
				{
					CSRefreshArmsDealerUseMoney expr_40 = new CSRefreshArmsDealerUseMoney();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRefreshArmsDealerUseMoney = expr_40;
				}
				protoReader.AppendExtensionData(cSRefreshArmsDealerUseMoney);
			}
			else
			{
				if (cSRefreshArmsDealerUseMoney == null)
				{
					CSRefreshArmsDealerUseMoney expr_19 = new CSRefreshArmsDealerUseMoney();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRefreshArmsDealerUseMoney = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSRefreshArmsDealerUseMoney.id = id;
			}
		}
		if (cSRefreshArmsDealerUseMoney == null)
		{
			CSRefreshArmsDealerUseMoney expr_69 = new CSRefreshArmsDealerUseMoney();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRefreshArmsDealerUseMoney = expr_69;
		}
		return cSRefreshArmsDealerUseMoney;
	}

	private static void Write(CSRelationList cSRelationList, ProtoWriter writer)
	{
		if (cSRelationList.GetType() != typeof(CSRelationList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRelationList), cSRelationList.GetType());
		}
		int expr_2D = cSRelationList.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRelationList, writer);
	}

	private static CSRelationList Read(CSRelationList cSRelationList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRelationList == null)
				{
					CSRelationList expr_40 = new CSRelationList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRelationList = expr_40;
				}
				protoReader.AppendExtensionData(cSRelationList);
			}
			else
			{
				if (cSRelationList == null)
				{
					CSRelationList expr_19 = new CSRelationList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRelationList = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSRelationList.type = type;
			}
		}
		if (cSRelationList == null)
		{
			CSRelationList expr_69 = new CSRelationList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRelationList = expr_69;
		}
		return cSRelationList;
	}

	private static void Write(CSReName cSReName, ProtoWriter writer)
	{
		if (cSReName.GetType() != typeof(CSReName))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReName), cSReName.GetType());
		}
		string expr_2D = cSReName.name;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSReName, writer);
	}

	private static CSReName Read(CSReName cSReName, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReName == null)
				{
					CSReName expr_43 = new CSReName();
					ProtoReader.NoteObject(expr_43, protoReader);
					cSReName = expr_43;
				}
				protoReader.AppendExtensionData(cSReName);
			}
			else
			{
				if (cSReName == null)
				{
					CSReName expr_19 = new CSReName();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReName = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSReName.name = text;
				}
			}
		}
		if (cSReName == null)
		{
			CSReName expr_6C = new CSReName();
			ProtoReader.NoteObject(expr_6C, protoReader);
			cSReName = expr_6C;
		}
		return cSReName;
	}

	private static void Write(CSReplacePlayer cSReplacePlayer, ProtoWriter writer)
	{
		if (cSReplacePlayer.GetType() != typeof(CSReplacePlayer))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReplacePlayer), cSReplacePlayer.GetType());
		}
		int expr_2D = cSReplacePlayer.index;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReplacePlayer, writer);
	}

	private static CSReplacePlayer Read(CSReplacePlayer cSReplacePlayer, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReplacePlayer == null)
				{
					CSReplacePlayer expr_40 = new CSReplacePlayer();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReplacePlayer = expr_40;
				}
				protoReader.AppendExtensionData(cSReplacePlayer);
			}
			else
			{
				if (cSReplacePlayer == null)
				{
					CSReplacePlayer expr_19 = new CSReplacePlayer();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReplacePlayer = expr_19;
				}
				int index = protoReader.ReadInt32();
				cSReplacePlayer.index = index;
			}
		}
		if (cSReplacePlayer == null)
		{
			CSReplacePlayer expr_69 = new CSReplacePlayer();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReplacePlayer = expr_69;
		}
		return cSReplacePlayer;
	}

	private static void Write(CSReportList cSReportList, ProtoWriter writer)
	{
		if (cSReportList.GetType() != typeof(CSReportList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReportList), cSReportList.GetType());
		}
		int expr_2D = cSReportList.listType;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSReportList, writer);
	}

	private static CSReportList Read(CSReportList cSReportList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSReportList == null)
				{
					CSReportList expr_40 = new CSReportList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSReportList = expr_40;
				}
				protoReader.AppendExtensionData(cSReportList);
			}
			else
			{
				if (cSReportList == null)
				{
					CSReportList expr_19 = new CSReportList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReportList = expr_19;
				}
				int listType = protoReader.ReadInt32();
				cSReportList.listType = listType;
			}
		}
		if (cSReportList == null)
		{
			CSReportList expr_69 = new CSReportList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSReportList = expr_69;
		}
		return cSReportList;
	}

	private static void Write(CSReportReaded cSReportReaded, ProtoWriter writer)
	{
		if (cSReportReaded.GetType() != typeof(CSReportReaded))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSReportReaded), cSReportReaded.GetType());
		}
		long expr_2D = cSReportReaded.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSReportReaded.type;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSReportReaded, writer);
	}

	private static CSReportReaded Read(CSReportReaded cSReportReaded, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSReportReaded == null)
					{
						CSReportReaded expr_70 = new CSReportReaded();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSReportReaded = expr_70;
					}
					protoReader.AppendExtensionData(cSReportReaded);
				}
				else
				{
					if (cSReportReaded == null)
					{
						CSReportReaded expr_49 = new CSReportReaded();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSReportReaded = expr_49;
					}
					int type = protoReader.ReadInt32();
					cSReportReaded.type = type;
				}
			}
			else
			{
				if (cSReportReaded == null)
				{
					CSReportReaded expr_19 = new CSReportReaded();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSReportReaded = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSReportReaded.id = id;
			}
		}
		if (cSReportReaded == null)
		{
			CSReportReaded expr_99 = new CSReportReaded();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSReportReaded = expr_99;
		}
		return cSReportReaded;
	}

	private static void Write(CSRequestActivity cSRequestActivity, ProtoWriter writer)
	{
		if (cSRequestActivity.GetType() != typeof(CSRequestActivity))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRequestActivity), cSRequestActivity.GetType());
		}
		int expr_2D = cSRequestActivity.worldMapId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRequestActivity, writer);
	}

	private static CSRequestActivity Read(CSRequestActivity cSRequestActivity, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRequestActivity == null)
				{
					CSRequestActivity expr_40 = new CSRequestActivity();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRequestActivity = expr_40;
				}
				protoReader.AppendExtensionData(cSRequestActivity);
			}
			else
			{
				if (cSRequestActivity == null)
				{
					CSRequestActivity expr_19 = new CSRequestActivity();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRequestActivity = expr_19;
				}
				int worldMapId = protoReader.ReadInt32();
				cSRequestActivity.worldMapId = worldMapId;
			}
		}
		if (cSRequestActivity == null)
		{
			CSRequestActivity expr_69 = new CSRequestActivity();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRequestActivity = expr_69;
		}
		return cSRequestActivity;
	}

	private static void Write(CSRequestChitChatData cSRequestChitChatData, ProtoWriter writer)
	{
		if (cSRequestChitChatData.GetType() != typeof(CSRequestChitChatData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRequestChitChatData), cSRequestChitChatData.GetType());
		}
		long expr_2D = cSRequestChitChatData.time;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRequestChitChatData, writer);
	}

	private static CSRequestChitChatData Read(CSRequestChitChatData cSRequestChitChatData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRequestChitChatData == null)
				{
					CSRequestChitChatData expr_40 = new CSRequestChitChatData();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRequestChitChatData = expr_40;
				}
				protoReader.AppendExtensionData(cSRequestChitChatData);
			}
			else
			{
				if (cSRequestChitChatData == null)
				{
					CSRequestChitChatData expr_19 = new CSRequestChitChatData();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRequestChitChatData = expr_19;
				}
				long time = protoReader.ReadInt64();
				cSRequestChitChatData.time = time;
			}
		}
		if (cSRequestChitChatData == null)
		{
			CSRequestChitChatData expr_69 = new CSRequestChitChatData();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRequestChitChatData = expr_69;
		}
		return cSRequestChitChatData;
	}

	private static void Write(CSRetroactiveAllSignIn cSRetroactiveAllSignIn, ProtoWriter writer)
	{
		if (cSRetroactiveAllSignIn.GetType() != typeof(CSRetroactiveAllSignIn))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRetroactiveAllSignIn), cSRetroactiveAllSignIn.GetType());
		}
		int expr_2D = cSRetroactiveAllSignIn.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRetroactiveAllSignIn, writer);
	}

	private static CSRetroactiveAllSignIn Read(CSRetroactiveAllSignIn cSRetroactiveAllSignIn, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRetroactiveAllSignIn == null)
				{
					CSRetroactiveAllSignIn expr_40 = new CSRetroactiveAllSignIn();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRetroactiveAllSignIn = expr_40;
				}
				protoReader.AppendExtensionData(cSRetroactiveAllSignIn);
			}
			else
			{
				if (cSRetroactiveAllSignIn == null)
				{
					CSRetroactiveAllSignIn expr_19 = new CSRetroactiveAllSignIn();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRetroactiveAllSignIn = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSRetroactiveAllSignIn.id = id;
			}
		}
		if (cSRetroactiveAllSignIn == null)
		{
			CSRetroactiveAllSignIn expr_69 = new CSRetroactiveAllSignIn();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRetroactiveAllSignIn = expr_69;
		}
		return cSRetroactiveAllSignIn;
	}

	private static void Write(CSRetroactiveSignIn cSRetroactiveSignIn, ProtoWriter writer)
	{
		if (cSRetroactiveSignIn.GetType() != typeof(CSRetroactiveSignIn))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSRetroactiveSignIn), cSRetroactiveSignIn.GetType());
		}
		int expr_2D = cSRetroactiveSignIn.day;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSRetroactiveSignIn, writer);
	}

	private static CSRetroactiveSignIn Read(CSRetroactiveSignIn cSRetroactiveSignIn, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSRetroactiveSignIn == null)
				{
					CSRetroactiveSignIn expr_40 = new CSRetroactiveSignIn();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSRetroactiveSignIn = expr_40;
				}
				protoReader.AppendExtensionData(cSRetroactiveSignIn);
			}
			else
			{
				if (cSRetroactiveSignIn == null)
				{
					CSRetroactiveSignIn expr_19 = new CSRetroactiveSignIn();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSRetroactiveSignIn = expr_19;
				}
				int day = protoReader.ReadInt32();
				cSRetroactiveSignIn.day = day;
			}
		}
		if (cSRetroactiveSignIn == null)
		{
			CSRetroactiveSignIn expr_69 = new CSRetroactiveSignIn();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSRetroactiveSignIn = expr_69;
		}
		return cSRetroactiveSignIn;
	}

	private static void Write(CSSearchLegion cSSearchLegion, ProtoWriter writer)
	{
		if (cSSearchLegion.GetType() != typeof(CSSearchLegion))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSearchLegion), cSSearchLegion.GetType());
		}
		string expr_2D = cSSearchLegion.legionName;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSSearchLegion, writer);
	}

	private static CSSearchLegion Read(CSSearchLegion cSSearchLegion, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSearchLegion == null)
				{
					CSSearchLegion expr_43 = new CSSearchLegion();
					ProtoReader.NoteObject(expr_43, protoReader);
					cSSearchLegion = expr_43;
				}
				protoReader.AppendExtensionData(cSSearchLegion);
			}
			else
			{
				if (cSSearchLegion == null)
				{
					CSSearchLegion expr_19 = new CSSearchLegion();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSearchLegion = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					cSSearchLegion.legionName = text;
				}
			}
		}
		if (cSSearchLegion == null)
		{
			CSSearchLegion expr_6C = new CSSearchLegion();
			ProtoReader.NoteObject(expr_6C, protoReader);
			cSSearchLegion = expr_6C;
		}
		return cSSearchLegion;
	}

	private static void Write(CSSellArmy cSSellArmy, ProtoWriter writer)
	{
		if (cSSellArmy.GetType() != typeof(CSSellArmy))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSellArmy), cSSellArmy.GetType());
		}
		int expr_2D = cSSellArmy.armyId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = cSSellArmy.buildingId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		int expr_70 = cSSellArmy.num;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSSellArmy, writer);
	}

	private static CSSellArmy Read(CSSellArmy cSSellArmy, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSSellArmy == null)
						{
							CSSellArmy expr_A0 = new CSSellArmy();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSSellArmy = expr_A0;
						}
						protoReader.AppendExtensionData(cSSellArmy);
					}
					else
					{
						if (cSSellArmy == null)
						{
							CSSellArmy expr_79 = new CSSellArmy();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSSellArmy = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSSellArmy.num = num2;
					}
				}
				else
				{
					if (cSSellArmy == null)
					{
						CSSellArmy expr_49 = new CSSellArmy();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSellArmy = expr_49;
					}
					long buildingId = protoReader.ReadInt64();
					cSSellArmy.buildingId = buildingId;
				}
			}
			else
			{
				if (cSSellArmy == null)
				{
					CSSellArmy expr_19 = new CSSellArmy();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSellArmy = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSSellArmy.armyId = num2;
			}
		}
		if (cSSellArmy == null)
		{
			CSSellArmy expr_C9 = new CSSellArmy();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSSellArmy = expr_C9;
		}
		return cSSellArmy;
	}

	private static void Write(CSSendMessage cSSendMessage, ProtoWriter protoWriter)
	{
		if (cSSendMessage.GetType() != typeof(CSSendMessage))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSendMessage), cSSendMessage.GetType());
		}
		ChatMessage expr_2D = cSSendMessage.message;
		if (expr_2D != null)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_2D, protoWriter);
			ProtoMsgSerializer.Write(expr_2D, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		ProtoWriter.AppendExtensionData(cSSendMessage, protoWriter);
	}

	private static CSSendMessage Read(CSSendMessage cSSendMessage, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSendMessage == null)
				{
					CSSendMessage expr_57 = new CSSendMessage();
					ProtoReader.NoteObject(expr_57, protoReader);
					cSSendMessage = expr_57;
				}
				protoReader.AppendExtensionData(cSSendMessage);
			}
			else
			{
				if (cSSendMessage == null)
				{
					CSSendMessage expr_19 = new CSSendMessage();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSendMessage = expr_19;
				}
				ChatMessage arg_30_0 = cSSendMessage.message;
				SubItemToken token = ProtoReader.StartSubItem(protoReader);
				ChatMessage arg_3C_0 = ProtoMsgSerializer.Read(arg_30_0, protoReader);
				ProtoReader.EndSubItem(token, protoReader);
				ChatMessage chatMessage = arg_3C_0;
				if (chatMessage != null)
				{
					cSSendMessage.message = chatMessage;
				}
			}
		}
		if (cSSendMessage == null)
		{
			CSSendMessage expr_80 = new CSSendMessage();
			ProtoReader.NoteObject(expr_80, protoReader);
			cSSendMessage = expr_80;
		}
		return cSSendMessage;
	}

	private static void Write(CSSevenDaysPrize cSSevenDaysPrize, ProtoWriter writer)
	{
		if (cSSevenDaysPrize.GetType() != typeof(CSSevenDaysPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSevenDaysPrize), cSSevenDaysPrize.GetType());
		}
		int expr_2D = cSSevenDaysPrize.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSevenDaysPrize, writer);
	}

	private static CSSevenDaysPrize Read(CSSevenDaysPrize cSSevenDaysPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSevenDaysPrize == null)
				{
					CSSevenDaysPrize expr_40 = new CSSevenDaysPrize();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSevenDaysPrize = expr_40;
				}
				protoReader.AppendExtensionData(cSSevenDaysPrize);
			}
			else
			{
				if (cSSevenDaysPrize == null)
				{
					CSSevenDaysPrize expr_19 = new CSSevenDaysPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSevenDaysPrize = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSSevenDaysPrize.id = id;
			}
		}
		if (cSSevenDaysPrize == null)
		{
			CSSevenDaysPrize expr_69 = new CSSevenDaysPrize();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSevenDaysPrize = expr_69;
		}
		return cSSevenDaysPrize;
	}

	private static void Write(CSShareBattleVideo cSShareBattleVideo, ProtoWriter writer)
	{
		if (cSShareBattleVideo.GetType() != typeof(CSShareBattleVideo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSShareBattleVideo), cSShareBattleVideo.GetType());
		}
		long expr_2D = cSShareBattleVideo.battleReportId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = cSShareBattleVideo.time;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSShareBattleVideo, writer);
	}

	private static CSShareBattleVideo Read(CSShareBattleVideo cSShareBattleVideo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSShareBattleVideo == null)
					{
						CSShareBattleVideo expr_70 = new CSShareBattleVideo();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSShareBattleVideo = expr_70;
					}
					protoReader.AppendExtensionData(cSShareBattleVideo);
				}
				else
				{
					if (cSShareBattleVideo == null)
					{
						CSShareBattleVideo expr_49 = new CSShareBattleVideo();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSShareBattleVideo = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					cSShareBattleVideo.time = num2;
				}
			}
			else
			{
				if (cSShareBattleVideo == null)
				{
					CSShareBattleVideo expr_19 = new CSShareBattleVideo();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSShareBattleVideo = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				cSShareBattleVideo.battleReportId = num2;
			}
		}
		if (cSShareBattleVideo == null)
		{
			CSShareBattleVideo expr_99 = new CSShareBattleVideo();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSShareBattleVideo = expr_99;
		}
		return cSShareBattleVideo;
	}

	private static void Write(CSShopPay cSShopPay, ProtoWriter writer)
	{
		if (cSShopPay.GetType() != typeof(CSShopPay))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSShopPay), cSShopPay.GetType());
		}
		int expr_2D = cSShopPay.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSShopPay, writer);
	}

	private static CSShopPay Read(CSShopPay cSShopPay, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSShopPay == null)
				{
					CSShopPay expr_40 = new CSShopPay();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSShopPay = expr_40;
				}
				protoReader.AppendExtensionData(cSShopPay);
			}
			else
			{
				if (cSShopPay == null)
				{
					CSShopPay expr_19 = new CSShopPay();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSShopPay = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSShopPay.id = id;
			}
		}
		if (cSShopPay == null)
		{
			CSShopPay expr_69 = new CSShopPay();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSShopPay = expr_69;
		}
		return cSShopPay;
	}

	private static void Write(CSSignIn cSSignIn, ProtoWriter writer)
	{
		if (cSSignIn.GetType() != typeof(CSSignIn))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSignIn), cSSignIn.GetType());
		}
		int expr_2D = cSSignIn.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSignIn, writer);
	}

	private static CSSignIn Read(CSSignIn cSSignIn, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSignIn == null)
				{
					CSSignIn expr_40 = new CSSignIn();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSignIn = expr_40;
				}
				protoReader.AppendExtensionData(cSSignIn);
			}
			else
			{
				if (cSSignIn == null)
				{
					CSSignIn expr_19 = new CSSignIn();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSignIn = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSSignIn.id = id;
			}
		}
		if (cSSignIn == null)
		{
			CSSignIn expr_69 = new CSSignIn();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSignIn = expr_69;
		}
		return cSSignIn;
	}

	private static void Write(CSSkillConfig cSSkillConfig, ProtoWriter writer)
	{
		if (cSSkillConfig.GetType() != typeof(CSSkillConfig))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillConfig), cSSkillConfig.GetType());
		}
		long expr_2D = cSSkillConfig.skillId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSSkillConfig.type;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillConfig, writer);
	}

	private static CSSkillConfig Read(CSSkillConfig cSSkillConfig, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSSkillConfig == null)
					{
						CSSkillConfig expr_70 = new CSSkillConfig();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSSkillConfig = expr_70;
					}
					protoReader.AppendExtensionData(cSSkillConfig);
				}
				else
				{
					if (cSSkillConfig == null)
					{
						CSSkillConfig expr_49 = new CSSkillConfig();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSkillConfig = expr_49;
					}
					int type = protoReader.ReadInt32();
					cSSkillConfig.type = type;
				}
			}
			else
			{
				if (cSSkillConfig == null)
				{
					CSSkillConfig expr_19 = new CSSkillConfig();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillConfig = expr_19;
				}
				long skillId = protoReader.ReadInt64();
				cSSkillConfig.skillId = skillId;
			}
		}
		if (cSSkillConfig == null)
		{
			CSSkillConfig expr_99 = new CSSkillConfig();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSSkillConfig = expr_99;
		}
		return cSSkillConfig;
	}

	private static void Write(CSSkillConfigList cSSkillConfigList, ProtoWriter writer)
	{
		if (cSSkillConfigList.GetType() != typeof(CSSkillConfigList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillConfigList), cSSkillConfigList.GetType());
		}
		int expr_2D = cSSkillConfigList.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillConfigList, writer);
	}

	private static CSSkillConfigList Read(CSSkillConfigList cSSkillConfigList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSkillConfigList == null)
				{
					CSSkillConfigList expr_40 = new CSSkillConfigList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSkillConfigList = expr_40;
				}
				protoReader.AppendExtensionData(cSSkillConfigList);
			}
			else
			{
				if (cSSkillConfigList == null)
				{
					CSSkillConfigList expr_19 = new CSSkillConfigList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillConfigList = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSSkillConfigList.id = id;
			}
		}
		if (cSSkillConfigList == null)
		{
			CSSkillConfigList expr_69 = new CSSkillConfigList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSkillConfigList = expr_69;
		}
		return cSSkillConfigList;
	}

	private static void Write(CSSkillExchange cSSkillExchange, ProtoWriter writer)
	{
		if (cSSkillExchange.GetType() != typeof(CSSkillExchange))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillExchange), cSSkillExchange.GetType());
		}
		int expr_2D = cSSkillExchange.index;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSSkillExchange.nouse;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillExchange, writer);
	}

	private static CSSkillExchange Read(CSSkillExchange cSSkillExchange, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSSkillExchange == null)
					{
						CSSkillExchange expr_70 = new CSSkillExchange();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSSkillExchange = expr_70;
					}
					protoReader.AppendExtensionData(cSSkillExchange);
				}
				else
				{
					if (cSSkillExchange == null)
					{
						CSSkillExchange expr_49 = new CSSkillExchange();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSkillExchange = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSSkillExchange.nouse = num2;
				}
			}
			else
			{
				if (cSSkillExchange == null)
				{
					CSSkillExchange expr_19 = new CSSkillExchange();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillExchange = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSSkillExchange.index = num2;
			}
		}
		if (cSSkillExchange == null)
		{
			CSSkillExchange expr_99 = new CSSkillExchange();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSSkillExchange = expr_99;
		}
		return cSSkillExchange;
	}

	private static void Write(CSSkillList cSSkillList, ProtoWriter writer)
	{
		if (cSSkillList.GetType() != typeof(CSSkillList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillList), cSSkillList.GetType());
		}
		int expr_2D = cSSkillList.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillList, writer);
	}

	private static CSSkillList Read(CSSkillList cSSkillList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSkillList == null)
				{
					CSSkillList expr_40 = new CSSkillList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSkillList = expr_40;
				}
				protoReader.AppendExtensionData(cSSkillList);
			}
			else
			{
				if (cSSkillList == null)
				{
					CSSkillList expr_19 = new CSSkillList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillList = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSSkillList.id = id;
			}
		}
		if (cSSkillList == null)
		{
			CSSkillList expr_69 = new CSSkillList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSkillList = expr_69;
		}
		return cSSkillList;
	}

	private static void Write(CSSkillMix cSSkillMix, ProtoWriter writer)
	{
		if (cSSkillMix.GetType() != typeof(CSSkillMix))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillMix), cSSkillMix.GetType());
		}
		int expr_2D = cSSkillMix.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillMix, writer);
	}

	private static CSSkillMix Read(CSSkillMix cSSkillMix, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSkillMix == null)
				{
					CSSkillMix expr_40 = new CSSkillMix();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSkillMix = expr_40;
				}
				protoReader.AppendExtensionData(cSSkillMix);
			}
			else
			{
				if (cSSkillMix == null)
				{
					CSSkillMix expr_19 = new CSSkillMix();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillMix = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSSkillMix.type = type;
			}
		}
		if (cSSkillMix == null)
		{
			CSSkillMix expr_69 = new CSSkillMix();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSkillMix = expr_69;
		}
		return cSSkillMix;
	}

	private static void Write(CSSkillMixEnd cSSkillMixEnd, ProtoWriter writer)
	{
		if (cSSkillMixEnd.GetType() != typeof(CSSkillMixEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillMixEnd), cSSkillMixEnd.GetType());
		}
		int expr_2D = cSSkillMixEnd.skillId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillMixEnd, writer);
	}

	private static CSSkillMixEnd Read(CSSkillMixEnd cSSkillMixEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSkillMixEnd == null)
				{
					CSSkillMixEnd expr_40 = new CSSkillMixEnd();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSkillMixEnd = expr_40;
				}
				protoReader.AppendExtensionData(cSSkillMixEnd);
			}
			else
			{
				if (cSSkillMixEnd == null)
				{
					CSSkillMixEnd expr_19 = new CSSkillMixEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillMixEnd = expr_19;
				}
				int skillId = protoReader.ReadInt32();
				cSSkillMixEnd.skillId = skillId;
			}
		}
		if (cSSkillMixEnd == null)
		{
			CSSkillMixEnd expr_69 = new CSSkillMixEnd();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSkillMixEnd = expr_69;
		}
		return cSSkillMixEnd;
	}

	private static void Write(CSSkillRemove cSSkillRemove, ProtoWriter writer)
	{
		if (cSSkillRemove.GetType() != typeof(CSSkillRemove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillRemove), cSSkillRemove.GetType());
		}
		long expr_2D = cSSkillRemove.skillId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSSkillRemove.type;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSSkillRemove, writer);
	}

	private static CSSkillRemove Read(CSSkillRemove cSSkillRemove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSSkillRemove == null)
					{
						CSSkillRemove expr_70 = new CSSkillRemove();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSSkillRemove = expr_70;
					}
					protoReader.AppendExtensionData(cSSkillRemove);
				}
				else
				{
					if (cSSkillRemove == null)
					{
						CSSkillRemove expr_49 = new CSSkillRemove();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSkillRemove = expr_49;
					}
					int type = protoReader.ReadInt32();
					cSSkillRemove.type = type;
				}
			}
			else
			{
				if (cSSkillRemove == null)
				{
					CSSkillRemove expr_19 = new CSSkillRemove();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillRemove = expr_19;
				}
				long skillId = protoReader.ReadInt64();
				cSSkillRemove.skillId = skillId;
			}
		}
		if (cSSkillRemove == null)
		{
			CSSkillRemove expr_99 = new CSSkillRemove();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSSkillRemove = expr_99;
		}
		return cSSkillRemove;
	}

	private static void Write(CSSkillUp cSSkillUp, ProtoWriter writer)
	{
		if (cSSkillUp.GetType() != typeof(CSSkillUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSkillUp), cSSkillUp.GetType());
		}
		int expr_2D = cSSkillUp.skillType;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		List<long> expr_4A = cSSkillUp.skills;
		if (expr_4A != null)
		{
			List<long> list = expr_4A;
			foreach (long arg_70_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_70_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(cSSkillUp, writer);
	}

	private static CSSkillUp Read(CSSkillUp cSSkillUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSSkillUp == null)
					{
						CSSkillUp expr_CB = new CSSkillUp();
						ProtoReader.NoteObject(expr_CB, protoReader);
						cSSkillUp = expr_CB;
					}
					protoReader.AppendExtensionData(cSSkillUp);
				}
				else
				{
					if (cSSkillUp == null)
					{
						CSSkillUp expr_49 = new CSSkillUp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSkillUp = expr_49;
					}
					List<long> list = cSSkillUp.skills;
					if (list == null)
					{
						list = new List<long>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int num2 = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt64());
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt64());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (cSSkillUp == null)
				{
					CSSkillUp expr_19 = new CSSkillUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSkillUp = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSSkillUp.skillType = num2;
			}
		}
		if (cSSkillUp == null)
		{
			CSSkillUp expr_F4 = new CSSkillUp();
			ProtoReader.NoteObject(expr_F4, protoReader);
			cSSkillUp = expr_F4;
		}
		return cSSkillUp;
	}

	private static void Write(CSSocketHeat cSSocketHeat, ProtoWriter writer)
	{
		if (cSSocketHeat.GetType() != typeof(CSSocketHeat))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSocketHeat), cSSocketHeat.GetType());
		}
		long expr_2D = cSSocketHeat.playerid;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSocketHeat, writer);
	}

	private static CSSocketHeat Read(CSSocketHeat cSSocketHeat, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSocketHeat == null)
				{
					CSSocketHeat expr_40 = new CSSocketHeat();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSocketHeat = expr_40;
				}
				protoReader.AppendExtensionData(cSSocketHeat);
			}
			else
			{
				if (cSSocketHeat == null)
				{
					CSSocketHeat expr_19 = new CSSocketHeat();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSocketHeat = expr_19;
				}
				long playerid = protoReader.ReadInt64();
				cSSocketHeat.playerid = playerid;
			}
		}
		if (cSSocketHeat == null)
		{
			CSSocketHeat expr_69 = new CSSocketHeat();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSocketHeat = expr_69;
		}
		return cSSocketHeat;
	}

	private static void Write(CSSocketRegister cSSocketRegister, ProtoWriter writer)
	{
		if (cSSocketRegister.GetType() != typeof(CSSocketRegister))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSocketRegister), cSSocketRegister.GetType());
		}
		long expr_2D = cSSocketRegister.playerId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSocketRegister, writer);
	}

	private static CSSocketRegister Read(CSSocketRegister cSSocketRegister, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSocketRegister == null)
				{
					CSSocketRegister expr_40 = new CSSocketRegister();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSocketRegister = expr_40;
				}
				protoReader.AppendExtensionData(cSSocketRegister);
			}
			else
			{
				if (cSSocketRegister == null)
				{
					CSSocketRegister expr_19 = new CSSocketRegister();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSocketRegister = expr_19;
				}
				long playerId = protoReader.ReadInt64();
				cSSocketRegister.playerId = playerId;
			}
		}
		if (cSSocketRegister == null)
		{
			CSSocketRegister expr_69 = new CSSocketRegister();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSocketRegister = expr_69;
		}
		return cSSocketRegister;
	}

	private static void Write(CSSoldierAdd cSSoldierAdd, ProtoWriter writer)
	{
		if (cSSoldierAdd.GetType() != typeof(CSSoldierAdd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSoldierAdd), cSSoldierAdd.GetType());
		}
		int expr_2D = cSSoldierAdd.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSSoldierAdd.type;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSSoldierAdd, writer);
	}

	private static CSSoldierAdd Read(CSSoldierAdd cSSoldierAdd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSSoldierAdd == null)
					{
						CSSoldierAdd expr_70 = new CSSoldierAdd();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSSoldierAdd = expr_70;
					}
					protoReader.AppendExtensionData(cSSoldierAdd);
				}
				else
				{
					if (cSSoldierAdd == null)
					{
						CSSoldierAdd expr_49 = new CSSoldierAdd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSoldierAdd = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSSoldierAdd.type = num2;
				}
			}
			else
			{
				if (cSSoldierAdd == null)
				{
					CSSoldierAdd expr_19 = new CSSoldierAdd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSoldierAdd = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSSoldierAdd.id = num2;
			}
		}
		if (cSSoldierAdd == null)
		{
			CSSoldierAdd expr_99 = new CSSoldierAdd();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSSoldierAdd = expr_99;
		}
		return cSSoldierAdd;
	}

	private static void Write(CSSoldierConfigure cSSoldierConfigure, ProtoWriter writer)
	{
		if (cSSoldierConfigure.GetType() != typeof(CSSoldierConfigure))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSoldierConfigure), cSSoldierConfigure.GetType());
		}
		int expr_2D = cSSoldierConfigure.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSoldierConfigure, writer);
	}

	private static CSSoldierConfigure Read(CSSoldierConfigure cSSoldierConfigure, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSoldierConfigure == null)
				{
					CSSoldierConfigure expr_40 = new CSSoldierConfigure();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSoldierConfigure = expr_40;
				}
				protoReader.AppendExtensionData(cSSoldierConfigure);
			}
			else
			{
				if (cSSoldierConfigure == null)
				{
					CSSoldierConfigure expr_19 = new CSSoldierConfigure();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSoldierConfigure = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSSoldierConfigure.id = id;
			}
		}
		if (cSSoldierConfigure == null)
		{
			CSSoldierConfigure expr_69 = new CSSoldierConfigure();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSoldierConfigure = expr_69;
		}
		return cSSoldierConfigure;
	}

	private static void Write(CSSoldierConfigureEnd cSSoldierConfigureEnd, ProtoWriter writer)
	{
		if (cSSoldierConfigureEnd.GetType() != typeof(CSSoldierConfigureEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSoldierConfigureEnd), cSSoldierConfigureEnd.GetType());
		}
		int expr_2D = cSSoldierConfigureEnd.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSSoldierConfigureEnd.type;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSSoldierConfigureEnd, writer);
	}

	private static CSSoldierConfigureEnd Read(CSSoldierConfigureEnd cSSoldierConfigureEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSSoldierConfigureEnd == null)
					{
						CSSoldierConfigureEnd expr_70 = new CSSoldierConfigureEnd();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSSoldierConfigureEnd = expr_70;
					}
					protoReader.AppendExtensionData(cSSoldierConfigureEnd);
				}
				else
				{
					if (cSSoldierConfigureEnd == null)
					{
						CSSoldierConfigureEnd expr_49 = new CSSoldierConfigureEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSoldierConfigureEnd = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSSoldierConfigureEnd.type = num2;
				}
			}
			else
			{
				if (cSSoldierConfigureEnd == null)
				{
					CSSoldierConfigureEnd expr_19 = new CSSoldierConfigureEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSoldierConfigureEnd = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSSoldierConfigureEnd.id = num2;
			}
		}
		if (cSSoldierConfigureEnd == null)
		{
			CSSoldierConfigureEnd expr_99 = new CSSoldierConfigureEnd();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSSoldierConfigureEnd = expr_99;
		}
		return cSSoldierConfigureEnd;
	}

	private static void Write(CSSoldierRelive cSSoldierRelive, ProtoWriter writer)
	{
		if (cSSoldierRelive.GetType() != typeof(CSSoldierRelive))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSoldierRelive), cSSoldierRelive.GetType());
		}
		long expr_2D = cSSoldierRelive.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSoldierRelive, writer);
	}

	private static CSSoldierRelive Read(CSSoldierRelive cSSoldierRelive, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSoldierRelive == null)
				{
					CSSoldierRelive expr_40 = new CSSoldierRelive();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSoldierRelive = expr_40;
				}
				protoReader.AppendExtensionData(cSSoldierRelive);
			}
			else
			{
				if (cSSoldierRelive == null)
				{
					CSSoldierRelive expr_19 = new CSSoldierRelive();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSoldierRelive = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSSoldierRelive.id = id;
			}
		}
		if (cSSoldierRelive == null)
		{
			CSSoldierRelive expr_69 = new CSSoldierRelive();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSoldierRelive = expr_69;
		}
		return cSSoldierRelive;
	}

	private static void Write(CSSoldierSkillUp cSSoldierSkillUp, ProtoWriter writer)
	{
		if (cSSoldierSkillUp.GetType() != typeof(CSSoldierSkillUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSoldierSkillUp), cSSoldierSkillUp.GetType());
		}
		long expr_2D = cSSoldierSkillUp.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSoldierSkillUp, writer);
	}

	private static CSSoldierSkillUp Read(CSSoldierSkillUp cSSoldierSkillUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSoldierSkillUp == null)
				{
					CSSoldierSkillUp expr_40 = new CSSoldierSkillUp();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSoldierSkillUp = expr_40;
				}
				protoReader.AppendExtensionData(cSSoldierSkillUp);
			}
			else
			{
				if (cSSoldierSkillUp == null)
				{
					CSSoldierSkillUp expr_19 = new CSSoldierSkillUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSoldierSkillUp = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSSoldierSkillUp.id = id;
			}
		}
		if (cSSoldierSkillUp == null)
		{
			CSSoldierSkillUp expr_69 = new CSSoldierSkillUp();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSoldierSkillUp = expr_69;
		}
		return cSSoldierSkillUp;
	}

	private static void Write(CSSoldierUpStar cSSoldierUpStar, ProtoWriter writer)
	{
		if (cSSoldierUpStar.GetType() != typeof(CSSoldierUpStar))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSoldierUpStar), cSSoldierUpStar.GetType());
		}
		long expr_2D = cSSoldierUpStar.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSoldierUpStar, writer);
	}

	private static CSSoldierUpStar Read(CSSoldierUpStar cSSoldierUpStar, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSoldierUpStar == null)
				{
					CSSoldierUpStar expr_40 = new CSSoldierUpStar();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSoldierUpStar = expr_40;
				}
				protoReader.AppendExtensionData(cSSoldierUpStar);
			}
			else
			{
				if (cSSoldierUpStar == null)
				{
					CSSoldierUpStar expr_19 = new CSSoldierUpStar();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSoldierUpStar = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSSoldierUpStar.id = id;
			}
		}
		if (cSSoldierUpStar == null)
		{
			CSSoldierUpStar expr_69 = new CSSoldierUpStar();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSoldierUpStar = expr_69;
		}
		return cSSoldierUpStar;
	}

	private static void Write(CSSpyIsland cSSpyIsland, ProtoWriter writer)
	{
		if (cSSpyIsland.GetType() != typeof(CSSpyIsland))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSpyIsland), cSSpyIsland.GetType());
		}
		long expr_2D = cSSpyIsland.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSSpyIsland.from;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSSpyIsland.npcId;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = cSSpyIsland.serverId;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = cSSpyIsland.areaId;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		ProtoWriter.AppendExtensionData(cSSpyIsland, writer);
	}

	private static CSSpyIsland Read(CSSpyIsland cSSpyIsland, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 6)
						{
							if (num != 7)
							{
								if (cSSpyIsland == null)
								{
									CSSpyIsland expr_100 = new CSSpyIsland();
									ProtoReader.NoteObject(expr_100, protoReader);
									cSSpyIsland = expr_100;
								}
								protoReader.AppendExtensionData(cSSpyIsland);
							}
							else
							{
								if (cSSpyIsland == null)
								{
									CSSpyIsland expr_D9 = new CSSpyIsland();
									ProtoReader.NoteObject(expr_D9, protoReader);
									cSSpyIsland = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								cSSpyIsland.areaId = num2;
							}
						}
						else
						{
							if (cSSpyIsland == null)
							{
								CSSpyIsland expr_A9 = new CSSpyIsland();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSSpyIsland = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							cSSpyIsland.serverId = num2;
						}
					}
					else
					{
						if (cSSpyIsland == null)
						{
							CSSpyIsland expr_79 = new CSSpyIsland();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSSpyIsland = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSSpyIsland.npcId = num2;
					}
				}
				else
				{
					if (cSSpyIsland == null)
					{
						CSSpyIsland expr_49 = new CSSpyIsland();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSSpyIsland = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSSpyIsland.from = num2;
				}
			}
			else
			{
				if (cSSpyIsland == null)
				{
					CSSpyIsland expr_19 = new CSSpyIsland();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSpyIsland = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSSpyIsland.id = id;
			}
		}
		if (cSSpyIsland == null)
		{
			CSSpyIsland expr_129 = new CSSpyIsland();
			ProtoReader.NoteObject(expr_129, protoReader);
			cSSpyIsland = expr_129;
		}
		return cSSpyIsland;
	}

	private static void Write(CSSweep cSSweep, ProtoWriter writer)
	{
		if (cSSweep.GetType() != typeof(CSSweep))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSSweep), cSSweep.GetType());
		}
		int expr_2D = cSSweep.battleId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSSweep, writer);
	}

	private static CSSweep Read(CSSweep cSSweep, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSSweep == null)
				{
					CSSweep expr_40 = new CSSweep();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSSweep = expr_40;
				}
				protoReader.AppendExtensionData(cSSweep);
			}
			else
			{
				if (cSSweep == null)
				{
					CSSweep expr_19 = new CSSweep();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSSweep = expr_19;
				}
				int battleId = protoReader.ReadInt32();
				cSSweep.battleId = battleId;
			}
		}
		if (cSSweep == null)
		{
			CSSweep expr_69 = new CSSweep();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSSweep = expr_69;
		}
		return cSSweep;
	}

	private static void Write(CSTakeAllResource cSTakeAllResource, ProtoWriter writer)
	{
		if (cSTakeAllResource.GetType() != typeof(CSTakeAllResource))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTakeAllResource), cSTakeAllResource.GetType());
		}
		int expr_2D = cSTakeAllResource.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSTakeAllResource, writer);
	}

	private static CSTakeAllResource Read(CSTakeAllResource cSTakeAllResource, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSTakeAllResource == null)
				{
					CSTakeAllResource expr_40 = new CSTakeAllResource();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSTakeAllResource = expr_40;
				}
				protoReader.AppendExtensionData(cSTakeAllResource);
			}
			else
			{
				if (cSTakeAllResource == null)
				{
					CSTakeAllResource expr_19 = new CSTakeAllResource();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTakeAllResource = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSTakeAllResource.id = id;
			}
		}
		if (cSTakeAllResource == null)
		{
			CSTakeAllResource expr_69 = new CSTakeAllResource();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSTakeAllResource = expr_69;
		}
		return cSTakeAllResource;
	}

	private static void Write(CSTakeResource cSTakeResource, ProtoWriter writer)
	{
		if (cSTakeResource.GetType() != typeof(CSTakeResource))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTakeResource), cSTakeResource.GetType());
		}
		long expr_2D = cSTakeResource.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = cSTakeResource.takeTime;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = cSTakeResource.resId;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		int expr_96 = cSTakeResource.takeNum;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(cSTakeResource, writer);
	}

	private static CSTakeResource Read(CSTakeResource cSTakeResource, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (cSTakeResource == null)
							{
								CSTakeResource expr_D0 = new CSTakeResource();
								ProtoReader.NoteObject(expr_D0, protoReader);
								cSTakeResource = expr_D0;
							}
							protoReader.AppendExtensionData(cSTakeResource);
						}
						else
						{
							if (cSTakeResource == null)
							{
								CSTakeResource expr_A9 = new CSTakeResource();
								ProtoReader.NoteObject(expr_A9, protoReader);
								cSTakeResource = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							cSTakeResource.takeNum = num2;
						}
					}
					else
					{
						if (cSTakeResource == null)
						{
							CSTakeResource expr_79 = new CSTakeResource();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSTakeResource = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSTakeResource.resId = num2;
					}
				}
				else
				{
					if (cSTakeResource == null)
					{
						CSTakeResource expr_49 = new CSTakeResource();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSTakeResource = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					cSTakeResource.takeTime = num3;
				}
			}
			else
			{
				if (cSTakeResource == null)
				{
					CSTakeResource expr_19 = new CSTakeResource();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTakeResource = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				cSTakeResource.buildingId = num3;
			}
		}
		if (cSTakeResource == null)
		{
			CSTakeResource expr_F9 = new CSTakeResource();
			ProtoReader.NoteObject(expr_F9, protoReader);
			cSTakeResource = expr_F9;
		}
		return cSTakeResource;
	}

	private static void Write(CSTechDiamondPrize cSTechDiamondPrize, ProtoWriter writer)
	{
		if (cSTechDiamondPrize.GetType() != typeof(CSTechDiamondPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTechDiamondPrize), cSTechDiamondPrize.GetType());
		}
		int expr_2D = cSTechDiamondPrize.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSTechDiamondPrize, writer);
	}

	private static CSTechDiamondPrize Read(CSTechDiamondPrize cSTechDiamondPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSTechDiamondPrize == null)
				{
					CSTechDiamondPrize expr_40 = new CSTechDiamondPrize();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSTechDiamondPrize = expr_40;
				}
				protoReader.AppendExtensionData(cSTechDiamondPrize);
			}
			else
			{
				if (cSTechDiamondPrize == null)
				{
					CSTechDiamondPrize expr_19 = new CSTechDiamondPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTechDiamondPrize = expr_19;
				}
				int id = protoReader.ReadInt32();
				cSTechDiamondPrize.id = id;
			}
		}
		if (cSTechDiamondPrize == null)
		{
			CSTechDiamondPrize expr_69 = new CSTechDiamondPrize();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSTechDiamondPrize = expr_69;
		}
		return cSTechDiamondPrize;
	}

	private static void Write(CSTechList cSTechList, ProtoWriter writer)
	{
		if (cSTechList.GetType() != typeof(CSTechList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTechList), cSTechList.GetType());
		}
		int expr_2D = cSTechList.typeId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSTechList, writer);
	}

	private static CSTechList Read(CSTechList cSTechList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSTechList == null)
				{
					CSTechList expr_40 = new CSTechList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSTechList = expr_40;
				}
				protoReader.AppendExtensionData(cSTechList);
			}
			else
			{
				if (cSTechList == null)
				{
					CSTechList expr_19 = new CSTechList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTechList = expr_19;
				}
				int typeId = protoReader.ReadInt32();
				cSTechList.typeId = typeId;
			}
		}
		if (cSTechList == null)
		{
			CSTechList expr_69 = new CSTechList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSTechList = expr_69;
		}
		return cSTechList;
	}

	private static void Write(CSTechUp cSTechUp, ProtoWriter writer)
	{
		if (cSTechUp.GetType() != typeof(CSTechUp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTechUp), cSTechUp.GetType());
		}
		int expr_2D = cSTechUp.techId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSTechUp.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSTechUp, writer);
	}

	private static CSTechUp Read(CSTechUp cSTechUp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSTechUp == null)
					{
						CSTechUp expr_70 = new CSTechUp();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSTechUp = expr_70;
					}
					protoReader.AppendExtensionData(cSTechUp);
				}
				else
				{
					if (cSTechUp == null)
					{
						CSTechUp expr_49 = new CSTechUp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSTechUp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSTechUp.money = num2;
				}
			}
			else
			{
				if (cSTechUp == null)
				{
					CSTechUp expr_19 = new CSTechUp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTechUp = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSTechUp.techId = num2;
			}
		}
		if (cSTechUp == null)
		{
			CSTechUp expr_99 = new CSTechUp();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSTechUp = expr_99;
		}
		return cSTechUp;
	}

	private static void Write(CSTechUpEnd cSTechUpEnd, ProtoWriter writer)
	{
		if (cSTechUpEnd.GetType() != typeof(CSTechUpEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTechUpEnd), cSTechUpEnd.GetType());
		}
		int expr_2D = cSTechUpEnd.techId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSTechUpEnd.money;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSTechUpEnd, writer);
	}

	private static CSTechUpEnd Read(CSTechUpEnd cSTechUpEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSTechUpEnd == null)
					{
						CSTechUpEnd expr_70 = new CSTechUpEnd();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSTechUpEnd = expr_70;
					}
					protoReader.AppendExtensionData(cSTechUpEnd);
				}
				else
				{
					if (cSTechUpEnd == null)
					{
						CSTechUpEnd expr_49 = new CSTechUpEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSTechUpEnd = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSTechUpEnd.money = num2;
				}
			}
			else
			{
				if (cSTechUpEnd == null)
				{
					CSTechUpEnd expr_19 = new CSTechUpEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTechUpEnd = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSTechUpEnd.techId = num2;
			}
		}
		if (cSTechUpEnd == null)
		{
			CSTechUpEnd expr_99 = new CSTechUpEnd();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSTechUpEnd = expr_99;
		}
		return cSTechUpEnd;
	}

	private static void Write(CSTowerStrength cSTowerStrength, ProtoWriter writer)
	{
		if (cSTowerStrength.GetType() != typeof(CSTowerStrength))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTowerStrength), cSTowerStrength.GetType());
		}
		long expr_2D = cSTowerStrength.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSTowerStrength, writer);
	}

	private static CSTowerStrength Read(CSTowerStrength cSTowerStrength, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSTowerStrength == null)
				{
					CSTowerStrength expr_40 = new CSTowerStrength();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSTowerStrength = expr_40;
				}
				protoReader.AppendExtensionData(cSTowerStrength);
			}
			else
			{
				if (cSTowerStrength == null)
				{
					CSTowerStrength expr_19 = new CSTowerStrength();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTowerStrength = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSTowerStrength.buildingId = buildingId;
			}
		}
		if (cSTowerStrength == null)
		{
			CSTowerStrength expr_69 = new CSTowerStrength();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSTowerStrength = expr_69;
		}
		return cSTowerStrength;
	}

	private static void Write(CSTowerUpGrade cSTowerUpGrade, ProtoWriter writer)
	{
		if (cSTowerUpGrade.GetType() != typeof(CSTowerUpGrade))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTowerUpGrade), cSTowerUpGrade.GetType());
		}
		long expr_2D = cSTowerUpGrade.buildingId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSTowerUpGrade, writer);
	}

	private static CSTowerUpGrade Read(CSTowerUpGrade cSTowerUpGrade, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSTowerUpGrade == null)
				{
					CSTowerUpGrade expr_40 = new CSTowerUpGrade();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSTowerUpGrade = expr_40;
				}
				protoReader.AppendExtensionData(cSTowerUpGrade);
			}
			else
			{
				if (cSTowerUpGrade == null)
				{
					CSTowerUpGrade expr_19 = new CSTowerUpGrade();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTowerUpGrade = expr_19;
				}
				long buildingId = protoReader.ReadInt64();
				cSTowerUpGrade.buildingId = buildingId;
			}
		}
		if (cSTowerUpGrade == null)
		{
			CSTowerUpGrade expr_69 = new CSTowerUpGrade();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSTowerUpGrade = expr_69;
		}
		return cSTowerUpGrade;
	}

	private static void Write(CSTurntableDraw cSTurntableDraw, ProtoWriter writer)
	{
		if (cSTurntableDraw.GetType() != typeof(CSTurntableDraw))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSTurntableDraw), cSTurntableDraw.GetType());
		}
		int expr_2D = cSTurntableDraw.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSTurntableDraw, writer);
	}

	private static CSTurntableDraw Read(CSTurntableDraw cSTurntableDraw, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSTurntableDraw == null)
				{
					CSTurntableDraw expr_40 = new CSTurntableDraw();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSTurntableDraw = expr_40;
				}
				protoReader.AppendExtensionData(cSTurntableDraw);
			}
			else
			{
				if (cSTurntableDraw == null)
				{
					CSTurntableDraw expr_19 = new CSTurntableDraw();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSTurntableDraw = expr_19;
				}
				int type = protoReader.ReadInt32();
				cSTurntableDraw.type = type;
			}
		}
		if (cSTurntableDraw == null)
		{
			CSTurntableDraw expr_69 = new CSTurntableDraw();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSTurntableDraw = expr_69;
		}
		return cSTurntableDraw;
	}

	private static void Write(CSUseItem cSUseItem, ProtoWriter writer)
	{
		if (cSUseItem.GetType() != typeof(CSUseItem))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSUseItem), cSUseItem.GetType());
		}
		int expr_2D = cSUseItem.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSUseItem.num;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSUseItem, writer);
	}

	private static CSUseItem Read(CSUseItem cSUseItem, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSUseItem == null)
					{
						CSUseItem expr_70 = new CSUseItem();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSUseItem = expr_70;
					}
					protoReader.AppendExtensionData(cSUseItem);
				}
				else
				{
					if (cSUseItem == null)
					{
						CSUseItem expr_49 = new CSUseItem();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSUseItem = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSUseItem.num = num2;
				}
			}
			else
			{
				if (cSUseItem == null)
				{
					CSUseItem expr_19 = new CSUseItem();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSUseItem = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSUseItem.itemId = num2;
			}
		}
		if (cSUseItem == null)
		{
			CSUseItem expr_99 = new CSUseItem();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSUseItem = expr_99;
		}
		return cSUseItem;
	}

	private static void Write(CSUseItemToAddExp cSUseItemToAddExp, ProtoWriter writer)
	{
		if (cSUseItemToAddExp.GetType() != typeof(CSUseItemToAddExp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSUseItemToAddExp), cSUseItemToAddExp.GetType());
		}
		long expr_2D = cSUseItemToAddExp.soldierId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSUseItemToAddExp.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = cSUseItemToAddExp.num;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(cSUseItemToAddExp, writer);
	}

	private static CSUseItemToAddExp Read(CSUseItemToAddExp cSUseItemToAddExp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSUseItemToAddExp == null)
						{
							CSUseItemToAddExp expr_A0 = new CSUseItemToAddExp();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSUseItemToAddExp = expr_A0;
						}
						protoReader.AppendExtensionData(cSUseItemToAddExp);
					}
					else
					{
						if (cSUseItemToAddExp == null)
						{
							CSUseItemToAddExp expr_79 = new CSUseItemToAddExp();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSUseItemToAddExp = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						cSUseItemToAddExp.num = num2;
					}
				}
				else
				{
					if (cSUseItemToAddExp == null)
					{
						CSUseItemToAddExp expr_49 = new CSUseItemToAddExp();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSUseItemToAddExp = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSUseItemToAddExp.itemId = num2;
				}
			}
			else
			{
				if (cSUseItemToAddExp == null)
				{
					CSUseItemToAddExp expr_19 = new CSUseItemToAddExp();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSUseItemToAddExp = expr_19;
				}
				long soldierId = protoReader.ReadInt64();
				cSUseItemToAddExp.soldierId = soldierId;
			}
		}
		if (cSUseItemToAddExp == null)
		{
			CSUseItemToAddExp expr_C9 = new CSUseItemToAddExp();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSUseItemToAddExp = expr_C9;
		}
		return cSUseItemToAddExp;
	}

	private static void Write(CSUseItemToRelieve cSUseItemToRelieve, ProtoWriter writer)
	{
		if (cSUseItemToRelieve.GetType() != typeof(CSUseItemToRelieve))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSUseItemToRelieve), cSUseItemToRelieve.GetType());
		}
		int expr_2D = cSUseItemToRelieve.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = cSUseItemToRelieve.num;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		long expr_67 = cSUseItemToRelieve.soldierId;
		if (expr_67 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_67, writer);
		}
		ProtoWriter.AppendExtensionData(cSUseItemToRelieve, writer);
	}

	private static CSUseItemToRelieve Read(CSUseItemToRelieve cSUseItemToRelieve, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (cSUseItemToRelieve == null)
						{
							CSUseItemToRelieve expr_A0 = new CSUseItemToRelieve();
							ProtoReader.NoteObject(expr_A0, protoReader);
							cSUseItemToRelieve = expr_A0;
						}
						protoReader.AppendExtensionData(cSUseItemToRelieve);
					}
					else
					{
						if (cSUseItemToRelieve == null)
						{
							CSUseItemToRelieve expr_79 = new CSUseItemToRelieve();
							ProtoReader.NoteObject(expr_79, protoReader);
							cSUseItemToRelieve = expr_79;
						}
						long soldierId = protoReader.ReadInt64();
						cSUseItemToRelieve.soldierId = soldierId;
					}
				}
				else
				{
					if (cSUseItemToRelieve == null)
					{
						CSUseItemToRelieve expr_49 = new CSUseItemToRelieve();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSUseItemToRelieve = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					cSUseItemToRelieve.num = num2;
				}
			}
			else
			{
				if (cSUseItemToRelieve == null)
				{
					CSUseItemToRelieve expr_19 = new CSUseItemToRelieve();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSUseItemToRelieve = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				cSUseItemToRelieve.itemId = num2;
			}
		}
		if (cSUseItemToRelieve == null)
		{
			CSUseItemToRelieve expr_C9 = new CSUseItemToRelieve();
			ProtoReader.NoteObject(expr_C9, protoReader);
			cSUseItemToRelieve = expr_C9;
		}
		return cSUseItemToRelieve;
	}

	private static void Write(CSUseMoneyBuyGold cSUseMoneyBuyGold, ProtoWriter writer)
	{
		if (cSUseMoneyBuyGold.GetType() != typeof(CSUseMoneyBuyGold))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSUseMoneyBuyGold), cSUseMoneyBuyGold.GetType());
		}
		bool expr_2D = cSUseMoneyBuyGold.freeBuy;
		if (expr_2D)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_2D, writer);
		}
		int expr_4A = cSUseMoneyBuyGold.id;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(cSUseMoneyBuyGold, writer);
	}

	private static CSUseMoneyBuyGold Read(CSUseMoneyBuyGold cSUseMoneyBuyGold, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSUseMoneyBuyGold == null)
					{
						CSUseMoneyBuyGold expr_70 = new CSUseMoneyBuyGold();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSUseMoneyBuyGold = expr_70;
					}
					protoReader.AppendExtensionData(cSUseMoneyBuyGold);
				}
				else
				{
					if (cSUseMoneyBuyGold == null)
					{
						CSUseMoneyBuyGold expr_49 = new CSUseMoneyBuyGold();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSUseMoneyBuyGold = expr_49;
					}
					int id = protoReader.ReadInt32();
					cSUseMoneyBuyGold.id = id;
				}
			}
			else
			{
				if (cSUseMoneyBuyGold == null)
				{
					CSUseMoneyBuyGold expr_19 = new CSUseMoneyBuyGold();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSUseMoneyBuyGold = expr_19;
				}
				bool freeBuy = protoReader.ReadBoolean();
				cSUseMoneyBuyGold.freeBuy = freeBuy;
			}
		}
		if (cSUseMoneyBuyGold == null)
		{
			CSUseMoneyBuyGold expr_99 = new CSUseMoneyBuyGold();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSUseMoneyBuyGold = expr_99;
		}
		return cSUseMoneyBuyGold;
	}

	private static void Write(CSWarStarPrize cSWarStarPrize, ProtoWriter writer)
	{
		if (cSWarStarPrize.GetType() != typeof(CSWarStarPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSWarStarPrize), cSWarStarPrize.GetType());
		}
		long expr_2D = cSWarStarPrize.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = cSWarStarPrize.star;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(cSWarStarPrize, writer);
	}

	private static CSWarStarPrize Read(CSWarStarPrize cSWarStarPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (cSWarStarPrize == null)
					{
						CSWarStarPrize expr_70 = new CSWarStarPrize();
						ProtoReader.NoteObject(expr_70, protoReader);
						cSWarStarPrize = expr_70;
					}
					protoReader.AppendExtensionData(cSWarStarPrize);
				}
				else
				{
					if (cSWarStarPrize == null)
					{
						CSWarStarPrize expr_49 = new CSWarStarPrize();
						ProtoReader.NoteObject(expr_49, protoReader);
						cSWarStarPrize = expr_49;
					}
					int star = protoReader.ReadInt32();
					cSWarStarPrize.star = star;
				}
			}
			else
			{
				if (cSWarStarPrize == null)
				{
					CSWarStarPrize expr_19 = new CSWarStarPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSWarStarPrize = expr_19;
				}
				long id = protoReader.ReadInt64();
				cSWarStarPrize.id = id;
			}
		}
		if (cSWarStarPrize == null)
		{
			CSWarStarPrize expr_99 = new CSWarStarPrize();
			ProtoReader.NoteObject(expr_99, protoReader);
			cSWarStarPrize = expr_99;
		}
		return cSWarStarPrize;
	}

	private static void Write(CSWarZoneList cSWarZoneList, ProtoWriter writer)
	{
		if (cSWarZoneList.GetType() != typeof(CSWarZoneList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(CSWarZoneList), cSWarZoneList.GetType());
		}
		int expr_2D = cSWarZoneList.zoneId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(cSWarZoneList, writer);
	}

	private static CSWarZoneList Read(CSWarZoneList cSWarZoneList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (cSWarZoneList == null)
				{
					CSWarZoneList expr_40 = new CSWarZoneList();
					ProtoReader.NoteObject(expr_40, protoReader);
					cSWarZoneList = expr_40;
				}
				protoReader.AppendExtensionData(cSWarZoneList);
			}
			else
			{
				if (cSWarZoneList == null)
				{
					CSWarZoneList expr_19 = new CSWarZoneList();
					ProtoReader.NoteObject(expr_19, protoReader);
					cSWarZoneList = expr_19;
				}
				int zoneId = protoReader.ReadInt32();
				cSWarZoneList.zoneId = zoneId;
			}
		}
		if (cSWarZoneList == null)
		{
			CSWarZoneList expr_69 = new CSWarZoneList();
			ProtoReader.NoteObject(expr_69, protoReader);
			cSWarZoneList = expr_69;
		}
		return cSWarZoneList;
	}

	private static void Write(DesignActivityData designActivityData, ProtoWriter protoWriter)
	{
		if (designActivityData.GetType() != typeof(DesignActivityData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(DesignActivityData), designActivityData.GetType());
		}
		int expr_2D = designActivityData.activityId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		int expr_4A = designActivityData.activityType;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_4A, protoWriter);
		}
		string expr_67 = designActivityData.startTimeStr;
		if (expr_67 != null)
		{
			if (!(expr_67 == ""))
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_67, protoWriter);
			}
		}
		string expr_97 = designActivityData.endTimeStr;
		if (expr_97 != null)
		{
			if (!(expr_97 == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_97, protoWriter);
			}
		}
		string expr_C7 = designActivityData.showEndTimeStr;
		if (expr_C7 != null)
		{
			if (!(expr_C7 == ""))
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_C7, protoWriter);
			}
		}
		int expr_F7 = designActivityData.rewardType;
		if (expr_F7 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_F7, protoWriter);
		}
		int expr_114 = designActivityData.rewardCount;
		if (expr_114 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_114, protoWriter);
		}
		int expr_131 = designActivityData.condition;
		if (expr_131 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_131, protoWriter);
		}
		int expr_14F = designActivityData.conditionId;
		if (expr_14F != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_14F, protoWriter);
		}
		int expr_16D = designActivityData.repeatPrizeCount;
		if (expr_16D != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_16D, protoWriter);
		}
		int expr_18B = designActivityData.type;
		if (expr_18B != 0)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_18B, protoWriter);
		}
		int expr_1A9 = designActivityData.sort;
		if (expr_1A9 != 0)
		{
			ProtoWriter.WriteFieldHeader(13, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1A9, protoWriter);
		}
		string expr_1C7 = designActivityData.name;
		if (expr_1C7 != null)
		{
			if (!(expr_1C7 == ""))
			{
				ProtoWriter.WriteFieldHeader(14, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_1C7, protoWriter);
			}
		}
		string expr_1F8 = designActivityData.title;
		if (expr_1F8 != null)
		{
			if (!(expr_1F8 == ""))
			{
				ProtoWriter.WriteFieldHeader(15, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_1F8, protoWriter);
			}
		}
		string expr_229 = designActivityData.conditionName;
		if (expr_229 != null)
		{
			if (!(expr_229 == ""))
			{
				ProtoWriter.WriteFieldHeader(16, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_229, protoWriter);
			}
		}
		RewardOption expr_25A = designActivityData.normalOption;
		if (expr_25A != null)
		{
			ProtoWriter.WriteFieldHeader(17, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_25A, protoWriter);
			ProtoMsgSerializer.Write(expr_25A, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		RewardOption expr_287 = designActivityData.specialOption;
		if (expr_287 != null)
		{
			ProtoWriter.WriteFieldHeader(18, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_287, protoWriter);
			ProtoMsgSerializer.Write(expr_287, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		string expr_2B4 = designActivityData.totalDiscription;
		if (expr_2B4 != null)
		{
			if (!(expr_2B4 == ""))
			{
				ProtoWriter.WriteFieldHeader(19, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_2B4, protoWriter);
			}
		}
		int expr_2E5 = designActivityData.toShopId;
		if (expr_2E5 != 0)
		{
			ProtoWriter.WriteFieldHeader(20, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2E5, protoWriter);
		}
		int expr_303 = designActivityData.needMoney;
		if (expr_303 != 0)
		{
			ProtoWriter.WriteFieldHeader(21, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_303, protoWriter);
		}
		ProtoWriter.AppendExtensionData(designActivityData, protoWriter);
	}

	private static DesignActivityData Read(DesignActivityData designActivityData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (num != 11)
												{
													if (num != 12)
													{
														if (num != 13)
														{
															if (num != 14)
															{
																if (num != 15)
																{
																	if (num != 16)
																	{
																		if (num != 17)
																		{
																			if (num != 18)
																			{
																				if (num != 19)
																				{
																					if (num != 20)
																					{
																						if (num != 21)
																						{
																							if (designActivityData == null)
																							{
																								DesignActivityData expr_426 = new DesignActivityData();
																								ProtoReader.NoteObject(expr_426, protoReader);
																								designActivityData = expr_426;
																							}
																							protoReader.AppendExtensionData(designActivityData);
																						}
																						else
																						{
																							if (designActivityData == null)
																							{
																								DesignActivityData expr_3FF = new DesignActivityData();
																								ProtoReader.NoteObject(expr_3FF, protoReader);
																								designActivityData = expr_3FF;
																							}
																							int num2 = protoReader.ReadInt32();
																							designActivityData.needMoney = num2;
																						}
																					}
																					else
																					{
																						if (designActivityData == null)
																						{
																							DesignActivityData expr_3CE = new DesignActivityData();
																							ProtoReader.NoteObject(expr_3CE, protoReader);
																							designActivityData = expr_3CE;
																						}
																						int num2 = protoReader.ReadInt32();
																						designActivityData.toShopId = num2;
																					}
																				}
																				else
																				{
																					if (designActivityData == null)
																					{
																						DesignActivityData expr_39A = new DesignActivityData();
																						ProtoReader.NoteObject(expr_39A, protoReader);
																						designActivityData = expr_39A;
																					}
																					string text = protoReader.ReadString();
																					if (text != null)
																					{
																						designActivityData.totalDiscription = text;
																					}
																				}
																			}
																			else
																			{
																				if (designActivityData == null)
																				{
																					DesignActivityData expr_34F = new DesignActivityData();
																					ProtoReader.NoteObject(expr_34F, protoReader);
																					designActivityData = expr_34F;
																				}
																				RewardOption arg_366_0 = designActivityData.specialOption;
																				SubItemToken token = ProtoReader.StartSubItem(protoReader);
																				RewardOption arg_372_0 = ProtoMsgSerializer.Read(arg_366_0, protoReader);
																				ProtoReader.EndSubItem(token, protoReader);
																				RewardOption rewardOption = arg_372_0;
																				if (rewardOption != null)
																				{
																					designActivityData.specialOption = rewardOption;
																				}
																			}
																		}
																		else
																		{
																			if (designActivityData == null)
																			{
																				DesignActivityData expr_304 = new DesignActivityData();
																				ProtoReader.NoteObject(expr_304, protoReader);
																				designActivityData = expr_304;
																			}
																			RewardOption arg_31B_0 = designActivityData.normalOption;
																			SubItemToken token = ProtoReader.StartSubItem(protoReader);
																			RewardOption arg_327_0 = ProtoMsgSerializer.Read(arg_31B_0, protoReader);
																			ProtoReader.EndSubItem(token, protoReader);
																			RewardOption rewardOption = arg_327_0;
																			if (rewardOption != null)
																			{
																				designActivityData.normalOption = rewardOption;
																			}
																		}
																	}
																	else
																	{
																		if (designActivityData == null)
																		{
																			DesignActivityData expr_2D0 = new DesignActivityData();
																			ProtoReader.NoteObject(expr_2D0, protoReader);
																			designActivityData = expr_2D0;
																		}
																		string text = protoReader.ReadString();
																		if (text != null)
																		{
																			designActivityData.conditionName = text;
																		}
																	}
																}
																else
																{
																	if (designActivityData == null)
																	{
																		DesignActivityData expr_29C = new DesignActivityData();
																		ProtoReader.NoteObject(expr_29C, protoReader);
																		designActivityData = expr_29C;
																	}
																	string text = protoReader.ReadString();
																	if (text != null)
																	{
																		designActivityData.title = text;
																	}
																}
															}
															else
															{
																if (designActivityData == null)
																{
																	DesignActivityData expr_268 = new DesignActivityData();
																	ProtoReader.NoteObject(expr_268, protoReader);
																	designActivityData = expr_268;
																}
																string text = protoReader.ReadString();
																if (text != null)
																{
																	designActivityData.name = text;
																}
															}
														}
														else
														{
															if (designActivityData == null)
															{
																DesignActivityData expr_237 = new DesignActivityData();
																ProtoReader.NoteObject(expr_237, protoReader);
																designActivityData = expr_237;
															}
															int num2 = protoReader.ReadInt32();
															designActivityData.sort = num2;
														}
													}
													else
													{
														if (designActivityData == null)
														{
															DesignActivityData expr_206 = new DesignActivityData();
															ProtoReader.NoteObject(expr_206, protoReader);
															designActivityData = expr_206;
														}
														int num2 = protoReader.ReadInt32();
														designActivityData.type = num2;
													}
												}
												else
												{
													if (designActivityData == null)
													{
														DesignActivityData expr_1D5 = new DesignActivityData();
														ProtoReader.NoteObject(expr_1D5, protoReader);
														designActivityData = expr_1D5;
													}
													int num2 = protoReader.ReadInt32();
													designActivityData.repeatPrizeCount = num2;
												}
											}
											else
											{
												if (designActivityData == null)
												{
													DesignActivityData expr_1A4 = new DesignActivityData();
													ProtoReader.NoteObject(expr_1A4, protoReader);
													designActivityData = expr_1A4;
												}
												int num2 = protoReader.ReadInt32();
												designActivityData.conditionId = num2;
											}
										}
										else
										{
											if (designActivityData == null)
											{
												DesignActivityData expr_173 = new DesignActivityData();
												ProtoReader.NoteObject(expr_173, protoReader);
												designActivityData = expr_173;
											}
											int num2 = protoReader.ReadInt32();
											designActivityData.condition = num2;
										}
									}
									else
									{
										if (designActivityData == null)
										{
											DesignActivityData expr_142 = new DesignActivityData();
											ProtoReader.NoteObject(expr_142, protoReader);
											designActivityData = expr_142;
										}
										int num2 = protoReader.ReadInt32();
										designActivityData.rewardCount = num2;
									}
								}
								else
								{
									if (designActivityData == null)
									{
										DesignActivityData expr_112 = new DesignActivityData();
										ProtoReader.NoteObject(expr_112, protoReader);
										designActivityData = expr_112;
									}
									int num2 = protoReader.ReadInt32();
									designActivityData.rewardType = num2;
								}
							}
							else
							{
								if (designActivityData == null)
								{
									DesignActivityData expr_DF = new DesignActivityData();
									ProtoReader.NoteObject(expr_DF, protoReader);
									designActivityData = expr_DF;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									designActivityData.showEndTimeStr = text;
								}
							}
						}
						else
						{
							if (designActivityData == null)
							{
								DesignActivityData expr_AC = new DesignActivityData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								designActivityData = expr_AC;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								designActivityData.endTimeStr = text;
							}
						}
					}
					else
					{
						if (designActivityData == null)
						{
							DesignActivityData expr_79 = new DesignActivityData();
							ProtoReader.NoteObject(expr_79, protoReader);
							designActivityData = expr_79;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							designActivityData.startTimeStr = text;
						}
					}
				}
				else
				{
					if (designActivityData == null)
					{
						DesignActivityData expr_49 = new DesignActivityData();
						ProtoReader.NoteObject(expr_49, protoReader);
						designActivityData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					designActivityData.activityType = num2;
				}
			}
			else
			{
				if (designActivityData == null)
				{
					DesignActivityData expr_19 = new DesignActivityData();
					ProtoReader.NoteObject(expr_19, protoReader);
					designActivityData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				designActivityData.activityId = num2;
			}
		}
		if (designActivityData == null)
		{
			DesignActivityData expr_44F = new DesignActivityData();
			ProtoReader.NoteObject(expr_44F, protoReader);
			designActivityData = expr_44F;
		}
		return designActivityData;
	}

	private static void Write(DieEvent dieEvent, ProtoWriter protoWriter)
	{
		if (dieEvent.GetType() != typeof(DieEvent))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(DieEvent), dieEvent.GetType());
		}
		int expr_2D = dieEvent.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		long expr_4A = dieEvent.id;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_4A, protoWriter);
		}
		List<OperationTanksPos> expr_70 = dieEvent.tanksPos;
		if (expr_70 != null)
		{
			List<OperationTanksPos> list = expr_70;
			foreach (OperationTanksPos arg_95_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_95_0, protoWriter);
				ProtoMsgSerializer.Write(arg_95_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(dieEvent, protoWriter);
	}

	private static DieEvent Read(DieEvent dieEvent, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (dieEvent == null)
						{
							DieEvent expr_D2 = new DieEvent();
							ProtoReader.NoteObject(expr_D2, protoReader);
							dieEvent = expr_D2;
						}
						protoReader.AppendExtensionData(dieEvent);
					}
					else
					{
						if (dieEvent == null)
						{
							DieEvent expr_79 = new DieEvent();
							ProtoReader.NoteObject(expr_79, protoReader);
							dieEvent = expr_79;
						}
						List<OperationTanksPos> list = dieEvent.tanksPos;
						if (list == null)
						{
							list = new List<OperationTanksPos>();
						}
						int num2 = protoReader.FieldNumber;
						do
						{
							List<OperationTanksPos> arg_B1_0 = list;
							OperationTanksPos arg_A4_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							OperationTanksPos arg_B1_1 = ProtoMsgSerializer.Read(arg_A4_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_B1_0.Add(arg_B1_1);
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
				}
				else
				{
					if (dieEvent == null)
					{
						DieEvent expr_49 = new DieEvent();
						ProtoReader.NoteObject(expr_49, protoReader);
						dieEvent = expr_49;
					}
					long id = protoReader.ReadInt64();
					dieEvent.id = id;
				}
			}
			else
			{
				if (dieEvent == null)
				{
					DieEvent expr_19 = new DieEvent();
					ProtoReader.NoteObject(expr_19, protoReader);
					dieEvent = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				dieEvent.type = num2;
			}
		}
		if (dieEvent == null)
		{
			DieEvent expr_FB = new DieEvent();
			ProtoReader.NoteObject(expr_FB, protoReader);
			dieEvent = expr_FB;
		}
		return dieEvent;
	}

	private static void Write(DownMessage downMessage, ProtoWriter writer)
	{
		if (downMessage.GetType() != typeof(DownMessage))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(DownMessage), downMessage.GetType());
		}
		List<int> expr_2D = downMessage.dataId;
		if (expr_2D != null)
		{
			List<int> list = expr_2D;
			foreach (int arg_53_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_53_0, writer);
			}
		}
		List<byte[]> expr_82 = downMessage.data;
		if (expr_82 != null)
		{
			List<byte[]> list2 = expr_82;
			foreach (byte[] arg_A8_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteBytes(arg_A8_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(downMessage, writer);
	}

	private static DownMessage Read(DownMessage downMessage, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (downMessage == null)
					{
						DownMessage expr_ED = new DownMessage();
						ProtoReader.NoteObject(expr_ED, protoReader);
						downMessage = expr_ED;
					}
					protoReader.AppendExtensionData(downMessage);
				}
				else
				{
					if (downMessage == null)
					{
						DownMessage expr_A4 = new DownMessage();
						ProtoReader.NoteObject(expr_A4, protoReader);
						downMessage = expr_A4;
					}
					List<byte[]> list = downMessage.data;
					if (list == null)
					{
						list = new List<byte[]>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						list.Add(ProtoReader.AppendBytes(null, protoReader));
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (downMessage == null)
				{
					DownMessage expr_19 = new DownMessage();
					ProtoReader.NoteObject(expr_19, protoReader);
					downMessage = expr_19;
				}
				List<int> list2 = downMessage.dataId;
				if (list2 == null)
				{
					list2 = new List<int>();
				}
				if (protoReader.WireType != WireType.String)
				{
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						list2.Add(protoReader.ReadInt32());
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
				else
				{
					SubItemToken arg_86_0 = ProtoReader.StartSubItem(protoReader);
					while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
					{
						list2.Add(protoReader.ReadInt32());
					}
					ProtoReader.EndSubItem(arg_86_0, protoReader);
				}
			}
		}
		if (downMessage == null)
		{
			DownMessage expr_116 = new DownMessage();
			ProtoReader.NoteObject(expr_116, protoReader);
			downMessage = expr_116;
		}
		return downMessage;
	}

	private static void Write(EventData eventData, ProtoWriter protoWriter)
	{
		if (eventData.GetType() != typeof(EventData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(EventData), eventData.GetType());
		}
		int expr_2D = eventData.eventType;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		long expr_4A = eventData.eventId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_4A, protoWriter);
		}
		long expr_70 = eventData.endTime;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_70, protoWriter);
		}
		int expr_96 = eventData.randomSeed;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_96, protoWriter);
		}
		List<OperationEventData> expr_B3 = eventData.operData;
		if (expr_B3 != null)
		{
			List<OperationEventData> list = expr_B3;
			foreach (OperationEventData arg_D8_0 in list)
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_D8_0, protoWriter);
				ProtoMsgSerializer.Write(arg_D8_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<OperationTankPos> expr_117 = eventData.tankPoses;
		if (expr_117 != null)
		{
			List<OperationTankPos> list2 = expr_117;
			foreach (OperationTankPos arg_13D_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_13D_0, protoWriter);
				ProtoMsgSerializer.Write(arg_13D_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(eventData, protoWriter);
	}

	private static EventData Read(EventData eventData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (eventData == null)
									{
										EventData expr_198 = new EventData();
										ProtoReader.NoteObject(expr_198, protoReader);
										eventData = expr_198;
									}
									protoReader.AppendExtensionData(eventData);
								}
								else
								{
									if (eventData == null)
									{
										EventData expr_13B = new EventData();
										ProtoReader.NoteObject(expr_13B, protoReader);
										eventData = expr_13B;
									}
									List<OperationTankPos> list = eventData.tankPoses;
									if (list == null)
									{
										list = new List<OperationTankPos>();
									}
									int num2 = protoReader.FieldNumber;
									do
									{
										List<OperationTankPos> arg_177_0 = list;
										OperationTankPos arg_16A_0 = null;
										SubItemToken token = ProtoReader.StartSubItem(protoReader);
										OperationTankPos arg_177_1 = ProtoMsgSerializer.Read(arg_16A_0, protoReader);
										ProtoReader.EndSubItem(token, protoReader);
										arg_177_0.Add(arg_177_1);
									}
									while (protoReader.TryReadFieldHeader(num2));
								}
							}
							else
							{
								if (eventData == null)
								{
									EventData expr_D9 = new EventData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									eventData = expr_D9;
								}
								List<OperationEventData> list2 = eventData.operData;
								if (list2 == null)
								{
									list2 = new List<OperationEventData>();
								}
								int num2 = protoReader.FieldNumber;
								do
								{
									List<OperationEventData> arg_111_0 = list2;
									OperationEventData arg_104_0 = null;
									SubItemToken token = ProtoReader.StartSubItem(protoReader);
									OperationEventData arg_111_1 = ProtoMsgSerializer.Read(arg_104_0, protoReader);
									ProtoReader.EndSubItem(token, protoReader);
									arg_111_0.Add(arg_111_1);
								}
								while (protoReader.TryReadFieldHeader(num2));
							}
						}
						else
						{
							if (eventData == null)
							{
								EventData expr_A9 = new EventData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								eventData = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							eventData.randomSeed = num2;
						}
					}
					else
					{
						if (eventData == null)
						{
							EventData expr_79 = new EventData();
							ProtoReader.NoteObject(expr_79, protoReader);
							eventData = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						eventData.endTime = num3;
					}
				}
				else
				{
					if (eventData == null)
					{
						EventData expr_49 = new EventData();
						ProtoReader.NoteObject(expr_49, protoReader);
						eventData = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					eventData.eventId = num3;
				}
			}
			else
			{
				if (eventData == null)
				{
					EventData expr_19 = new EventData();
					ProtoReader.NoteObject(expr_19, protoReader);
					eventData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				eventData.eventType = num2;
			}
		}
		if (eventData == null)
		{
			EventData expr_1C1 = new EventData();
			ProtoReader.NoteObject(expr_1C1, protoReader);
			eventData = expr_1C1;
		}
		return eventData;
	}

	private static void Write(FightEventData fightEventData, ProtoWriter writer)
	{
		if (fightEventData.GetType() != typeof(FightEventData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(FightEventData), fightEventData.GetType());
		}
		int expr_2D = fightEventData.deadType;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = fightEventData.deadId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		int expr_70 = fightEventData.deadIdx;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		float expr_8D = fightEventData.poxX;
		if (expr_8D != 0f)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Fixed32, writer);
			ProtoWriter.WriteSingle(expr_8D, writer);
		}
		float expr_AF = fightEventData.poxZ;
		if (expr_AF != 0f)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Fixed32, writer);
			ProtoWriter.WriteSingle(expr_AF, writer);
		}
		long expr_D1 = fightEventData.deadContid;
		if (expr_D1 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_D1, writer);
		}
		int expr_F7 = fightEventData.randomSeed;
		if (expr_F7 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_F7, writer);
		}
		int expr_114 = fightEventData.skillPoint;
		if (expr_114 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_114, writer);
		}
		int expr_132 = fightEventData.num;
		if (expr_132 != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_132, writer);
		}
		int expr_150 = fightEventData.buyArmyMoney;
		if (expr_150 != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_150, writer);
		}
		ProtoWriter.AppendExtensionData(fightEventData, writer);
	}

	private static FightEventData Read(FightEventData fightEventData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (num != 11)
												{
													if (fightEventData == null)
													{
														FightEventData expr_1F3 = new FightEventData();
														ProtoReader.NoteObject(expr_1F3, protoReader);
														fightEventData = expr_1F3;
													}
													protoReader.AppendExtensionData(fightEventData);
												}
												else
												{
													if (fightEventData == null)
													{
														FightEventData expr_1CC = new FightEventData();
														ProtoReader.NoteObject(expr_1CC, protoReader);
														fightEventData = expr_1CC;
													}
													int num2 = protoReader.ReadInt32();
													fightEventData.buyArmyMoney = num2;
												}
											}
											else
											{
												if (fightEventData == null)
												{
													FightEventData expr_19B = new FightEventData();
													ProtoReader.NoteObject(expr_19B, protoReader);
													fightEventData = expr_19B;
												}
												int num2 = protoReader.ReadInt32();
												fightEventData.num = num2;
											}
										}
										else
										{
											if (fightEventData == null)
											{
												FightEventData expr_16A = new FightEventData();
												ProtoReader.NoteObject(expr_16A, protoReader);
												fightEventData = expr_16A;
											}
											int num2 = protoReader.ReadInt32();
											fightEventData.skillPoint = num2;
										}
									}
									else
									{
										if (fightEventData == null)
										{
											FightEventData expr_139 = new FightEventData();
											ProtoReader.NoteObject(expr_139, protoReader);
											fightEventData = expr_139;
										}
										int num2 = protoReader.ReadInt32();
										fightEventData.randomSeed = num2;
									}
								}
								else
								{
									if (fightEventData == null)
									{
										FightEventData expr_109 = new FightEventData();
										ProtoReader.NoteObject(expr_109, protoReader);
										fightEventData = expr_109;
									}
									long num3 = protoReader.ReadInt64();
									fightEventData.deadContid = num3;
								}
							}
							else
							{
								if (fightEventData == null)
								{
									FightEventData expr_D9 = new FightEventData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									fightEventData = expr_D9;
								}
								float num4 = protoReader.ReadSingle();
								fightEventData.poxZ = num4;
							}
						}
						else
						{
							if (fightEventData == null)
							{
								FightEventData expr_A9 = new FightEventData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								fightEventData = expr_A9;
							}
							float num4 = protoReader.ReadSingle();
							fightEventData.poxX = num4;
						}
					}
					else
					{
						if (fightEventData == null)
						{
							FightEventData expr_79 = new FightEventData();
							ProtoReader.NoteObject(expr_79, protoReader);
							fightEventData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						fightEventData.deadIdx = num2;
					}
				}
				else
				{
					if (fightEventData == null)
					{
						FightEventData expr_49 = new FightEventData();
						ProtoReader.NoteObject(expr_49, protoReader);
						fightEventData = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					fightEventData.deadId = num3;
				}
			}
			else
			{
				if (fightEventData == null)
				{
					FightEventData expr_19 = new FightEventData();
					ProtoReader.NoteObject(expr_19, protoReader);
					fightEventData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				fightEventData.deadType = num2;
			}
		}
		if (fightEventData == null)
		{
			FightEventData expr_21C = new FightEventData();
			ProtoReader.NoteObject(expr_21C, protoReader);
			fightEventData = expr_21C;
		}
		return fightEventData;
	}

	private static void Write(GM_AideInfo gM_AideInfo, ProtoWriter writer)
	{
		if (gM_AideInfo.GetType() != typeof(GM_AideInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_AideInfo), gM_AideInfo.GetType());
		}
		string expr_2D = gM_AideInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_AideInfo, writer);
	}

	private static GM_AideInfo Read(GM_AideInfo gM_AideInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (gM_AideInfo == null)
				{
					GM_AideInfo expr_43 = new GM_AideInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_AideInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_AideInfo);
			}
			else
			{
				if (gM_AideInfo == null)
				{
					GM_AideInfo expr_19 = new GM_AideInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_AideInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_AideInfo.id = text;
				}
			}
		}
		if (gM_AideInfo == null)
		{
			GM_AideInfo expr_6C = new GM_AideInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_AideInfo = expr_6C;
		}
		return gM_AideInfo;
	}

	private static void Write(GM_AideInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_AideInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2017, writer);
		}
	}

	private static GM_AideInfo.TYPE Read(GM_AideInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_AideInfo.TYPE result;
		if (num != 2017)
		{
			protoReader.ThrowEnumException(typeof(GM_AideInfo.TYPE), num);
		}
		else
		{
			result = GM_AideInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_AideModify gM_AideModify, ProtoWriter writer)
	{
		if (gM_AideModify.GetType() != typeof(GM_AideModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_AideModify), gM_AideModify.GetType());
		}
		long expr_2D = gM_AideModify.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = gM_AideModify.aideId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = gM_AideModify.type;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = gM_AideModify.abilityId;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = gM_AideModify.itemId;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		ProtoWriter.AppendExtensionData(gM_AideModify, writer);
	}

	private static GM_AideModify Read(GM_AideModify gM_AideModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (gM_AideModify == null)
								{
									GM_AideModify expr_100 = new GM_AideModify();
									ProtoReader.NoteObject(expr_100, protoReader);
									gM_AideModify = expr_100;
								}
								protoReader.AppendExtensionData(gM_AideModify);
							}
							else
							{
								if (gM_AideModify == null)
								{
									GM_AideModify expr_D9 = new GM_AideModify();
									ProtoReader.NoteObject(expr_D9, protoReader);
									gM_AideModify = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								gM_AideModify.itemId = num2;
							}
						}
						else
						{
							if (gM_AideModify == null)
							{
								GM_AideModify expr_A9 = new GM_AideModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_AideModify = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							gM_AideModify.abilityId = num2;
						}
					}
					else
					{
						if (gM_AideModify == null)
						{
							GM_AideModify expr_79 = new GM_AideModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_AideModify = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						gM_AideModify.type = num2;
					}
				}
				else
				{
					if (gM_AideModify == null)
					{
						GM_AideModify expr_49 = new GM_AideModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_AideModify = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					gM_AideModify.aideId = num2;
				}
			}
			else
			{
				if (gM_AideModify == null)
				{
					GM_AideModify expr_19 = new GM_AideModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_AideModify = expr_19;
				}
				long id = protoReader.ReadInt64();
				gM_AideModify.id = id;
			}
		}
		if (gM_AideModify == null)
		{
			GM_AideModify expr_129 = new GM_AideModify();
			ProtoReader.NoteObject(expr_129, protoReader);
			gM_AideModify = expr_129;
		}
		return gM_AideModify;
	}

	private static void Write(GM_AideModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_AideModify.TYPE.CMD)
		{
			if (tYPE != GM_AideModify.TYPE.ADD)
			{
				if (tYPE != GM_AideModify.TYPE.DEL)
				{
					if (tYPE != GM_AideModify.TYPE.MOD)
					{
						ProtoWriter.ThrowEnumException(writer, tYPE);
					}
					else
					{
						ProtoWriter.WriteInt32(3, writer);
					}
				}
				else
				{
					ProtoWriter.WriteInt32(2, writer);
				}
			}
			else
			{
				ProtoWriter.WriteInt32(1, writer);
			}
		}
		else
		{
			ProtoWriter.WriteInt32(2018, writer);
		}
	}

	private static GM_AideModify.TYPE Read(GM_AideModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_AideModify.TYPE result;
		if (num != 2018)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						protoReader.ThrowEnumException(typeof(GM_AideModify.TYPE), num);
					}
					else
					{
						result = GM_AideModify.TYPE.MOD;
					}
				}
				else
				{
					result = GM_AideModify.TYPE.DEL;
				}
			}
			else
			{
				result = GM_AideModify.TYPE.ADD;
			}
		}
		else
		{
			result = GM_AideModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_BattleInfo gM_BattleInfo, ProtoWriter writer)
	{
		if (gM_BattleInfo.GetType() != typeof(GM_BattleInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_BattleInfo), gM_BattleInfo.GetType());
		}
		string expr_2D = gM_BattleInfo.userId;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		int expr_5D = gM_BattleInfo.battletype;
		if (expr_5D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_5D, writer);
		}
		ProtoWriter.AppendExtensionData(gM_BattleInfo, writer);
	}

	private static GM_BattleInfo Read(GM_BattleInfo gM_BattleInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (gM_BattleInfo == null)
					{
						GM_BattleInfo expr_73 = new GM_BattleInfo();
						ProtoReader.NoteObject(expr_73, protoReader);
						gM_BattleInfo = expr_73;
					}
					protoReader.AppendExtensionData(gM_BattleInfo);
				}
				else
				{
					if (gM_BattleInfo == null)
					{
						GM_BattleInfo expr_4C = new GM_BattleInfo();
						ProtoReader.NoteObject(expr_4C, protoReader);
						gM_BattleInfo = expr_4C;
					}
					int battletype = protoReader.ReadInt32();
					gM_BattleInfo.battletype = battletype;
				}
			}
			else
			{
				if (gM_BattleInfo == null)
				{
					GM_BattleInfo expr_19 = new GM_BattleInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_BattleInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_BattleInfo.userId = text;
				}
			}
		}
		if (gM_BattleInfo == null)
		{
			GM_BattleInfo expr_9C = new GM_BattleInfo();
			ProtoReader.NoteObject(expr_9C, protoReader);
			gM_BattleInfo = expr_9C;
		}
		return gM_BattleInfo;
	}

	private static void Write(GM_BattleInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_BattleInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2021, writer);
		}
	}

	private static GM_BattleInfo.TYPE Read(GM_BattleInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_BattleInfo.TYPE result;
		if (num != 2021)
		{
			protoReader.ThrowEnumException(typeof(GM_BattleInfo.TYPE), num);
		}
		else
		{
			result = GM_BattleInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_BattleModify gM_BattleModify, ProtoWriter writer)
	{
		if (gM_BattleModify.GetType() != typeof(GM_BattleModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_BattleModify), gM_BattleModify.GetType());
		}
		string expr_2D = gM_BattleModify.userId;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		int expr_5D = gM_BattleModify.battletype;
		if (expr_5D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_5D, writer);
		}
		int expr_7A = gM_BattleModify.battle;
		if (expr_7A != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_7A, writer);
		}
		ProtoWriter.AppendExtensionData(gM_BattleModify, writer);
	}

	private static GM_BattleModify Read(GM_BattleModify gM_BattleModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (gM_BattleModify == null)
						{
							GM_BattleModify expr_A3 = new GM_BattleModify();
							ProtoReader.NoteObject(expr_A3, protoReader);
							gM_BattleModify = expr_A3;
						}
						protoReader.AppendExtensionData(gM_BattleModify);
					}
					else
					{
						if (gM_BattleModify == null)
						{
							GM_BattleModify expr_7C = new GM_BattleModify();
							ProtoReader.NoteObject(expr_7C, protoReader);
							gM_BattleModify = expr_7C;
						}
						int num2 = protoReader.ReadInt32();
						gM_BattleModify.battle = num2;
					}
				}
				else
				{
					if (gM_BattleModify == null)
					{
						GM_BattleModify expr_4C = new GM_BattleModify();
						ProtoReader.NoteObject(expr_4C, protoReader);
						gM_BattleModify = expr_4C;
					}
					int num2 = protoReader.ReadInt32();
					gM_BattleModify.battletype = num2;
				}
			}
			else
			{
				if (gM_BattleModify == null)
				{
					GM_BattleModify expr_19 = new GM_BattleModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_BattleModify = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_BattleModify.userId = text;
				}
			}
		}
		if (gM_BattleModify == null)
		{
			GM_BattleModify expr_CC = new GM_BattleModify();
			ProtoReader.NoteObject(expr_CC, protoReader);
			gM_BattleModify = expr_CC;
		}
		return gM_BattleModify;
	}

	private static void Write(GM_BattleModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_BattleModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2022, writer);
		}
	}

	private static GM_BattleModify.TYPE Read(GM_BattleModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_BattleModify.TYPE result;
		if (num != 2022)
		{
			protoReader.ThrowEnumException(typeof(GM_BattleModify.TYPE), num);
		}
		else
		{
			result = GM_BattleModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_GetRanking gM_GetRanking, ProtoWriter writer)
	{
		if (gM_GetRanking.GetType() != typeof(GM_GetRanking))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_GetRanking), gM_GetRanking.GetType());
		}
		int expr_2D = gM_GetRanking.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(gM_GetRanking, writer);
	}

	private static GM_GetRanking Read(GM_GetRanking gM_GetRanking, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (gM_GetRanking == null)
				{
					GM_GetRanking expr_40 = new GM_GetRanking();
					ProtoReader.NoteObject(expr_40, protoReader);
					gM_GetRanking = expr_40;
				}
				protoReader.AppendExtensionData(gM_GetRanking);
			}
			else
			{
				if (gM_GetRanking == null)
				{
					GM_GetRanking expr_19 = new GM_GetRanking();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_GetRanking = expr_19;
				}
				int type = protoReader.ReadInt32();
				gM_GetRanking.type = type;
			}
		}
		if (gM_GetRanking == null)
		{
			GM_GetRanking expr_69 = new GM_GetRanking();
			ProtoReader.NoteObject(expr_69, protoReader);
			gM_GetRanking = expr_69;
		}
		return gM_GetRanking;
	}

	private static void Write(GM_GetRanking.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_GetRanking.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2024, writer);
		}
	}

	private static GM_GetRanking.TYPE Read(GM_GetRanking.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_GetRanking.TYPE result;
		if (num != 2024)
		{
			protoReader.ThrowEnumException(typeof(GM_GetRanking.TYPE), num);
		}
		else
		{
			result = GM_GetRanking.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_IslandInfo gM_IslandInfo, ProtoWriter writer)
	{
		if (gM_IslandInfo.GetType() != typeof(GM_IslandInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_IslandInfo), gM_IslandInfo.GetType());
		}
		string expr_2D = gM_IslandInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_IslandInfo, writer);
	}

	private static GM_IslandInfo Read(GM_IslandInfo gM_IslandInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (gM_IslandInfo == null)
				{
					GM_IslandInfo expr_43 = new GM_IslandInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_IslandInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_IslandInfo);
			}
			else
			{
				if (gM_IslandInfo == null)
				{
					GM_IslandInfo expr_19 = new GM_IslandInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_IslandInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_IslandInfo.id = text;
				}
			}
		}
		if (gM_IslandInfo == null)
		{
			GM_IslandInfo expr_6C = new GM_IslandInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_IslandInfo = expr_6C;
		}
		return gM_IslandInfo;
	}

	private static void Write(GM_IslandInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_IslandInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2007, writer);
		}
	}

	private static GM_IslandInfo.TYPE Read(GM_IslandInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_IslandInfo.TYPE result;
		if (num != 2007)
		{
			protoReader.ThrowEnumException(typeof(GM_IslandInfo.TYPE), num);
		}
		else
		{
			result = GM_IslandInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_ItemReloadStatus gM_ItemReloadStatus, ProtoWriter writer)
	{
		if (gM_ItemReloadStatus.GetType() != typeof(GM_ItemReloadStatus))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_ItemReloadStatus), gM_ItemReloadStatus.GetType());
		}
		ProtoWriter.AppendExtensionData(gM_ItemReloadStatus, writer);
	}

	private static GM_ItemReloadStatus Read(GM_ItemReloadStatus gM_ItemReloadStatus, ProtoReader protoReader)
	{
		while (protoReader.ReadFieldHeader() > 0)
		{
			if (gM_ItemReloadStatus == null)
			{
				GM_ItemReloadStatus expr_10 = new GM_ItemReloadStatus();
				ProtoReader.NoteObject(expr_10, protoReader);
				gM_ItemReloadStatus = expr_10;
			}
			protoReader.AppendExtensionData(gM_ItemReloadStatus);
		}
		if (gM_ItemReloadStatus == null)
		{
			GM_ItemReloadStatus expr_39 = new GM_ItemReloadStatus();
			ProtoReader.NoteObject(expr_39, protoReader);
			gM_ItemReloadStatus = expr_39;
		}
		return gM_ItemReloadStatus;
	}

	private static void Write(GM_ItemReloadStatus.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_ItemReloadStatus.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2023, writer);
		}
	}

	private static GM_ItemReloadStatus.TYPE Read(GM_ItemReloadStatus.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_ItemReloadStatus.TYPE result;
		if (num != 2023)
		{
			protoReader.ThrowEnumException(typeof(GM_ItemReloadStatus.TYPE), num);
		}
		else
		{
			result = GM_ItemReloadStatus.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_LogoutPlayer gM_LogoutPlayer, ProtoWriter writer)
	{
		if (gM_LogoutPlayer.GetType() != typeof(GM_LogoutPlayer))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_LogoutPlayer), gM_LogoutPlayer.GetType());
		}
		string expr_2D = gM_LogoutPlayer.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		int expr_5D = gM_LogoutPlayer.type;
		if (expr_5D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_5D, writer);
		}
		ProtoWriter.AppendExtensionData(gM_LogoutPlayer, writer);
	}

	private static GM_LogoutPlayer Read(GM_LogoutPlayer gM_LogoutPlayer, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (gM_LogoutPlayer == null)
					{
						GM_LogoutPlayer expr_73 = new GM_LogoutPlayer();
						ProtoReader.NoteObject(expr_73, protoReader);
						gM_LogoutPlayer = expr_73;
					}
					protoReader.AppendExtensionData(gM_LogoutPlayer);
				}
				else
				{
					if (gM_LogoutPlayer == null)
					{
						GM_LogoutPlayer expr_4C = new GM_LogoutPlayer();
						ProtoReader.NoteObject(expr_4C, protoReader);
						gM_LogoutPlayer = expr_4C;
					}
					int type = protoReader.ReadInt32();
					gM_LogoutPlayer.type = type;
				}
			}
			else
			{
				if (gM_LogoutPlayer == null)
				{
					GM_LogoutPlayer expr_19 = new GM_LogoutPlayer();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_LogoutPlayer = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_LogoutPlayer.id = text;
				}
			}
		}
		if (gM_LogoutPlayer == null)
		{
			GM_LogoutPlayer expr_9C = new GM_LogoutPlayer();
			ProtoReader.NoteObject(expr_9C, protoReader);
			gM_LogoutPlayer = expr_9C;
		}
		return gM_LogoutPlayer;
	}

	private static void Write(GM_LogoutPlayer.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_LogoutPlayer.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2016, writer);
		}
	}

	private static GM_LogoutPlayer.TYPE Read(GM_LogoutPlayer.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_LogoutPlayer.TYPE result;
		if (num != 2016)
		{
			protoReader.ThrowEnumException(typeof(GM_LogoutPlayer.TYPE), num);
		}
		else
		{
			result = GM_LogoutPlayer.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_Mail gM_Mail, ProtoWriter protoWriter)
	{
		if (gM_Mail.GetType() != typeof(GM_Mail))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_Mail), gM_Mail.GetType());
		}
		string expr_2D = gM_Mail.content;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_2D, protoWriter);
			}
		}
		List<long> expr_5D = gM_Mail.id;
		if (expr_5D != null)
		{
			List<long> list = expr_5D;
			foreach (long arg_83_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
				ProtoWriter.WriteInt64(arg_83_0, protoWriter);
			}
		}
		List<KVStruct> expr_B2 = gM_Mail.res;
		if (expr_B2 != null)
		{
			List<KVStruct> list2 = expr_B2;
			foreach (KVStruct arg_D7_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_D7_0, protoWriter);
				ProtoMsgSerializer.Write(arg_D7_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_118 = gM_Mail.item;
		if (expr_118 != null)
		{
			List<KVStruct> list2 = expr_118;
			foreach (KVStruct arg_13D_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_13D_0, protoWriter);
				ProtoMsgSerializer.Write(arg_13D_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		string expr_17E = gM_Mail.title;
		if (expr_17E != null)
		{
			if (!(expr_17E == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_17E, protoWriter);
			}
		}
		int expr_1AE = gM_Mail.type;
		if (expr_1AE != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1AE, protoWriter);
		}
		int expr_1CB = gM_Mail.money;
		if (expr_1CB != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1CB, protoWriter);
		}
		long expr_1E8 = gM_Mail.mailId;
		if (expr_1E8 != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_1E8, protoWriter);
		}
		int expr_20E = gM_Mail.mailType;
		if (expr_20E != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_20E, protoWriter);
		}
		ProtoWriter.AppendExtensionData(gM_Mail, protoWriter);
	}

	private static GM_Mail Read(GM_Mail gM_Mail, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (gM_Mail == null)
												{
													GM_Mail expr_290 = new GM_Mail();
													ProtoReader.NoteObject(expr_290, protoReader);
													gM_Mail = expr_290;
												}
												protoReader.AppendExtensionData(gM_Mail);
											}
											else
											{
												if (gM_Mail == null)
												{
													GM_Mail expr_269 = new GM_Mail();
													ProtoReader.NoteObject(expr_269, protoReader);
													gM_Mail = expr_269;
												}
												int num2 = protoReader.ReadInt32();
												gM_Mail.mailType = num2;
											}
										}
										else
										{
											if (gM_Mail == null)
											{
												GM_Mail expr_236 = new GM_Mail();
												ProtoReader.NoteObject(expr_236, protoReader);
												gM_Mail = expr_236;
											}
											long mailId = protoReader.ReadInt64();
											gM_Mail.mailId = mailId;
										}
									}
									else
									{
										if (gM_Mail == null)
										{
											GM_Mail expr_206 = new GM_Mail();
											ProtoReader.NoteObject(expr_206, protoReader);
											gM_Mail = expr_206;
										}
										int num2 = protoReader.ReadInt32();
										gM_Mail.money = num2;
									}
								}
								else
								{
									if (gM_Mail == null)
									{
										GM_Mail expr_1D6 = new GM_Mail();
										ProtoReader.NoteObject(expr_1D6, protoReader);
										gM_Mail = expr_1D6;
									}
									int num2 = protoReader.ReadInt32();
									gM_Mail.type = num2;
								}
							}
							else
							{
								if (gM_Mail == null)
								{
									GM_Mail expr_1A3 = new GM_Mail();
									ProtoReader.NoteObject(expr_1A3, protoReader);
									gM_Mail = expr_1A3;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									gM_Mail.title = text;
								}
							}
						}
						else
						{
							if (gM_Mail == null)
							{
								GM_Mail expr_13D = new GM_Mail();
								ProtoReader.NoteObject(expr_13D, protoReader);
								gM_Mail = expr_13D;
							}
							List<KVStruct> list = gM_Mail.item;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int num2 = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_179_0 = list;
								KVStruct arg_16C_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_179_1 = ProtoMsgSerializer.Read(arg_16C_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_179_0.Add(arg_179_1);
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
					}
					else
					{
						if (gM_Mail == null)
						{
							GM_Mail expr_D7 = new GM_Mail();
							ProtoReader.NoteObject(expr_D7, protoReader);
							gM_Mail = expr_D7;
						}
						List<KVStruct> list = gM_Mail.res;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int num2 = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_113_0 = list;
							KVStruct arg_106_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_113_1 = ProtoMsgSerializer.Read(arg_106_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_113_0.Add(arg_113_1);
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
				}
				else
				{
					if (gM_Mail == null)
					{
						GM_Mail expr_4C = new GM_Mail();
						ProtoReader.NoteObject(expr_4C, protoReader);
						gM_Mail = expr_4C;
					}
					List<long> list2 = gM_Mail.id;
					if (list2 == null)
					{
						list2 = new List<long>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int num2 = protoReader.FieldNumber;
						do
						{
							list2.Add(protoReader.ReadInt64());
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
					else
					{
						SubItemToken arg_B9_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list2.Add(protoReader.ReadInt64());
						}
						ProtoReader.EndSubItem(arg_B9_0, protoReader);
					}
				}
			}
			else
			{
				if (gM_Mail == null)
				{
					GM_Mail expr_19 = new GM_Mail();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_Mail = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_Mail.content = text;
				}
			}
		}
		if (gM_Mail == null)
		{
			GM_Mail expr_2B9 = new GM_Mail();
			ProtoReader.NoteObject(expr_2B9, protoReader);
			gM_Mail = expr_2B9;
		}
		return gM_Mail;
	}

	private static void Write(GM_Mail.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_Mail.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2003, writer);
		}
	}

	private static GM_Mail.TYPE Read(GM_Mail.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_Mail.TYPE result;
		if (num != 2003)
		{
			protoReader.ThrowEnumException(typeof(GM_Mail.TYPE), num);
		}
		else
		{
			result = GM_Mail.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_MailInfo gM_MailInfo, ProtoWriter writer)
	{
		if (gM_MailInfo.GetType() != typeof(GM_MailInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_MailInfo), gM_MailInfo.GetType());
		}
		string expr_2D = gM_MailInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		int expr_5D = gM_MailInfo.type;
		if (expr_5D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_5D, writer);
		}
		ProtoWriter.AppendExtensionData(gM_MailInfo, writer);
	}

	private static GM_MailInfo Read(GM_MailInfo gM_MailInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (gM_MailInfo == null)
					{
						GM_MailInfo expr_73 = new GM_MailInfo();
						ProtoReader.NoteObject(expr_73, protoReader);
						gM_MailInfo = expr_73;
					}
					protoReader.AppendExtensionData(gM_MailInfo);
				}
				else
				{
					if (gM_MailInfo == null)
					{
						GM_MailInfo expr_4C = new GM_MailInfo();
						ProtoReader.NoteObject(expr_4C, protoReader);
						gM_MailInfo = expr_4C;
					}
					int type = protoReader.ReadInt32();
					gM_MailInfo.type = type;
				}
			}
			else
			{
				if (gM_MailInfo == null)
				{
					GM_MailInfo expr_19 = new GM_MailInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_MailInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_MailInfo.id = text;
				}
			}
		}
		if (gM_MailInfo == null)
		{
			GM_MailInfo expr_9C = new GM_MailInfo();
			ProtoReader.NoteObject(expr_9C, protoReader);
			gM_MailInfo = expr_9C;
		}
		return gM_MailInfo;
	}

	private static void Write(GM_MailInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_MailInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2015, writer);
		}
	}

	private static GM_MailInfo.TYPE Read(GM_MailInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_MailInfo.TYPE result;
		if (num != 2015)
		{
			protoReader.ThrowEnumException(typeof(GM_MailInfo.TYPE), num);
		}
		else
		{
			result = GM_MailInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_MapInfo gM_MapInfo, ProtoWriter writer)
	{
		if (gM_MapInfo.GetType() != typeof(GM_MapInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_MapInfo), gM_MapInfo.GetType());
		}
		string expr_2D = gM_MapInfo.userId;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_MapInfo, writer);
	}

	private static GM_MapInfo Read(GM_MapInfo gM_MapInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 7)
			{
				if (gM_MapInfo == null)
				{
					GM_MapInfo expr_43 = new GM_MapInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_MapInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_MapInfo);
			}
			else
			{
				if (gM_MapInfo == null)
				{
					GM_MapInfo expr_19 = new GM_MapInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_MapInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_MapInfo.userId = text;
				}
			}
		}
		if (gM_MapInfo == null)
		{
			GM_MapInfo expr_6C = new GM_MapInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_MapInfo = expr_6C;
		}
		return gM_MapInfo;
	}

	private static void Write(GM_MapInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_MapInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2019, writer);
		}
	}

	private static GM_MapInfo.TYPE Read(GM_MapInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_MapInfo.TYPE result;
		if (num != 2019)
		{
			protoReader.ThrowEnumException(typeof(GM_MapInfo.TYPE), num);
		}
		else
		{
			result = GM_MapInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_MapModify gM_MapModify, ProtoWriter writer)
	{
		if (gM_MapModify.GetType() != typeof(GM_MapModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_MapModify), gM_MapModify.GetType());
		}
		long expr_2D = gM_MapModify.userId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = gM_MapModify.id;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = gM_MapModify.type;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		int expr_96 = gM_MapModify.index;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(gM_MapModify, writer);
	}

	private static GM_MapModify Read(GM_MapModify gM_MapModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (gM_MapModify == null)
							{
								GM_MapModify expr_D0 = new GM_MapModify();
								ProtoReader.NoteObject(expr_D0, protoReader);
								gM_MapModify = expr_D0;
							}
							protoReader.AppendExtensionData(gM_MapModify);
						}
						else
						{
							if (gM_MapModify == null)
							{
								GM_MapModify expr_A9 = new GM_MapModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_MapModify = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							gM_MapModify.index = num2;
						}
					}
					else
					{
						if (gM_MapModify == null)
						{
							GM_MapModify expr_79 = new GM_MapModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_MapModify = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						gM_MapModify.type = num2;
					}
				}
				else
				{
					if (gM_MapModify == null)
					{
						GM_MapModify expr_49 = new GM_MapModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_MapModify = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					gM_MapModify.id = num3;
				}
			}
			else
			{
				if (gM_MapModify == null)
				{
					GM_MapModify expr_19 = new GM_MapModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_MapModify = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				gM_MapModify.userId = num3;
			}
		}
		if (gM_MapModify == null)
		{
			GM_MapModify expr_F9 = new GM_MapModify();
			ProtoReader.NoteObject(expr_F9, protoReader);
			gM_MapModify = expr_F9;
		}
		return gM_MapModify;
	}

	private static void Write(GM_MapModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_MapModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2020, writer);
		}
	}

	private static GM_MapModify.TYPE Read(GM_MapModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_MapModify.TYPE result;
		if (num != 2020)
		{
			protoReader.ThrowEnumException(typeof(GM_MapModify.TYPE), num);
		}
		else
		{
			result = GM_MapModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_MilitaryInfo gM_MilitaryInfo, ProtoWriter writer)
	{
		if (gM_MilitaryInfo.GetType() != typeof(GM_MilitaryInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_MilitaryInfo), gM_MilitaryInfo.GetType());
		}
		string expr_2D = gM_MilitaryInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_MilitaryInfo, writer);
	}

	private static GM_MilitaryInfo Read(GM_MilitaryInfo gM_MilitaryInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (gM_MilitaryInfo == null)
				{
					GM_MilitaryInfo expr_43 = new GM_MilitaryInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_MilitaryInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_MilitaryInfo);
			}
			else
			{
				if (gM_MilitaryInfo == null)
				{
					GM_MilitaryInfo expr_19 = new GM_MilitaryInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_MilitaryInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_MilitaryInfo.id = text;
				}
			}
		}
		if (gM_MilitaryInfo == null)
		{
			GM_MilitaryInfo expr_6C = new GM_MilitaryInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_MilitaryInfo = expr_6C;
		}
		return gM_MilitaryInfo;
	}

	private static void Write(GM_MilitaryInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_MilitaryInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2011, writer);
		}
	}

	private static GM_MilitaryInfo.TYPE Read(GM_MilitaryInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_MilitaryInfo.TYPE result;
		if (num != 2011)
		{
			protoReader.ThrowEnumException(typeof(GM_MilitaryInfo.TYPE), num);
		}
		else
		{
			result = GM_MilitaryInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_MilitaryModify gM_MilitaryModify, ProtoWriter writer)
	{
		if (gM_MilitaryModify.GetType() != typeof(GM_MilitaryModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_MilitaryModify), gM_MilitaryModify.GetType());
		}
		int expr_2D = gM_MilitaryModify.level;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = gM_MilitaryModify.userId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		int expr_70 = gM_MilitaryModify.type;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = gM_MilitaryModify.itemId;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = gM_MilitaryModify.way;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		ProtoWriter.AppendExtensionData(gM_MilitaryModify, writer);
	}

	private static GM_MilitaryModify Read(GM_MilitaryModify gM_MilitaryModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (gM_MilitaryModify == null)
								{
									GM_MilitaryModify expr_100 = new GM_MilitaryModify();
									ProtoReader.NoteObject(expr_100, protoReader);
									gM_MilitaryModify = expr_100;
								}
								protoReader.AppendExtensionData(gM_MilitaryModify);
							}
							else
							{
								if (gM_MilitaryModify == null)
								{
									GM_MilitaryModify expr_D9 = new GM_MilitaryModify();
									ProtoReader.NoteObject(expr_D9, protoReader);
									gM_MilitaryModify = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								gM_MilitaryModify.way = num2;
							}
						}
						else
						{
							if (gM_MilitaryModify == null)
							{
								GM_MilitaryModify expr_A9 = new GM_MilitaryModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_MilitaryModify = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							gM_MilitaryModify.itemId = num2;
						}
					}
					else
					{
						if (gM_MilitaryModify == null)
						{
							GM_MilitaryModify expr_79 = new GM_MilitaryModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_MilitaryModify = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						gM_MilitaryModify.type = num2;
					}
				}
				else
				{
					if (gM_MilitaryModify == null)
					{
						GM_MilitaryModify expr_49 = new GM_MilitaryModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_MilitaryModify = expr_49;
					}
					long userId = protoReader.ReadInt64();
					gM_MilitaryModify.userId = userId;
				}
			}
			else
			{
				if (gM_MilitaryModify == null)
				{
					GM_MilitaryModify expr_19 = new GM_MilitaryModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_MilitaryModify = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				gM_MilitaryModify.level = num2;
			}
		}
		if (gM_MilitaryModify == null)
		{
			GM_MilitaryModify expr_129 = new GM_MilitaryModify();
			ProtoReader.NoteObject(expr_129, protoReader);
			gM_MilitaryModify = expr_129;
		}
		return gM_MilitaryModify;
	}

	private static void Write(GM_MilitaryModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_MilitaryModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2012, writer);
		}
	}

	private static GM_MilitaryModify.TYPE Read(GM_MilitaryModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_MilitaryModify.TYPE result;
		if (num != 2012)
		{
			protoReader.ThrowEnumException(typeof(GM_MilitaryModify.TYPE), num);
		}
		else
		{
			result = GM_MilitaryModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_OfficerInfo gM_OfficerInfo, ProtoWriter writer)
	{
		if (gM_OfficerInfo.GetType() != typeof(GM_OfficerInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_OfficerInfo), gM_OfficerInfo.GetType());
		}
		string expr_2D = gM_OfficerInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_OfficerInfo, writer);
	}

	private static GM_OfficerInfo Read(GM_OfficerInfo gM_OfficerInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (gM_OfficerInfo == null)
				{
					GM_OfficerInfo expr_43 = new GM_OfficerInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_OfficerInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_OfficerInfo);
			}
			else
			{
				if (gM_OfficerInfo == null)
				{
					GM_OfficerInfo expr_19 = new GM_OfficerInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_OfficerInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_OfficerInfo.id = text;
				}
			}
		}
		if (gM_OfficerInfo == null)
		{
			GM_OfficerInfo expr_6C = new GM_OfficerInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_OfficerInfo = expr_6C;
		}
		return gM_OfficerInfo;
	}

	private static void Write(GM_OfficerInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_OfficerInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2005, writer);
		}
	}

	private static GM_OfficerInfo.TYPE Read(GM_OfficerInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_OfficerInfo.TYPE result;
		if (num != 2005)
		{
			protoReader.ThrowEnumException(typeof(GM_OfficerInfo.TYPE), num);
		}
		else
		{
			result = GM_OfficerInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_OfficerModify gM_OfficerModify, ProtoWriter writer)
	{
		if (gM_OfficerModify.GetType() != typeof(GM_OfficerModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_OfficerModify), gM_OfficerModify.GetType());
		}
		int expr_2D = gM_OfficerModify.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = gM_OfficerModify.itemId;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		long expr_67 = gM_OfficerModify.id;
		if (expr_67 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_67, writer);
		}
		int expr_8D = gM_OfficerModify.level;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = gM_OfficerModify.status;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		long expr_C7 = gM_OfficerModify.userId;
		if (expr_C7 != 0L)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_C7, writer);
		}
		long expr_ED = gM_OfficerModify.dismissTime;
		if (expr_ED != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_ED, writer);
		}
		long expr_113 = gM_OfficerModify.unfreezeTime;
		if (expr_113 != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_113, writer);
		}
		ProtoWriter.AppendExtensionData(gM_OfficerModify, writer);
	}

	private static GM_OfficerModify Read(GM_OfficerModify gM_OfficerModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (gM_OfficerModify == null)
											{
												GM_OfficerModify expr_190 = new GM_OfficerModify();
												ProtoReader.NoteObject(expr_190, protoReader);
												gM_OfficerModify = expr_190;
											}
											protoReader.AppendExtensionData(gM_OfficerModify);
										}
										else
										{
											if (gM_OfficerModify == null)
											{
												GM_OfficerModify expr_169 = new GM_OfficerModify();
												ProtoReader.NoteObject(expr_169, protoReader);
												gM_OfficerModify = expr_169;
											}
											long num2 = protoReader.ReadInt64();
											gM_OfficerModify.unfreezeTime = num2;
										}
									}
									else
									{
										if (gM_OfficerModify == null)
										{
											GM_OfficerModify expr_139 = new GM_OfficerModify();
											ProtoReader.NoteObject(expr_139, protoReader);
											gM_OfficerModify = expr_139;
										}
										long num2 = protoReader.ReadInt64();
										gM_OfficerModify.dismissTime = num2;
									}
								}
								else
								{
									if (gM_OfficerModify == null)
									{
										GM_OfficerModify expr_109 = new GM_OfficerModify();
										ProtoReader.NoteObject(expr_109, protoReader);
										gM_OfficerModify = expr_109;
									}
									long num2 = protoReader.ReadInt64();
									gM_OfficerModify.userId = num2;
								}
							}
							else
							{
								if (gM_OfficerModify == null)
								{
									GM_OfficerModify expr_D9 = new GM_OfficerModify();
									ProtoReader.NoteObject(expr_D9, protoReader);
									gM_OfficerModify = expr_D9;
								}
								int num3 = protoReader.ReadInt32();
								gM_OfficerModify.status = num3;
							}
						}
						else
						{
							if (gM_OfficerModify == null)
							{
								GM_OfficerModify expr_A9 = new GM_OfficerModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_OfficerModify = expr_A9;
							}
							int num3 = protoReader.ReadInt32();
							gM_OfficerModify.level = num3;
						}
					}
					else
					{
						if (gM_OfficerModify == null)
						{
							GM_OfficerModify expr_79 = new GM_OfficerModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_OfficerModify = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						gM_OfficerModify.id = num2;
					}
				}
				else
				{
					if (gM_OfficerModify == null)
					{
						GM_OfficerModify expr_49 = new GM_OfficerModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_OfficerModify = expr_49;
					}
					int num3 = protoReader.ReadInt32();
					gM_OfficerModify.itemId = num3;
				}
			}
			else
			{
				if (gM_OfficerModify == null)
				{
					GM_OfficerModify expr_19 = new GM_OfficerModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_OfficerModify = expr_19;
				}
				int num3 = protoReader.ReadInt32();
				gM_OfficerModify.type = num3;
			}
		}
		if (gM_OfficerModify == null)
		{
			GM_OfficerModify expr_1B9 = new GM_OfficerModify();
			ProtoReader.NoteObject(expr_1B9, protoReader);
			gM_OfficerModify = expr_1B9;
		}
		return gM_OfficerModify;
	}

	private static void Write(GM_OfficerModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_OfficerModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2006, writer);
		}
	}

	private static GM_OfficerModify.TYPE Read(GM_OfficerModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_OfficerModify.TYPE result;
		if (num != 2006)
		{
			protoReader.ThrowEnumException(typeof(GM_OfficerModify.TYPE), num);
		}
		else
		{
			result = GM_OfficerModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_PlayerBuildingModify gM_PlayerBuildingModify, ProtoWriter writer)
	{
		if (gM_PlayerBuildingModify.GetType() != typeof(GM_PlayerBuildingModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_PlayerBuildingModify), gM_PlayerBuildingModify.GetType());
		}
		long expr_2D = gM_PlayerBuildingModify.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = gM_PlayerBuildingModify.level;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = gM_PlayerBuildingModify.idx;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = gM_PlayerBuildingModify.type;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = gM_PlayerBuildingModify.itemId;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		ProtoWriter.AppendExtensionData(gM_PlayerBuildingModify, writer);
	}

	private static GM_PlayerBuildingModify Read(GM_PlayerBuildingModify gM_PlayerBuildingModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (gM_PlayerBuildingModify == null)
								{
									GM_PlayerBuildingModify expr_100 = new GM_PlayerBuildingModify();
									ProtoReader.NoteObject(expr_100, protoReader);
									gM_PlayerBuildingModify = expr_100;
								}
								protoReader.AppendExtensionData(gM_PlayerBuildingModify);
							}
							else
							{
								if (gM_PlayerBuildingModify == null)
								{
									GM_PlayerBuildingModify expr_D9 = new GM_PlayerBuildingModify();
									ProtoReader.NoteObject(expr_D9, protoReader);
									gM_PlayerBuildingModify = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								gM_PlayerBuildingModify.itemId = num2;
							}
						}
						else
						{
							if (gM_PlayerBuildingModify == null)
							{
								GM_PlayerBuildingModify expr_A9 = new GM_PlayerBuildingModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_PlayerBuildingModify = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							gM_PlayerBuildingModify.type = num2;
						}
					}
					else
					{
						if (gM_PlayerBuildingModify == null)
						{
							GM_PlayerBuildingModify expr_79 = new GM_PlayerBuildingModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_PlayerBuildingModify = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						gM_PlayerBuildingModify.idx = num2;
					}
				}
				else
				{
					if (gM_PlayerBuildingModify == null)
					{
						GM_PlayerBuildingModify expr_49 = new GM_PlayerBuildingModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_PlayerBuildingModify = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					gM_PlayerBuildingModify.level = num2;
				}
			}
			else
			{
				if (gM_PlayerBuildingModify == null)
				{
					GM_PlayerBuildingModify expr_19 = new GM_PlayerBuildingModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_PlayerBuildingModify = expr_19;
				}
				long id = protoReader.ReadInt64();
				gM_PlayerBuildingModify.id = id;
			}
		}
		if (gM_PlayerBuildingModify == null)
		{
			GM_PlayerBuildingModify expr_129 = new GM_PlayerBuildingModify();
			ProtoReader.NoteObject(expr_129, protoReader);
			gM_PlayerBuildingModify = expr_129;
		}
		return gM_PlayerBuildingModify;
	}

	private static void Write(GM_PlayerBuildingModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_PlayerBuildingModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2008, writer);
		}
	}

	private static GM_PlayerBuildingModify.TYPE Read(GM_PlayerBuildingModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_PlayerBuildingModify.TYPE result;
		if (num != 2008)
		{
			protoReader.ThrowEnumException(typeof(GM_PlayerBuildingModify.TYPE), num);
		}
		else
		{
			result = GM_PlayerBuildingModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_PlayerInfo gM_PlayerInfo, ProtoWriter writer)
	{
		if (gM_PlayerInfo.GetType() != typeof(GM_PlayerInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_PlayerInfo), gM_PlayerInfo.GetType());
		}
		string expr_2D = gM_PlayerInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_PlayerInfo, writer);
	}

	private static GM_PlayerInfo Read(GM_PlayerInfo gM_PlayerInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (gM_PlayerInfo == null)
				{
					GM_PlayerInfo expr_43 = new GM_PlayerInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_PlayerInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_PlayerInfo);
			}
			else
			{
				if (gM_PlayerInfo == null)
				{
					GM_PlayerInfo expr_19 = new GM_PlayerInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_PlayerInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_PlayerInfo.id = text;
				}
			}
		}
		if (gM_PlayerInfo == null)
		{
			GM_PlayerInfo expr_6C = new GM_PlayerInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_PlayerInfo = expr_6C;
		}
		return gM_PlayerInfo;
	}

	private static void Write(GM_PlayerInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_PlayerInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2001, writer);
		}
	}

	private static GM_PlayerInfo.TYPE Read(GM_PlayerInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_PlayerInfo.TYPE result;
		if (num != 2001)
		{
			protoReader.ThrowEnumException(typeof(GM_PlayerInfo.TYPE), num);
		}
		else
		{
			result = GM_PlayerInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_PlayerItemInfo gM_PlayerItemInfo, ProtoWriter writer)
	{
		if (gM_PlayerItemInfo.GetType() != typeof(GM_PlayerItemInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_PlayerItemInfo), gM_PlayerItemInfo.GetType());
		}
		string expr_2D = gM_PlayerItemInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_PlayerItemInfo, writer);
	}

	private static GM_PlayerItemInfo Read(GM_PlayerItemInfo gM_PlayerItemInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (gM_PlayerItemInfo == null)
				{
					GM_PlayerItemInfo expr_43 = new GM_PlayerItemInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_PlayerItemInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_PlayerItemInfo);
			}
			else
			{
				if (gM_PlayerItemInfo == null)
				{
					GM_PlayerItemInfo expr_19 = new GM_PlayerItemInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_PlayerItemInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_PlayerItemInfo.id = text;
				}
			}
		}
		if (gM_PlayerItemInfo == null)
		{
			GM_PlayerItemInfo expr_6C = new GM_PlayerItemInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_PlayerItemInfo = expr_6C;
		}
		return gM_PlayerItemInfo;
	}

	private static void Write(GM_PlayerItemInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_PlayerItemInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2009, writer);
		}
	}

	private static GM_PlayerItemInfo.TYPE Read(GM_PlayerItemInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_PlayerItemInfo.TYPE result;
		if (num != 2009)
		{
			protoReader.ThrowEnumException(typeof(GM_PlayerItemInfo.TYPE), num);
		}
		else
		{
			result = GM_PlayerItemInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_PlayerItemModify gM_PlayerItemModify, ProtoWriter writer)
	{
		if (gM_PlayerItemModify.GetType() != typeof(GM_PlayerItemModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_PlayerItemModify), gM_PlayerItemModify.GetType());
		}
		long expr_2D = gM_PlayerItemModify.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = gM_PlayerItemModify.num;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = gM_PlayerItemModify.userId;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		int expr_96 = gM_PlayerItemModify.type;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		int expr_B3 = gM_PlayerItemModify.itemId;
		if (expr_B3 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_B3, writer);
		}
		int expr_D0 = gM_PlayerItemModify.numWay;
		if (expr_D0 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_D0, writer);
		}
		ProtoWriter.AppendExtensionData(gM_PlayerItemModify, writer);
	}

	private static GM_PlayerItemModify Read(GM_PlayerItemModify gM_PlayerItemModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (gM_PlayerItemModify == null)
									{
										GM_PlayerItemModify expr_130 = new GM_PlayerItemModify();
										ProtoReader.NoteObject(expr_130, protoReader);
										gM_PlayerItemModify = expr_130;
									}
									protoReader.AppendExtensionData(gM_PlayerItemModify);
								}
								else
								{
									if (gM_PlayerItemModify == null)
									{
										GM_PlayerItemModify expr_109 = new GM_PlayerItemModify();
										ProtoReader.NoteObject(expr_109, protoReader);
										gM_PlayerItemModify = expr_109;
									}
									int num2 = protoReader.ReadInt32();
									gM_PlayerItemModify.numWay = num2;
								}
							}
							else
							{
								if (gM_PlayerItemModify == null)
								{
									GM_PlayerItemModify expr_D9 = new GM_PlayerItemModify();
									ProtoReader.NoteObject(expr_D9, protoReader);
									gM_PlayerItemModify = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								gM_PlayerItemModify.itemId = num2;
							}
						}
						else
						{
							if (gM_PlayerItemModify == null)
							{
								GM_PlayerItemModify expr_A9 = new GM_PlayerItemModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_PlayerItemModify = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							gM_PlayerItemModify.type = num2;
						}
					}
					else
					{
						if (gM_PlayerItemModify == null)
						{
							GM_PlayerItemModify expr_79 = new GM_PlayerItemModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_PlayerItemModify = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						gM_PlayerItemModify.userId = num3;
					}
				}
				else
				{
					if (gM_PlayerItemModify == null)
					{
						GM_PlayerItemModify expr_49 = new GM_PlayerItemModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_PlayerItemModify = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					gM_PlayerItemModify.num = num2;
				}
			}
			else
			{
				if (gM_PlayerItemModify == null)
				{
					GM_PlayerItemModify expr_19 = new GM_PlayerItemModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_PlayerItemModify = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				gM_PlayerItemModify.id = num3;
			}
		}
		if (gM_PlayerItemModify == null)
		{
			GM_PlayerItemModify expr_159 = new GM_PlayerItemModify();
			ProtoReader.NoteObject(expr_159, protoReader);
			gM_PlayerItemModify = expr_159;
		}
		return gM_PlayerItemModify;
	}

	private static void Write(GM_PlayerItemModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_PlayerItemModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2010, writer);
		}
	}

	private static GM_PlayerItemModify.TYPE Read(GM_PlayerItemModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_PlayerItemModify.TYPE result;
		if (num != 2010)
		{
			protoReader.ThrowEnumException(typeof(GM_PlayerItemModify.TYPE), num);
		}
		else
		{
			result = GM_PlayerItemModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_PlayerModify gM_PlayerModify, ProtoWriter protoWriter)
	{
		if (gM_PlayerModify.GetType() != typeof(GM_PlayerModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_PlayerModify), gM_PlayerModify.GetType());
		}
		long expr_2D = gM_PlayerModify.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = gM_PlayerModify.addRes;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = gM_PlayerModify.setRes;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_11B = gM_PlayerModify.subRes;
		if (expr_11B != null)
		{
			List<KVStruct> list = expr_11B;
			foreach (KVStruct arg_140_0 in list)
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_140_0, protoWriter);
				ProtoMsgSerializer.Write(arg_140_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_17F = gM_PlayerModify.level;
		if (expr_17F != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_17F, protoWriter);
		}
		int expr_19C = gM_PlayerModify.moneyType;
		if (expr_19C != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_19C, protoWriter);
		}
		int expr_1B9 = gM_PlayerModify.money;
		if (expr_1B9 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1B9, protoWriter);
		}
		int expr_1D6 = gM_PlayerModify.medalType;
		if (expr_1D6 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1D6, protoWriter);
		}
		int expr_1F4 = gM_PlayerModify.medal;
		if (expr_1F4 != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1F4, protoWriter);
		}
		string expr_212 = gM_PlayerModify.name;
		if (expr_212 != null)
		{
			if (!(expr_212 == ""))
			{
				ProtoWriter.WriteFieldHeader(11, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_212, protoWriter);
			}
		}
		long expr_243 = gM_PlayerModify.forbidChatEndTime;
		if (expr_243 != 0L)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_243, protoWriter);
		}
		long expr_26A = gM_PlayerModify.stopEndTime;
		if (expr_26A != 0L)
		{
			ProtoWriter.WriteFieldHeader(13, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_26A, protoWriter);
		}
		int expr_291 = gM_PlayerModify.guideId;
		if (expr_291 != 0)
		{
			ProtoWriter.WriteFieldHeader(14, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_291, protoWriter);
		}
		long expr_2AF = gM_PlayerModify.cardEndTime;
		if (expr_2AF != 0L)
		{
			ProtoWriter.WriteFieldHeader(15, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2AF, protoWriter);
		}
		int expr_2D6 = gM_PlayerModify.superCard;
		if (expr_2D6 != 0)
		{
			ProtoWriter.WriteFieldHeader(16, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D6, protoWriter);
		}
		ProtoWriter.AppendExtensionData(gM_PlayerModify, protoWriter);
	}

	private static GM_PlayerModify Read(GM_PlayerModify gM_PlayerModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (num != 11)
												{
													if (num != 12)
													{
														if (num != 13)
														{
															if (num != 14)
															{
																if (num != 15)
																{
																	if (num != 16)
																	{
																		if (gM_PlayerModify == null)
																		{
																			GM_PlayerModify expr_384 = new GM_PlayerModify();
																			ProtoReader.NoteObject(expr_384, protoReader);
																			gM_PlayerModify = expr_384;
																		}
																		protoReader.AppendExtensionData(gM_PlayerModify);
																	}
																	else
																	{
																		if (gM_PlayerModify == null)
																		{
																			GM_PlayerModify expr_35D = new GM_PlayerModify();
																			ProtoReader.NoteObject(expr_35D, protoReader);
																			gM_PlayerModify = expr_35D;
																		}
																		int num2 = protoReader.ReadInt32();
																		gM_PlayerModify.superCard = num2;
																	}
																}
																else
																{
																	if (gM_PlayerModify == null)
																	{
																		GM_PlayerModify expr_32C = new GM_PlayerModify();
																		ProtoReader.NoteObject(expr_32C, protoReader);
																		gM_PlayerModify = expr_32C;
																	}
																	long num3 = protoReader.ReadInt64();
																	gM_PlayerModify.cardEndTime = num3;
																}
															}
															else
															{
																if (gM_PlayerModify == null)
																{
																	GM_PlayerModify expr_2FB = new GM_PlayerModify();
																	ProtoReader.NoteObject(expr_2FB, protoReader);
																	gM_PlayerModify = expr_2FB;
																}
																int num2 = protoReader.ReadInt32();
																gM_PlayerModify.guideId = num2;
															}
														}
														else
														{
															if (gM_PlayerModify == null)
															{
																GM_PlayerModify expr_2CA = new GM_PlayerModify();
																ProtoReader.NoteObject(expr_2CA, protoReader);
																gM_PlayerModify = expr_2CA;
															}
															long num3 = protoReader.ReadInt64();
															gM_PlayerModify.stopEndTime = num3;
														}
													}
													else
													{
														if (gM_PlayerModify == null)
														{
															GM_PlayerModify expr_299 = new GM_PlayerModify();
															ProtoReader.NoteObject(expr_299, protoReader);
															gM_PlayerModify = expr_299;
														}
														long num3 = protoReader.ReadInt64();
														gM_PlayerModify.forbidChatEndTime = num3;
													}
												}
												else
												{
													if (gM_PlayerModify == null)
													{
														GM_PlayerModify expr_262 = new GM_PlayerModify();
														ProtoReader.NoteObject(expr_262, protoReader);
														gM_PlayerModify = expr_262;
													}
													string text = protoReader.ReadString();
													if (text != null)
													{
														gM_PlayerModify.name = text;
													}
												}
											}
											else
											{
												if (gM_PlayerModify == null)
												{
													GM_PlayerModify expr_231 = new GM_PlayerModify();
													ProtoReader.NoteObject(expr_231, protoReader);
													gM_PlayerModify = expr_231;
												}
												int num2 = protoReader.ReadInt32();
												gM_PlayerModify.medal = num2;
											}
										}
										else
										{
											if (gM_PlayerModify == null)
											{
												GM_PlayerModify expr_200 = new GM_PlayerModify();
												ProtoReader.NoteObject(expr_200, protoReader);
												gM_PlayerModify = expr_200;
											}
											int num2 = protoReader.ReadInt32();
											gM_PlayerModify.medalType = num2;
										}
									}
									else
									{
										if (gM_PlayerModify == null)
										{
											GM_PlayerModify expr_1CF = new GM_PlayerModify();
											ProtoReader.NoteObject(expr_1CF, protoReader);
											gM_PlayerModify = expr_1CF;
										}
										int num2 = protoReader.ReadInt32();
										gM_PlayerModify.money = num2;
									}
								}
								else
								{
									if (gM_PlayerModify == null)
									{
										GM_PlayerModify expr_19F = new GM_PlayerModify();
										ProtoReader.NoteObject(expr_19F, protoReader);
										gM_PlayerModify = expr_19F;
									}
									int num2 = protoReader.ReadInt32();
									gM_PlayerModify.moneyType = num2;
								}
							}
							else
							{
								if (gM_PlayerModify == null)
								{
									GM_PlayerModify expr_16F = new GM_PlayerModify();
									ProtoReader.NoteObject(expr_16F, protoReader);
									gM_PlayerModify = expr_16F;
								}
								int num2 = protoReader.ReadInt32();
								gM_PlayerModify.level = num2;
							}
						}
						else
						{
							if (gM_PlayerModify == null)
							{
								GM_PlayerModify expr_10D = new GM_PlayerModify();
								ProtoReader.NoteObject(expr_10D, protoReader);
								gM_PlayerModify = expr_10D;
							}
							List<KVStruct> list = gM_PlayerModify.subRes;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int num2 = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_145_0 = list;
								KVStruct arg_138_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_145_1 = ProtoMsgSerializer.Read(arg_138_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_145_0.Add(arg_145_1);
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
					}
					else
					{
						if (gM_PlayerModify == null)
						{
							GM_PlayerModify expr_AB = new GM_PlayerModify();
							ProtoReader.NoteObject(expr_AB, protoReader);
							gM_PlayerModify = expr_AB;
						}
						List<KVStruct> list = gM_PlayerModify.setRes;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int num2 = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
				}
				else
				{
					if (gM_PlayerModify == null)
					{
						GM_PlayerModify expr_49 = new GM_PlayerModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_PlayerModify = expr_49;
					}
					List<KVStruct> list = gM_PlayerModify.addRes;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (gM_PlayerModify == null)
				{
					GM_PlayerModify expr_19 = new GM_PlayerModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_PlayerModify = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				gM_PlayerModify.id = num3;
			}
		}
		if (gM_PlayerModify == null)
		{
			GM_PlayerModify expr_3AD = new GM_PlayerModify();
			ProtoReader.NoteObject(expr_3AD, protoReader);
			gM_PlayerModify = expr_3AD;
		}
		return gM_PlayerModify;
	}

	private static void Write(GM_PlayerModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_PlayerModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2002, writer);
		}
	}

	private static GM_PlayerModify.TYPE Read(GM_PlayerModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_PlayerModify.TYPE result;
		if (num != 2002)
		{
			protoReader.ThrowEnumException(typeof(GM_PlayerModify.TYPE), num);
		}
		else
		{
			result = GM_PlayerModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_ShowServerInfo gM_ShowServerInfo, ProtoWriter writer)
	{
		if (gM_ShowServerInfo.GetType() != typeof(GM_ShowServerInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_ShowServerInfo), gM_ShowServerInfo.GetType());
		}
		ProtoWriter.AppendExtensionData(gM_ShowServerInfo, writer);
	}

	private static GM_ShowServerInfo Read(GM_ShowServerInfo gM_ShowServerInfo, ProtoReader protoReader)
	{
		while (protoReader.ReadFieldHeader() > 0)
		{
			if (gM_ShowServerInfo == null)
			{
				GM_ShowServerInfo expr_10 = new GM_ShowServerInfo();
				ProtoReader.NoteObject(expr_10, protoReader);
				gM_ShowServerInfo = expr_10;
			}
			protoReader.AppendExtensionData(gM_ShowServerInfo);
		}
		if (gM_ShowServerInfo == null)
		{
			GM_ShowServerInfo expr_39 = new GM_ShowServerInfo();
			ProtoReader.NoteObject(expr_39, protoReader);
			gM_ShowServerInfo = expr_39;
		}
		return gM_ShowServerInfo;
	}

	private static void Write(GM_ShowServerInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_ShowServerInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2025, writer);
		}
	}

	private static GM_ShowServerInfo.TYPE Read(GM_ShowServerInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_ShowServerInfo.TYPE result;
		if (num != 2025)
		{
			protoReader.ThrowEnumException(typeof(GM_ShowServerInfo.TYPE), num);
		}
		else
		{
			result = GM_ShowServerInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_TaskInfo gM_TaskInfo, ProtoWriter writer)
	{
		if (gM_TaskInfo.GetType() != typeof(GM_TaskInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_TaskInfo), gM_TaskInfo.GetType());
		}
		string expr_2D = gM_TaskInfo.id;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(gM_TaskInfo, writer);
	}

	private static GM_TaskInfo Read(GM_TaskInfo gM_TaskInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (gM_TaskInfo == null)
				{
					GM_TaskInfo expr_43 = new GM_TaskInfo();
					ProtoReader.NoteObject(expr_43, protoReader);
					gM_TaskInfo = expr_43;
				}
				protoReader.AppendExtensionData(gM_TaskInfo);
			}
			else
			{
				if (gM_TaskInfo == null)
				{
					GM_TaskInfo expr_19 = new GM_TaskInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_TaskInfo = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					gM_TaskInfo.id = text;
				}
			}
		}
		if (gM_TaskInfo == null)
		{
			GM_TaskInfo expr_6C = new GM_TaskInfo();
			ProtoReader.NoteObject(expr_6C, protoReader);
			gM_TaskInfo = expr_6C;
		}
		return gM_TaskInfo;
	}

	private static void Write(GM_TaskInfo.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_TaskInfo.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2013, writer);
		}
	}

	private static GM_TaskInfo.TYPE Read(GM_TaskInfo.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_TaskInfo.TYPE result;
		if (num != 2013)
		{
			protoReader.ThrowEnumException(typeof(GM_TaskInfo.TYPE), num);
		}
		else
		{
			result = GM_TaskInfo.TYPE.CMD;
		}
		return result;
	}

	private static void Write(GM_TaskModify gM_TaskModify, ProtoWriter writer)
	{
		if (gM_TaskModify.GetType() != typeof(GM_TaskModify))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(GM_TaskModify), gM_TaskModify.GetType());
		}
		long expr_2D = gM_TaskModify.userId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = gM_TaskModify.count;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = gM_TaskModify.itemId;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = gM_TaskModify.way;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		ProtoWriter.AppendExtensionData(gM_TaskModify, writer);
	}

	private static GM_TaskModify Read(GM_TaskModify gM_TaskModify, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 3)
			{
				if (num != 4)
				{
					if (num != 5)
					{
						if (num != 6)
						{
							if (gM_TaskModify == null)
							{
								GM_TaskModify expr_D0 = new GM_TaskModify();
								ProtoReader.NoteObject(expr_D0, protoReader);
								gM_TaskModify = expr_D0;
							}
							protoReader.AppendExtensionData(gM_TaskModify);
						}
						else
						{
							if (gM_TaskModify == null)
							{
								GM_TaskModify expr_A9 = new GM_TaskModify();
								ProtoReader.NoteObject(expr_A9, protoReader);
								gM_TaskModify = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							gM_TaskModify.way = num2;
						}
					}
					else
					{
						if (gM_TaskModify == null)
						{
							GM_TaskModify expr_79 = new GM_TaskModify();
							ProtoReader.NoteObject(expr_79, protoReader);
							gM_TaskModify = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						gM_TaskModify.itemId = num2;
					}
				}
				else
				{
					if (gM_TaskModify == null)
					{
						GM_TaskModify expr_49 = new GM_TaskModify();
						ProtoReader.NoteObject(expr_49, protoReader);
						gM_TaskModify = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					gM_TaskModify.count = num2;
				}
			}
			else
			{
				if (gM_TaskModify == null)
				{
					GM_TaskModify expr_19 = new GM_TaskModify();
					ProtoReader.NoteObject(expr_19, protoReader);
					gM_TaskModify = expr_19;
				}
				long userId = protoReader.ReadInt64();
				gM_TaskModify.userId = userId;
			}
		}
		if (gM_TaskModify == null)
		{
			GM_TaskModify expr_F9 = new GM_TaskModify();
			ProtoReader.NoteObject(expr_F9, protoReader);
			gM_TaskModify = expr_F9;
		}
		return gM_TaskModify;
	}

	private static void Write(GM_TaskModify.TYPE tYPE, ProtoWriter writer)
	{
		ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
		if (tYPE != GM_TaskModify.TYPE.CMD)
		{
			ProtoWriter.ThrowEnumException(writer, tYPE);
		}
		else
		{
			ProtoWriter.WriteInt32(2014, writer);
		}
	}

	private static GM_TaskModify.TYPE Read(GM_TaskModify.TYPE tYPE, ProtoReader protoReader)
	{
		int num = protoReader.ReadInt32();
		GM_TaskModify.TYPE result;
		if (num != 2014)
		{
			protoReader.ThrowEnumException(typeof(GM_TaskModify.TYPE), num);
		}
		else
		{
			result = GM_TaskModify.TYPE.CMD;
		}
		return result;
	}

	private static void Write(KVStruct kVStruct, ProtoWriter writer)
	{
		if (kVStruct.GetType() != typeof(KVStruct))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(KVStruct), kVStruct.GetType());
		}
		long expr_2D = kVStruct.key;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = kVStruct.value;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(kVStruct, writer);
	}

	private static KVStruct Read(KVStruct kVStruct, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (kVStruct == null)
					{
						KVStruct expr_70 = new KVStruct();
						ProtoReader.NoteObject(expr_70, protoReader);
						kVStruct = expr_70;
					}
					protoReader.AppendExtensionData(kVStruct);
				}
				else
				{
					if (kVStruct == null)
					{
						KVStruct expr_49 = new KVStruct();
						ProtoReader.NoteObject(expr_49, protoReader);
						kVStruct = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					kVStruct.value = num2;
				}
			}
			else
			{
				if (kVStruct == null)
				{
					KVStruct expr_19 = new KVStruct();
					ProtoReader.NoteObject(expr_19, protoReader);
					kVStruct = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				kVStruct.key = num2;
			}
		}
		if (kVStruct == null)
		{
			KVStruct expr_99 = new KVStruct();
			ProtoReader.NoteObject(expr_99, protoReader);
			kVStruct = expr_99;
		}
		return kVStruct;
	}

	private static void Write(KVStructS2L kVStructS2L, ProtoWriter writer)
	{
		if (kVStructS2L.GetType() != typeof(KVStructS2L))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(KVStructS2L), kVStructS2L.GetType());
		}
		string expr_2D = kVStructS2L.key;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		long expr_5D = kVStructS2L.value;
		if (expr_5D != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_5D, writer);
		}
		ProtoWriter.AppendExtensionData(kVStructS2L, writer);
	}

	private static KVStructS2L Read(KVStructS2L kVStructS2L, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (kVStructS2L == null)
					{
						KVStructS2L expr_73 = new KVStructS2L();
						ProtoReader.NoteObject(expr_73, protoReader);
						kVStructS2L = expr_73;
					}
					protoReader.AppendExtensionData(kVStructS2L);
				}
				else
				{
					if (kVStructS2L == null)
					{
						KVStructS2L expr_4C = new KVStructS2L();
						ProtoReader.NoteObject(expr_4C, protoReader);
						kVStructS2L = expr_4C;
					}
					long value = protoReader.ReadInt64();
					kVStructS2L.value = value;
				}
			}
			else
			{
				if (kVStructS2L == null)
				{
					KVStructS2L expr_19 = new KVStructS2L();
					ProtoReader.NoteObject(expr_19, protoReader);
					kVStructS2L = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					kVStructS2L.key = text;
				}
			}
		}
		if (kVStructS2L == null)
		{
			KVStructS2L expr_9C = new KVStructS2L();
			ProtoReader.NoteObject(expr_9C, protoReader);
			kVStructS2L = expr_9C;
		}
		return kVStructS2L;
	}

	private static void Write(KVStructStr kVStructStr, ProtoWriter writer)
	{
		if (kVStructStr.GetType() != typeof(KVStructStr))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(KVStructStr), kVStructStr.GetType());
		}
		string expr_2D = kVStructStr.key;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		string expr_5D = kVStructStr.value;
		if (expr_5D != null)
		{
			if (!(expr_5D == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_5D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(kVStructStr, writer);
	}

	private static KVStructStr Read(KVStructStr kVStructStr, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (kVStructStr == null)
					{
						KVStructStr expr_76 = new KVStructStr();
						ProtoReader.NoteObject(expr_76, protoReader);
						kVStructStr = expr_76;
					}
					protoReader.AppendExtensionData(kVStructStr);
				}
				else
				{
					if (kVStructStr == null)
					{
						KVStructStr expr_4C = new KVStructStr();
						ProtoReader.NoteObject(expr_4C, protoReader);
						kVStructStr = expr_4C;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						kVStructStr.value = text;
					}
				}
			}
			else
			{
				if (kVStructStr == null)
				{
					KVStructStr expr_19 = new KVStructStr();
					ProtoReader.NoteObject(expr_19, protoReader);
					kVStructStr = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					kVStructStr.key = text;
				}
			}
		}
		if (kVStructStr == null)
		{
			KVStructStr expr_9F = new KVStructStr();
			ProtoReader.NoteObject(expr_9F, protoReader);
			kVStructStr = expr_9F;
		}
		return kVStructStr;
	}

	private static void Write(LotteryData lotteryData, ProtoWriter protoWriter)
	{
		if (lotteryData.GetType() != typeof(LotteryData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(LotteryData), lotteryData.GetType());
		}
		int expr_2D = lotteryData.tenPrice;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		List<RewardOption> expr_4A = lotteryData.option;
		if (expr_4A != null)
		{
			List<RewardOption> list = expr_4A;
			foreach (RewardOption arg_6F_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_6F_0, protoWriter);
				ProtoMsgSerializer.Write(arg_6F_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_AE = lotteryData.onePrice;
		if (expr_AE != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_AE, protoWriter);
		}
		ProtoWriter.AppendExtensionData(lotteryData, protoWriter);
	}

	private static LotteryData Read(LotteryData lotteryData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (lotteryData == null)
						{
							LotteryData expr_D0 = new LotteryData();
							ProtoReader.NoteObject(expr_D0, protoReader);
							lotteryData = expr_D0;
						}
						protoReader.AppendExtensionData(lotteryData);
					}
					else
					{
						if (lotteryData == null)
						{
							LotteryData expr_A9 = new LotteryData();
							ProtoReader.NoteObject(expr_A9, protoReader);
							lotteryData = expr_A9;
						}
						int num2 = protoReader.ReadInt32();
						lotteryData.onePrice = num2;
					}
				}
				else
				{
					if (lotteryData == null)
					{
						LotteryData expr_49 = new LotteryData();
						ProtoReader.NoteObject(expr_49, protoReader);
						lotteryData = expr_49;
					}
					List<RewardOption> list = lotteryData.option;
					if (list == null)
					{
						list = new List<RewardOption>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<RewardOption> arg_7F_0 = list;
						RewardOption arg_73_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						RewardOption arg_7F_1 = ProtoMsgSerializer.Read(arg_73_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_7F_0.Add(arg_7F_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (lotteryData == null)
				{
					LotteryData expr_19 = new LotteryData();
					ProtoReader.NoteObject(expr_19, protoReader);
					lotteryData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				lotteryData.tenPrice = num2;
			}
		}
		if (lotteryData == null)
		{
			LotteryData expr_F9 = new LotteryData();
			ProtoReader.NoteObject(expr_F9, protoReader);
			lotteryData = expr_F9;
		}
		return lotteryData;
	}

	private static void Write(NoticeData noticeData, ProtoWriter writer)
	{
		if (noticeData.GetType() != typeof(NoticeData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(NoticeData), noticeData.GetType());
		}
		long expr_2D = noticeData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = noticeData.content;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		long expr_83 = noticeData.startTime;
		if (expr_83 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_83, writer);
		}
		long expr_A9 = noticeData.endTime;
		if (expr_A9 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_A9, writer);
		}
		int expr_CF = noticeData.serverId;
		if (expr_CF != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_CF, writer);
		}
		int expr_EC = noticeData.interval;
		if (expr_EC != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_EC, writer);
		}
		long expr_109 = noticeData.modifyTime;
		if (expr_109 != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_109, writer);
		}
		int expr_12F = noticeData.noticeType;
		if (expr_12F != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_12F, writer);
		}
		List<int> expr_14D = noticeData.areas;
		if (expr_14D != null)
		{
			List<int> list = expr_14D;
			foreach (int arg_174_0 in list)
			{
				ProtoWriter.WriteFieldHeader(11, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_174_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(noticeData, writer);
	}

	private static NoticeData Read(NoticeData noticeData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 11)
											{
												if (noticeData == null)
												{
													NoticeData expr_225 = new NoticeData();
													ProtoReader.NoteObject(expr_225, protoReader);
													noticeData = expr_225;
												}
												protoReader.AppendExtensionData(noticeData);
											}
											else
											{
												if (noticeData == null)
												{
													NoticeData expr_19E = new NoticeData();
													ProtoReader.NoteObject(expr_19E, protoReader);
													noticeData = expr_19E;
												}
												List<int> list = noticeData.areas;
												if (list == null)
												{
													list = new List<int>();
												}
												if (protoReader.WireType != WireType.String)
												{
													int num2 = protoReader.FieldNumber;
													do
													{
														list.Add(protoReader.ReadInt32());
													}
													while (protoReader.TryReadFieldHeader(num2));
												}
												else
												{
													SubItemToken arg_210_0 = ProtoReader.StartSubItem(protoReader);
													while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
													{
														list.Add(protoReader.ReadInt32());
													}
													ProtoReader.EndSubItem(arg_210_0, protoReader);
												}
											}
										}
										else
										{
											if (noticeData == null)
											{
												NoticeData expr_16D = new NoticeData();
												ProtoReader.NoteObject(expr_16D, protoReader);
												noticeData = expr_16D;
											}
											int num2 = protoReader.ReadInt32();
											noticeData.noticeType = num2;
										}
									}
									else
									{
										if (noticeData == null)
										{
											NoticeData expr_13C = new NoticeData();
											ProtoReader.NoteObject(expr_13C, protoReader);
											noticeData = expr_13C;
										}
										long num3 = protoReader.ReadInt64();
										noticeData.modifyTime = num3;
									}
								}
								else
								{
									if (noticeData == null)
									{
										NoticeData expr_10C = new NoticeData();
										ProtoReader.NoteObject(expr_10C, protoReader);
										noticeData = expr_10C;
									}
									int num2 = protoReader.ReadInt32();
									noticeData.interval = num2;
								}
							}
							else
							{
								if (noticeData == null)
								{
									NoticeData expr_DC = new NoticeData();
									ProtoReader.NoteObject(expr_DC, protoReader);
									noticeData = expr_DC;
								}
								int num2 = protoReader.ReadInt32();
								noticeData.serverId = num2;
							}
						}
						else
						{
							if (noticeData == null)
							{
								NoticeData expr_AC = new NoticeData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								noticeData = expr_AC;
							}
							long num3 = protoReader.ReadInt64();
							noticeData.endTime = num3;
						}
					}
					else
					{
						if (noticeData == null)
						{
							NoticeData expr_7C = new NoticeData();
							ProtoReader.NoteObject(expr_7C, protoReader);
							noticeData = expr_7C;
						}
						long num3 = protoReader.ReadInt64();
						noticeData.startTime = num3;
					}
				}
				else
				{
					if (noticeData == null)
					{
						NoticeData expr_49 = new NoticeData();
						ProtoReader.NoteObject(expr_49, protoReader);
						noticeData = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						noticeData.content = text;
					}
				}
			}
			else
			{
				if (noticeData == null)
				{
					NoticeData expr_19 = new NoticeData();
					ProtoReader.NoteObject(expr_19, protoReader);
					noticeData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				noticeData.id = num3;
			}
		}
		if (noticeData == null)
		{
			NoticeData expr_24E = new NoticeData();
			ProtoReader.NoteObject(expr_24E, protoReader);
			noticeData = expr_24E;
		}
		return noticeData;
	}

	private static void Write(OfficerTenRecruitData officerTenRecruitData, ProtoWriter writer)
	{
		if (officerTenRecruitData.GetType() != typeof(OfficerTenRecruitData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OfficerTenRecruitData), officerTenRecruitData.GetType());
		}
		int expr_2D = officerTenRecruitData.itemId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = officerTenRecruitData.id;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		int expr_70 = officerTenRecruitData.type;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(officerTenRecruitData, writer);
	}

	private static OfficerTenRecruitData Read(OfficerTenRecruitData officerTenRecruitData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (officerTenRecruitData == null)
						{
							OfficerTenRecruitData expr_A0 = new OfficerTenRecruitData();
							ProtoReader.NoteObject(expr_A0, protoReader);
							officerTenRecruitData = expr_A0;
						}
						protoReader.AppendExtensionData(officerTenRecruitData);
					}
					else
					{
						if (officerTenRecruitData == null)
						{
							OfficerTenRecruitData expr_79 = new OfficerTenRecruitData();
							ProtoReader.NoteObject(expr_79, protoReader);
							officerTenRecruitData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						officerTenRecruitData.type = num2;
					}
				}
				else
				{
					if (officerTenRecruitData == null)
					{
						OfficerTenRecruitData expr_49 = new OfficerTenRecruitData();
						ProtoReader.NoteObject(expr_49, protoReader);
						officerTenRecruitData = expr_49;
					}
					long id = protoReader.ReadInt64();
					officerTenRecruitData.id = id;
				}
			}
			else
			{
				if (officerTenRecruitData == null)
				{
					OfficerTenRecruitData expr_19 = new OfficerTenRecruitData();
					ProtoReader.NoteObject(expr_19, protoReader);
					officerTenRecruitData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				officerTenRecruitData.itemId = num2;
			}
		}
		if (officerTenRecruitData == null)
		{
			OfficerTenRecruitData expr_C9 = new OfficerTenRecruitData();
			ProtoReader.NoteObject(expr_C9, protoReader);
			officerTenRecruitData = expr_C9;
		}
		return officerTenRecruitData;
	}

	private static void Write(OperationControlArmyID operationControlArmyID, ProtoWriter writer)
	{
		if (operationControlArmyID.GetType() != typeof(OperationControlArmyID))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OperationControlArmyID), operationControlArmyID.GetType());
		}
		int expr_2D = operationControlArmyID.index;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = operationControlArmyID.type;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(operationControlArmyID, writer);
	}

	private static OperationControlArmyID Read(OperationControlArmyID operationControlArmyID, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (operationControlArmyID == null)
					{
						OperationControlArmyID expr_70 = new OperationControlArmyID();
						ProtoReader.NoteObject(expr_70, protoReader);
						operationControlArmyID = expr_70;
					}
					protoReader.AppendExtensionData(operationControlArmyID);
				}
				else
				{
					if (operationControlArmyID == null)
					{
						OperationControlArmyID expr_49 = new OperationControlArmyID();
						ProtoReader.NoteObject(expr_49, protoReader);
						operationControlArmyID = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					operationControlArmyID.type = num2;
				}
			}
			else
			{
				if (operationControlArmyID == null)
				{
					OperationControlArmyID expr_19 = new OperationControlArmyID();
					ProtoReader.NoteObject(expr_19, protoReader);
					operationControlArmyID = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				operationControlArmyID.index = num2;
			}
		}
		if (operationControlArmyID == null)
		{
			OperationControlArmyID expr_99 = new OperationControlArmyID();
			ProtoReader.NoteObject(expr_99, protoReader);
			operationControlArmyID = expr_99;
		}
		return operationControlArmyID;
	}

	private static void Write(OperationEventData operationEventData, ProtoWriter protoWriter)
	{
		if (operationEventData.GetType() != typeof(OperationEventData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OperationEventData), operationEventData.GetType());
		}
		int expr_2D = operationEventData.time;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		int expr_4A = operationEventData.OperationType;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_4A, protoWriter);
		}
		ContainerData expr_67 = operationEventData.send;
		if (expr_67 != null)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_67, protoWriter);
			ProtoMsgSerializer.Write(expr_67, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		OperationMove expr_93 = operationEventData.move;
		if (expr_93 != null)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_93, protoWriter);
			ProtoMsgSerializer.Write(expr_93, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		OperationFoceAttack expr_BF = operationEventData.foceAtt;
		if (expr_BF != null)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_BF, protoWriter);
			ProtoMsgSerializer.Write(expr_BF, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		SupperSkillEvent expr_EB = operationEventData.superSkill;
		if (expr_EB != null)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_EB, protoWriter);
			ProtoMsgSerializer.Write(expr_EB, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		DieEvent expr_117 = operationEventData.die;
		if (expr_117 != null)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_117, protoWriter);
			ProtoMsgSerializer.Write(expr_117, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		OperationControlArmyID expr_143 = operationEventData.armyControl;
		if (expr_143 != null)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_143, protoWriter);
			ProtoMsgSerializer.Write(expr_143, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		bool expr_16F = operationEventData.IsAutoFight;
		if (expr_16F)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_16F, protoWriter);
		}
		ProtoWriter.AppendExtensionData(operationEventData, protoWriter);
	}

	private static OperationEventData Read(OperationEventData operationEventData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (operationEventData == null)
												{
													OperationEventData expr_25C = new OperationEventData();
													ProtoReader.NoteObject(expr_25C, protoReader);
													operationEventData = expr_25C;
												}
												protoReader.AppendExtensionData(operationEventData);
											}
											else
											{
												if (operationEventData == null)
												{
													OperationEventData expr_233 = new OperationEventData();
													ProtoReader.NoteObject(expr_233, protoReader);
													operationEventData = expr_233;
												}
												bool isAutoFight = protoReader.ReadBoolean();
												operationEventData.IsAutoFight = isAutoFight;
											}
										}
										else
										{
											if (operationEventData == null)
											{
												OperationEventData expr_1E8 = new OperationEventData();
												ProtoReader.NoteObject(expr_1E8, protoReader);
												operationEventData = expr_1E8;
											}
											OperationControlArmyID arg_1FF_0 = operationEventData.armyControl;
											SubItemToken token = ProtoReader.StartSubItem(protoReader);
											OperationControlArmyID arg_20B_0 = ProtoMsgSerializer.Read(arg_1FF_0, protoReader);
											ProtoReader.EndSubItem(token, protoReader);
											OperationControlArmyID operationControlArmyID = arg_20B_0;
											if (operationControlArmyID != null)
											{
												operationEventData.armyControl = operationControlArmyID;
											}
										}
									}
									else
									{
										if (operationEventData == null)
										{
											OperationEventData expr_19E = new OperationEventData();
											ProtoReader.NoteObject(expr_19E, protoReader);
											operationEventData = expr_19E;
										}
										DieEvent arg_1B5_0 = operationEventData.die;
										SubItemToken token = ProtoReader.StartSubItem(protoReader);
										DieEvent arg_1C1_0 = ProtoMsgSerializer.Read(arg_1B5_0, protoReader);
										ProtoReader.EndSubItem(token, protoReader);
										DieEvent dieEvent = arg_1C1_0;
										if (dieEvent != null)
										{
											operationEventData.die = dieEvent;
										}
									}
								}
								else
								{
									if (operationEventData == null)
									{
										OperationEventData expr_154 = new OperationEventData();
										ProtoReader.NoteObject(expr_154, protoReader);
										operationEventData = expr_154;
									}
									SupperSkillEvent arg_16B_0 = operationEventData.superSkill;
									SubItemToken token = ProtoReader.StartSubItem(protoReader);
									SupperSkillEvent arg_177_0 = ProtoMsgSerializer.Read(arg_16B_0, protoReader);
									ProtoReader.EndSubItem(token, protoReader);
									SupperSkillEvent supperSkillEvent = arg_177_0;
									if (supperSkillEvent != null)
									{
										operationEventData.superSkill = supperSkillEvent;
									}
								}
							}
							else
							{
								if (operationEventData == null)
								{
									OperationEventData expr_10A = new OperationEventData();
									ProtoReader.NoteObject(expr_10A, protoReader);
									operationEventData = expr_10A;
								}
								OperationFoceAttack arg_121_0 = operationEventData.foceAtt;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								OperationFoceAttack arg_12D_0 = ProtoMsgSerializer.Read(arg_121_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								OperationFoceAttack operationFoceAttack = arg_12D_0;
								if (operationFoceAttack != null)
								{
									operationEventData.foceAtt = operationFoceAttack;
								}
							}
						}
						else
						{
							if (operationEventData == null)
							{
								OperationEventData expr_C0 = new OperationEventData();
								ProtoReader.NoteObject(expr_C0, protoReader);
								operationEventData = expr_C0;
							}
							OperationMove arg_D7_0 = operationEventData.move;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							OperationMove arg_E3_0 = ProtoMsgSerializer.Read(arg_D7_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							OperationMove operationMove = arg_E3_0;
							if (operationMove != null)
							{
								operationEventData.move = operationMove;
							}
						}
					}
					else
					{
						if (operationEventData == null)
						{
							OperationEventData expr_79 = new OperationEventData();
							ProtoReader.NoteObject(expr_79, protoReader);
							operationEventData = expr_79;
						}
						ContainerData arg_90_0 = operationEventData.send;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						ContainerData arg_9C_0 = ProtoMsgSerializer.Read(arg_90_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						ContainerData containerData = arg_9C_0;
						if (containerData != null)
						{
							operationEventData.send = containerData;
						}
					}
				}
				else
				{
					if (operationEventData == null)
					{
						OperationEventData expr_49 = new OperationEventData();
						ProtoReader.NoteObject(expr_49, protoReader);
						operationEventData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					operationEventData.OperationType = num2;
				}
			}
			else
			{
				if (operationEventData == null)
				{
					OperationEventData expr_19 = new OperationEventData();
					ProtoReader.NoteObject(expr_19, protoReader);
					operationEventData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				operationEventData.time = num2;
			}
		}
		if (operationEventData == null)
		{
			OperationEventData expr_285 = new OperationEventData();
			ProtoReader.NoteObject(expr_285, protoReader);
			operationEventData = expr_285;
		}
		return operationEventData;
	}

	private static void Write(OperationFoceAttack operationFoceAttack, ProtoWriter protoWriter)
	{
		if (operationFoceAttack.GetType() != typeof(OperationFoceAttack))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OperationFoceAttack), operationFoceAttack.GetType());
		}
		long expr_2D = operationFoceAttack.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<OperationTanksPos> expr_53 = operationFoceAttack.tanksPos;
		if (expr_53 != null)
		{
			List<OperationTanksPos> list = expr_53;
			foreach (OperationTanksPos arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(operationFoceAttack, protoWriter);
	}

	private static OperationFoceAttack Read(OperationFoceAttack operationFoceAttack, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (operationFoceAttack == null)
					{
						OperationFoceAttack expr_A2 = new OperationFoceAttack();
						ProtoReader.NoteObject(expr_A2, protoReader);
						operationFoceAttack = expr_A2;
					}
					protoReader.AppendExtensionData(operationFoceAttack);
				}
				else
				{
					if (operationFoceAttack == null)
					{
						OperationFoceAttack expr_49 = new OperationFoceAttack();
						ProtoReader.NoteObject(expr_49, protoReader);
						operationFoceAttack = expr_49;
					}
					List<OperationTanksPos> list = operationFoceAttack.tanksPos;
					if (list == null)
					{
						list = new List<OperationTanksPos>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<OperationTanksPos> arg_81_0 = list;
						OperationTanksPos arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						OperationTanksPos arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (operationFoceAttack == null)
				{
					OperationFoceAttack expr_19 = new OperationFoceAttack();
					ProtoReader.NoteObject(expr_19, protoReader);
					operationFoceAttack = expr_19;
				}
				long id = protoReader.ReadInt64();
				operationFoceAttack.id = id;
			}
		}
		if (operationFoceAttack == null)
		{
			OperationFoceAttack expr_CB = new OperationFoceAttack();
			ProtoReader.NoteObject(expr_CB, protoReader);
			operationFoceAttack = expr_CB;
		}
		return operationFoceAttack;
	}

	private static void Write(OperationMove operationMove, ProtoWriter protoWriter)
	{
		if (operationMove.GetType() != typeof(OperationMove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OperationMove), operationMove.GetType());
		}
		Position expr_2D = operationMove.pos;
		if (expr_2D != null)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_2D, protoWriter);
			ProtoMsgSerializer.Write(expr_2D, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		List<OperationTanksPos> expr_59 = operationMove.tanksPos;
		if (expr_59 != null)
		{
			List<OperationTanksPos> list = expr_59;
			foreach (OperationTanksPos arg_7E_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_7E_0, protoWriter);
				ProtoMsgSerializer.Write(arg_7E_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(operationMove, protoWriter);
	}

	private static OperationMove Read(OperationMove operationMove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (operationMove == null)
					{
						OperationMove expr_B9 = new OperationMove();
						ProtoReader.NoteObject(expr_B9, protoReader);
						operationMove = expr_B9;
					}
					protoReader.AppendExtensionData(operationMove);
				}
				else
				{
					if (operationMove == null)
					{
						OperationMove expr_60 = new OperationMove();
						ProtoReader.NoteObject(expr_60, protoReader);
						operationMove = expr_60;
					}
					List<OperationTanksPos> list = operationMove.tanksPos;
					if (list == null)
					{
						list = new List<OperationTanksPos>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<OperationTanksPos> arg_97_0 = list;
						OperationTanksPos arg_8B_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						OperationTanksPos arg_97_1 = ProtoMsgSerializer.Read(arg_8B_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_97_0.Add(arg_97_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (operationMove == null)
				{
					OperationMove expr_19 = new OperationMove();
					ProtoReader.NoteObject(expr_19, protoReader);
					operationMove = expr_19;
				}
				Position arg_30_0 = operationMove.pos;
				SubItemToken token = ProtoReader.StartSubItem(protoReader);
				Position arg_3C_0 = ProtoMsgSerializer.Read(arg_30_0, protoReader);
				ProtoReader.EndSubItem(token, protoReader);
				Position position = arg_3C_0;
				if (position != null)
				{
					operationMove.pos = position;
				}
			}
		}
		if (operationMove == null)
		{
			OperationMove expr_E2 = new OperationMove();
			ProtoReader.NoteObject(expr_E2, protoReader);
			operationMove = expr_E2;
		}
		return operationMove;
	}

	private static void Write(OperationTankPos operationTankPos, ProtoWriter protoWriter)
	{
		if (operationTankPos.GetType() != typeof(OperationTankPos))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OperationTankPos), operationTankPos.GetType());
		}
		long expr_2D = operationTankPos.tankID;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		Position expr_53 = operationTankPos.curPos;
		if (expr_53 != null)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_53, protoWriter);
			ProtoMsgSerializer.Write(expr_53, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		Position expr_7F = operationTankPos.moveTargetPos;
		if (expr_7F != null)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_7F, protoWriter);
			ProtoMsgSerializer.Write(expr_7F, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		bool expr_AB = operationTankPos.isMove;
		if (expr_AB)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_AB, protoWriter);
		}
		int expr_C8 = operationTankPos.time;
		if (expr_C8 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_C8, protoWriter);
		}
		ProtoWriter.AppendExtensionData(operationTankPos, protoWriter);
	}

	private static OperationTankPos Read(OperationTankPos operationTankPos, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (operationTankPos == null)
								{
									OperationTankPos expr_132 = new OperationTankPos();
									ProtoReader.NoteObject(expr_132, protoReader);
									operationTankPos = expr_132;
								}
								protoReader.AppendExtensionData(operationTankPos);
							}
							else
							{
								if (operationTankPos == null)
								{
									OperationTankPos expr_109 = new OperationTankPos();
									ProtoReader.NoteObject(expr_109, protoReader);
									operationTankPos = expr_109;
								}
								int time = protoReader.ReadInt32();
								operationTankPos.time = time;
							}
						}
						else
						{
							if (operationTankPos == null)
							{
								OperationTankPos expr_D7 = new OperationTankPos();
								ProtoReader.NoteObject(expr_D7, protoReader);
								operationTankPos = expr_D7;
							}
							bool isMove = protoReader.ReadBoolean();
							operationTankPos.isMove = isMove;
						}
					}
					else
					{
						if (operationTankPos == null)
						{
							OperationTankPos expr_90 = new OperationTankPos();
							ProtoReader.NoteObject(expr_90, protoReader);
							operationTankPos = expr_90;
						}
						Position arg_A7_0 = operationTankPos.moveTargetPos;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						Position arg_B3_0 = ProtoMsgSerializer.Read(arg_A7_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						Position position = arg_B3_0;
						if (position != null)
						{
							operationTankPos.moveTargetPos = position;
						}
					}
				}
				else
				{
					if (operationTankPos == null)
					{
						OperationTankPos expr_49 = new OperationTankPos();
						ProtoReader.NoteObject(expr_49, protoReader);
						operationTankPos = expr_49;
					}
					Position arg_60_0 = operationTankPos.curPos;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					Position arg_6C_0 = ProtoMsgSerializer.Read(arg_60_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					Position position = arg_6C_0;
					if (position != null)
					{
						operationTankPos.curPos = position;
					}
				}
			}
			else
			{
				if (operationTankPos == null)
				{
					OperationTankPos expr_19 = new OperationTankPos();
					ProtoReader.NoteObject(expr_19, protoReader);
					operationTankPos = expr_19;
				}
				long tankID = protoReader.ReadInt64();
				operationTankPos.tankID = tankID;
			}
		}
		if (operationTankPos == null)
		{
			OperationTankPos expr_15B = new OperationTankPos();
			ProtoReader.NoteObject(expr_15B, protoReader);
			operationTankPos = expr_15B;
		}
		return operationTankPos;
	}

	private static void Write(OperationTanksPos operationTanksPos, ProtoWriter protoWriter)
	{
		if (operationTanksPos.GetType() != typeof(OperationTanksPos))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(OperationTanksPos), operationTanksPos.GetType());
		}
		long expr_2D = operationTanksPos.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		Position expr_53 = operationTanksPos.pos;
		if (expr_53 != null)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_53, protoWriter);
			ProtoMsgSerializer.Write(expr_53, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		int expr_7F = operationTanksPos.moveID;
		if (expr_7F != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_7F, protoWriter);
		}
		ProtoWriter.AppendExtensionData(operationTanksPos, protoWriter);
	}

	private static OperationTanksPos Read(OperationTanksPos operationTanksPos, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (operationTanksPos == null)
						{
							OperationTanksPos expr_B9 = new OperationTanksPos();
							ProtoReader.NoteObject(expr_B9, protoReader);
							operationTanksPos = expr_B9;
						}
						protoReader.AppendExtensionData(operationTanksPos);
					}
					else
					{
						if (operationTanksPos == null)
						{
							OperationTanksPos expr_90 = new OperationTanksPos();
							ProtoReader.NoteObject(expr_90, protoReader);
							operationTanksPos = expr_90;
						}
						int moveID = protoReader.ReadInt32();
						operationTanksPos.moveID = moveID;
					}
				}
				else
				{
					if (operationTanksPos == null)
					{
						OperationTanksPos expr_49 = new OperationTanksPos();
						ProtoReader.NoteObject(expr_49, protoReader);
						operationTanksPos = expr_49;
					}
					Position arg_60_0 = operationTanksPos.pos;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					Position arg_6C_0 = ProtoMsgSerializer.Read(arg_60_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					Position position = arg_6C_0;
					if (position != null)
					{
						operationTanksPos.pos = position;
					}
				}
			}
			else
			{
				if (operationTanksPos == null)
				{
					OperationTanksPos expr_19 = new OperationTanksPos();
					ProtoReader.NoteObject(expr_19, protoReader);
					operationTanksPos = expr_19;
				}
				long id = protoReader.ReadInt64();
				operationTanksPos.id = id;
			}
		}
		if (operationTanksPos == null)
		{
			OperationTanksPos expr_E2 = new OperationTanksPos();
			ProtoReader.NoteObject(expr_E2, protoReader);
			operationTanksPos = expr_E2;
		}
		return operationTanksPos;
	}

	private static void Write(Position position, ProtoWriter writer)
	{
		if (position.GetType() != typeof(Position))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(Position), position.GetType());
		}
		int expr_2D = position.x;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		int expr_4A = position.y;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(position, writer);
	}

	private static Position Read(Position position, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (position == null)
					{
						Position expr_70 = new Position();
						ProtoReader.NoteObject(expr_70, protoReader);
						position = expr_70;
					}
					protoReader.AppendExtensionData(position);
				}
				else
				{
					if (position == null)
					{
						Position expr_49 = new Position();
						ProtoReader.NoteObject(expr_49, protoReader);
						position = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					position.y = num2;
				}
			}
			else
			{
				if (position == null)
				{
					Position expr_19 = new Position();
					ProtoReader.NoteObject(expr_19, protoReader);
					position = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				position.x = num2;
			}
		}
		if (position == null)
		{
			Position expr_99 = new Position();
			ProtoReader.NoteObject(expr_99, protoReader);
			position = expr_99;
		}
		return position;
	}

	private static void Write(RankingData rankingData, ProtoWriter writer)
	{
		if (rankingData.GetType() != typeof(RankingData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(RankingData), rankingData.GetType());
		}
		int expr_2D = rankingData.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = rankingData.userId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		string expr_70 = rankingData.name;
		if (expr_70 != null)
		{
			if (!(expr_70 == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_70, writer);
			}
		}
		int expr_A0 = rankingData.score;
		if (expr_A0 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_A0, writer);
		}
		int expr_BD = rankingData.level;
		if (expr_BD != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_BD, writer);
		}
		bool expr_DA = rankingData.beforeBest;
		if (expr_DA)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_DA, writer);
		}
		int expr_F7 = rankingData.rank;
		if (expr_F7 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_F7, writer);
		}
		ProtoWriter.AppendExtensionData(rankingData, writer);
	}

	private static RankingData Read(RankingData rankingData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (rankingData == null)
										{
											RankingData expr_165 = new RankingData();
											ProtoReader.NoteObject(expr_165, protoReader);
											rankingData = expr_165;
										}
										protoReader.AppendExtensionData(rankingData);
									}
									else
									{
										if (rankingData == null)
										{
											RankingData expr_13E = new RankingData();
											ProtoReader.NoteObject(expr_13E, protoReader);
											rankingData = expr_13E;
										}
										int num2 = protoReader.ReadInt32();
										rankingData.rank = num2;
									}
								}
								else
								{
									if (rankingData == null)
									{
										RankingData expr_10C = new RankingData();
										ProtoReader.NoteObject(expr_10C, protoReader);
										rankingData = expr_10C;
									}
									bool beforeBest = protoReader.ReadBoolean();
									rankingData.beforeBest = beforeBest;
								}
							}
							else
							{
								if (rankingData == null)
								{
									RankingData expr_DC = new RankingData();
									ProtoReader.NoteObject(expr_DC, protoReader);
									rankingData = expr_DC;
								}
								int num2 = protoReader.ReadInt32();
								rankingData.level = num2;
							}
						}
						else
						{
							if (rankingData == null)
							{
								RankingData expr_AC = new RankingData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								rankingData = expr_AC;
							}
							int num2 = protoReader.ReadInt32();
							rankingData.score = num2;
						}
					}
					else
					{
						if (rankingData == null)
						{
							RankingData expr_79 = new RankingData();
							ProtoReader.NoteObject(expr_79, protoReader);
							rankingData = expr_79;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							rankingData.name = text;
						}
					}
				}
				else
				{
					if (rankingData == null)
					{
						RankingData expr_49 = new RankingData();
						ProtoReader.NoteObject(expr_49, protoReader);
						rankingData = expr_49;
					}
					long userId = protoReader.ReadInt64();
					rankingData.userId = userId;
				}
			}
			else
			{
				if (rankingData == null)
				{
					RankingData expr_19 = new RankingData();
					ProtoReader.NoteObject(expr_19, protoReader);
					rankingData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				rankingData.type = num2;
			}
		}
		if (rankingData == null)
		{
			RankingData expr_18E = new RankingData();
			ProtoReader.NoteObject(expr_18E, protoReader);
			rankingData = expr_18E;
		}
		return rankingData;
	}

	private static void Write(RewardOption rewardOption, ProtoWriter protoWriter)
	{
		if (rewardOption.GetType() != typeof(RewardOption))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(RewardOption), rewardOption.GetType());
		}
		List<KVStruct> expr_2D = rewardOption.resReward;
		if (expr_2D != null)
		{
			List<KVStruct> list = expr_2D;
			foreach (KVStruct arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_91 = rewardOption.itemReward;
		if (expr_91 != null)
		{
			List<KVStruct> list = expr_91;
			foreach (KVStruct arg_B6_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_B6_0, protoWriter);
				ProtoMsgSerializer.Write(arg_B6_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_F5 = rewardOption.moneyReward;
		if (expr_F5 != null)
		{
			List<KVStruct> list = expr_F5;
			foreach (KVStruct arg_11A_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_11A_0, protoWriter);
				ProtoMsgSerializer.Write(arg_11A_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_159 = rewardOption.skillReward;
		if (expr_159 != null)
		{
			List<KVStruct> list = expr_159;
			foreach (KVStruct arg_17E_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_17E_0, protoWriter);
				ProtoMsgSerializer.Write(arg_17E_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(rewardOption, protoWriter);
	}

	private static RewardOption Read(RewardOption rewardOption, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (rewardOption == null)
							{
								RewardOption expr_190 = new RewardOption();
								ProtoReader.NoteObject(expr_190, protoReader);
								rewardOption = expr_190;
							}
							protoReader.AppendExtensionData(rewardOption);
						}
						else
						{
							if (rewardOption == null)
							{
								RewardOption expr_139 = new RewardOption();
								ProtoReader.NoteObject(expr_139, protoReader);
								rewardOption = expr_139;
							}
							List<KVStruct> list = rewardOption.skillReward;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int fieldNumber = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_16F_0 = list;
								KVStruct arg_163_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_16F_1 = ProtoMsgSerializer.Read(arg_163_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_16F_0.Add(arg_16F_1);
							}
							while (protoReader.TryReadFieldHeader(fieldNumber));
						}
					}
					else
					{
						if (rewardOption == null)
						{
							RewardOption expr_D9 = new RewardOption();
							ProtoReader.NoteObject(expr_D9, protoReader);
							rewardOption = expr_D9;
						}
						List<KVStruct> list = rewardOption.moneyReward;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_10F_0 = list;
							KVStruct arg_103_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_10F_1 = ProtoMsgSerializer.Read(arg_103_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_10F_0.Add(arg_10F_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (rewardOption == null)
					{
						RewardOption expr_79 = new RewardOption();
						ProtoReader.NoteObject(expr_79, protoReader);
						rewardOption = expr_79;
					}
					List<KVStruct> list = rewardOption.itemReward;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_AF_0 = list;
						KVStruct arg_A3_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_AF_1 = ProtoMsgSerializer.Read(arg_A3_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_AF_0.Add(arg_AF_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (rewardOption == null)
				{
					RewardOption expr_19 = new RewardOption();
					ProtoReader.NoteObject(expr_19, protoReader);
					rewardOption = expr_19;
				}
				List<KVStruct> list = rewardOption.resReward;
				if (list == null)
				{
					list = new List<KVStruct>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<KVStruct> arg_4F_0 = list;
					KVStruct arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					KVStruct arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (rewardOption == null)
		{
			RewardOption expr_1B9 = new RewardOption();
			ProtoReader.NoteObject(expr_1B9, protoReader);
			rewardOption = expr_1B9;
		}
		return rewardOption;
	}

	private static void Write(SCAchievementData sCAchievementData, ProtoWriter writer)
	{
		if (sCAchievementData.GetType() != typeof(SCAchievementData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCAchievementData), sCAchievementData.GetType());
		}
		long expr_2D = sCAchievementData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCAchievementData.count;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = sCAchievementData.lastStar;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		int expr_96 = sCAchievementData.currentStar;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(sCAchievementData, writer);
	}

	private static SCAchievementData Read(SCAchievementData sCAchievementData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCAchievementData == null)
							{
								SCAchievementData expr_D0 = new SCAchievementData();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCAchievementData = expr_D0;
							}
							protoReader.AppendExtensionData(sCAchievementData);
						}
						else
						{
							if (sCAchievementData == null)
							{
								SCAchievementData expr_A9 = new SCAchievementData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCAchievementData = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCAchievementData.currentStar = num2;
						}
					}
					else
					{
						if (sCAchievementData == null)
						{
							SCAchievementData expr_79 = new SCAchievementData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCAchievementData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCAchievementData.lastStar = num2;
					}
				}
				else
				{
					if (sCAchievementData == null)
					{
						SCAchievementData expr_49 = new SCAchievementData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCAchievementData = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					sCAchievementData.count = num3;
				}
			}
			else
			{
				if (sCAchievementData == null)
				{
					SCAchievementData expr_19 = new SCAchievementData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCAchievementData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCAchievementData.id = num3;
			}
		}
		if (sCAchievementData == null)
		{
			SCAchievementData expr_F9 = new SCAchievementData();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCAchievementData = expr_F9;
		}
		return sCAchievementData;
	}

	private static void Write(SCActivitiesData sCActivitiesData, ProtoWriter protoWriter)
	{
		if (sCActivitiesData.GetType() != typeof(SCActivitiesData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCActivitiesData), sCActivitiesData.GetType());
		}
		long expr_2D = sCActivitiesData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCActivitiesData.counts;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = sCActivitiesData.getPrizeCount;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_11B = sCActivitiesData.todayTotalPayLastActId;
		if (expr_11B != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_11B, protoWriter);
		}
		long expr_138 = sCActivitiesData.todayTotalPayLastTime;
		if (expr_138 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_138, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCActivitiesData, protoWriter);
	}

	private static SCActivitiesData Read(SCActivitiesData sCActivitiesData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (sCActivitiesData == null)
								{
									SCActivitiesData expr_164 = new SCActivitiesData();
									ProtoReader.NoteObject(expr_164, protoReader);
									sCActivitiesData = expr_164;
								}
								protoReader.AppendExtensionData(sCActivitiesData);
							}
							else
							{
								if (sCActivitiesData == null)
								{
									SCActivitiesData expr_13D = new SCActivitiesData();
									ProtoReader.NoteObject(expr_13D, protoReader);
									sCActivitiesData = expr_13D;
								}
								long num2 = protoReader.ReadInt64();
								sCActivitiesData.todayTotalPayLastTime = num2;
							}
						}
						else
						{
							if (sCActivitiesData == null)
							{
								SCActivitiesData expr_10D = new SCActivitiesData();
								ProtoReader.NoteObject(expr_10D, protoReader);
								sCActivitiesData = expr_10D;
							}
							int num3 = protoReader.ReadInt32();
							sCActivitiesData.todayTotalPayLastActId = num3;
						}
					}
					else
					{
						if (sCActivitiesData == null)
						{
							SCActivitiesData expr_AB = new SCActivitiesData();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCActivitiesData = expr_AB;
						}
						List<KVStruct> list = sCActivitiesData.getPrizeCount;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int num3 = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(num3));
					}
				}
				else
				{
					if (sCActivitiesData == null)
					{
						SCActivitiesData expr_49 = new SCActivitiesData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCActivitiesData = expr_49;
					}
					List<KVStruct> list = sCActivitiesData.counts;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int num3 = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num3));
				}
			}
			else
			{
				if (sCActivitiesData == null)
				{
					SCActivitiesData expr_19 = new SCActivitiesData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCActivitiesData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCActivitiesData.id = num2;
			}
		}
		if (sCActivitiesData == null)
		{
			SCActivitiesData expr_18D = new SCActivitiesData();
			ProtoReader.NoteObject(expr_18D, protoReader);
			sCActivitiesData = expr_18D;
		}
		return sCActivitiesData;
	}

	private static void Write(SCActivityCountsData sCActivityCountsData, ProtoWriter writer)
	{
		if (sCActivityCountsData.GetType() != typeof(SCActivityCountsData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCActivityCountsData), sCActivityCountsData.GetType());
		}
		long expr_2D = sCActivityCountsData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCActivityCountsData.activityId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCActivityCountsData.count;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		string expr_8D = sCActivityCountsData.ext;
		if (expr_8D != null)
		{
			if (!(expr_8D == ""))
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, writer);
				ProtoWriter.WriteString(expr_8D, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCActivityCountsData, writer);
	}

	private static SCActivityCountsData Read(SCActivityCountsData sCActivityCountsData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCActivityCountsData == null)
							{
								SCActivityCountsData expr_D3 = new SCActivityCountsData();
								ProtoReader.NoteObject(expr_D3, protoReader);
								sCActivityCountsData = expr_D3;
							}
							protoReader.AppendExtensionData(sCActivityCountsData);
						}
						else
						{
							if (sCActivityCountsData == null)
							{
								SCActivityCountsData expr_A9 = new SCActivityCountsData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCActivityCountsData = expr_A9;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								sCActivityCountsData.ext = text;
							}
						}
					}
					else
					{
						if (sCActivityCountsData == null)
						{
							SCActivityCountsData expr_79 = new SCActivityCountsData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCActivityCountsData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCActivityCountsData.count = num2;
					}
				}
				else
				{
					if (sCActivityCountsData == null)
					{
						SCActivityCountsData expr_49 = new SCActivityCountsData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCActivityCountsData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCActivityCountsData.activityId = num2;
				}
			}
			else
			{
				if (sCActivityCountsData == null)
				{
					SCActivityCountsData expr_19 = new SCActivityCountsData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCActivityCountsData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCActivityCountsData.id = id;
			}
		}
		if (sCActivityCountsData == null)
		{
			SCActivityCountsData expr_FC = new SCActivityCountsData();
			ProtoReader.NoteObject(expr_FC, protoReader);
			sCActivityCountsData = expr_FC;
		}
		return sCActivityCountsData;
	}

	private static void Write(SCActivityData sCActivityData, ProtoWriter writer)
	{
		if (sCActivityData.GetType() != typeof(SCActivityData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCActivityData), sCActivityData.GetType());
		}
		long expr_2D = sCActivityData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<int> expr_53 = sCActivityData.dailyNpcIds;
		if (expr_53 != null)
		{
			List<int> list = expr_53;
			foreach (int arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_79_0, writer);
			}
		}
		int expr_A8 = sCActivityData.refreshDailyActivityTimes;
		if (expr_A8 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_A8, writer);
		}
		long expr_C5 = sCActivityData.dailyActivityEndTime;
		if (expr_C5 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_C5, writer);
		}
		int expr_EB = sCActivityData.attackDailyActivityTimes;
		if (expr_EB != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_EB, writer);
		}
		int expr_108 = sCActivityData.weekNpcId;
		if (expr_108 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_108, writer);
		}
		long expr_125 = sCActivityData.weekActivityEndTime;
		if (expr_125 != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_125, writer);
		}
		long expr_14B = sCActivityData.resetTimes;
		if (expr_14B != 0L)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_14B, writer);
		}
		int expr_172 = sCActivityData.weekActivityLastNpcId;
		if (expr_172 != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_172, writer);
		}
		ProtoWriter.AppendExtensionData(sCActivityData, writer);
	}

	private static SCActivityData Read(SCActivityData sCActivityData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (sCActivityData == null)
												{
													SCActivityData expr_21D = new SCActivityData();
													ProtoReader.NoteObject(expr_21D, protoReader);
													sCActivityData = expr_21D;
												}
												protoReader.AppendExtensionData(sCActivityData);
											}
											else
											{
												if (sCActivityData == null)
												{
													SCActivityData expr_1F6 = new SCActivityData();
													ProtoReader.NoteObject(expr_1F6, protoReader);
													sCActivityData = expr_1F6;
												}
												int num2 = protoReader.ReadInt32();
												sCActivityData.weekActivityLastNpcId = num2;
											}
										}
										else
										{
											if (sCActivityData == null)
											{
												SCActivityData expr_1C5 = new SCActivityData();
												ProtoReader.NoteObject(expr_1C5, protoReader);
												sCActivityData = expr_1C5;
											}
											long num3 = protoReader.ReadInt64();
											sCActivityData.resetTimes = num3;
										}
									}
									else
									{
										if (sCActivityData == null)
										{
											SCActivityData expr_194 = new SCActivityData();
											ProtoReader.NoteObject(expr_194, protoReader);
											sCActivityData = expr_194;
										}
										long num3 = protoReader.ReadInt64();
										sCActivityData.weekActivityEndTime = num3;
									}
								}
								else
								{
									if (sCActivityData == null)
									{
										SCActivityData expr_164 = new SCActivityData();
										ProtoReader.NoteObject(expr_164, protoReader);
										sCActivityData = expr_164;
									}
									int num2 = protoReader.ReadInt32();
									sCActivityData.weekNpcId = num2;
								}
							}
							else
							{
								if (sCActivityData == null)
								{
									SCActivityData expr_134 = new SCActivityData();
									ProtoReader.NoteObject(expr_134, protoReader);
									sCActivityData = expr_134;
								}
								int num2 = protoReader.ReadInt32();
								sCActivityData.attackDailyActivityTimes = num2;
							}
						}
						else
						{
							if (sCActivityData == null)
							{
								SCActivityData expr_104 = new SCActivityData();
								ProtoReader.NoteObject(expr_104, protoReader);
								sCActivityData = expr_104;
							}
							long num3 = protoReader.ReadInt64();
							sCActivityData.dailyActivityEndTime = num3;
						}
					}
					else
					{
						if (sCActivityData == null)
						{
							SCActivityData expr_D4 = new SCActivityData();
							ProtoReader.NoteObject(expr_D4, protoReader);
							sCActivityData = expr_D4;
						}
						int num2 = protoReader.ReadInt32();
						sCActivityData.refreshDailyActivityTimes = num2;
					}
				}
				else
				{
					if (sCActivityData == null)
					{
						SCActivityData expr_49 = new SCActivityData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCActivityData = expr_49;
					}
					List<int> list = sCActivityData.dailyNpcIds;
					if (list == null)
					{
						list = new List<int>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int num2 = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt32());
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt32());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCActivityData == null)
				{
					SCActivityData expr_19 = new SCActivityData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCActivityData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCActivityData.id = num3;
			}
		}
		if (sCActivityData == null)
		{
			SCActivityData expr_246 = new SCActivityData();
			ProtoReader.NoteObject(expr_246, protoReader);
			sCActivityData = expr_246;
		}
		return sCActivityData;
	}

	private static void Write(SCActivityRanking sCActivityRanking, ProtoWriter writer)
	{
		if (sCActivityRanking.GetType() != typeof(SCActivityRanking))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCActivityRanking), sCActivityRanking.GetType());
		}
		long expr_2D = sCActivityRanking.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCActivityRanking.activityId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		string expr_79 = sCActivityRanking.userName;
		if (expr_79 != null)
		{
			if (!(expr_79 == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_79, writer);
			}
		}
		long expr_A9 = sCActivityRanking.userId;
		if (expr_A9 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_A9, writer);
		}
		ProtoWriter.AppendExtensionData(sCActivityRanking, writer);
	}

	private static SCActivityRanking Read(SCActivityRanking sCActivityRanking, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCActivityRanking == null)
							{
								SCActivityRanking expr_D3 = new SCActivityRanking();
								ProtoReader.NoteObject(expr_D3, protoReader);
								sCActivityRanking = expr_D3;
							}
							protoReader.AppendExtensionData(sCActivityRanking);
						}
						else
						{
							if (sCActivityRanking == null)
							{
								SCActivityRanking expr_AC = new SCActivityRanking();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCActivityRanking = expr_AC;
							}
							long num2 = protoReader.ReadInt64();
							sCActivityRanking.userId = num2;
						}
					}
					else
					{
						if (sCActivityRanking == null)
						{
							SCActivityRanking expr_79 = new SCActivityRanking();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCActivityRanking = expr_79;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							sCActivityRanking.userName = text;
						}
					}
				}
				else
				{
					if (sCActivityRanking == null)
					{
						SCActivityRanking expr_49 = new SCActivityRanking();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCActivityRanking = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCActivityRanking.activityId = num2;
				}
			}
			else
			{
				if (sCActivityRanking == null)
				{
					SCActivityRanking expr_19 = new SCActivityRanking();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCActivityRanking = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCActivityRanking.id = num2;
			}
		}
		if (sCActivityRanking == null)
		{
			SCActivityRanking expr_FC = new SCActivityRanking();
			ProtoReader.NoteObject(expr_FC, protoReader);
			sCActivityRanking = expr_FC;
		}
		return sCActivityRanking;
	}

	private static void Write(SCArmsDealerData sCArmsDealerData, ProtoWriter writer)
	{
		if (sCArmsDealerData.GetType() != typeof(SCArmsDealerData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCArmsDealerData), sCArmsDealerData.GetType());
		}
		long expr_2D = sCArmsDealerData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCArmsDealerData.useMoneyRefreshTimes;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCArmsDealerData.lastRefreshTimeWithMoney;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		long expr_96 = sCArmsDealerData.nextRefreshTime;
		if (expr_96 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_96, writer);
		}
		List<int> expr_BC = sCArmsDealerData.armsIds;
		if (expr_BC != null)
		{
			List<int> list = expr_BC;
			foreach (int arg_E2_0 in list)
			{
				ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_E2_0, writer);
			}
		}
		List<bool> expr_111 = sCArmsDealerData.isSelled;
		if (expr_111 != null)
		{
			List<bool> list2 = expr_111;
			foreach (bool arg_137_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
				ProtoWriter.WriteBoolean(arg_137_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCArmsDealerData, writer);
	}

	private static SCArmsDealerData Read(SCArmsDealerData sCArmsDealerData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (sCArmsDealerData == null)
									{
										SCArmsDealerData expr_1EB = new SCArmsDealerData();
										ProtoReader.NoteObject(expr_1EB, protoReader);
										sCArmsDealerData = expr_1EB;
									}
									protoReader.AppendExtensionData(sCArmsDealerData);
								}
								else
								{
									if (sCArmsDealerData == null)
									{
										SCArmsDealerData expr_164 = new SCArmsDealerData();
										ProtoReader.NoteObject(expr_164, protoReader);
										sCArmsDealerData = expr_164;
									}
									List<bool> list = sCArmsDealerData.isSelled;
									if (list == null)
									{
										list = new List<bool>();
									}
									if (protoReader.WireType != WireType.String)
									{
										int num2 = protoReader.FieldNumber;
										do
										{
											list.Add(protoReader.ReadBoolean());
										}
										while (protoReader.TryReadFieldHeader(num2));
									}
									else
									{
										SubItemToken arg_1D6_0 = ProtoReader.StartSubItem(protoReader);
										while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
										{
											list.Add(protoReader.ReadBoolean());
										}
										ProtoReader.EndSubItem(arg_1D6_0, protoReader);
									}
								}
							}
							else
							{
								if (sCArmsDealerData == null)
								{
									SCArmsDealerData expr_D9 = new SCArmsDealerData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCArmsDealerData = expr_D9;
								}
								List<int> list2 = sCArmsDealerData.armsIds;
								if (list2 == null)
								{
									list2 = new List<int>();
								}
								if (protoReader.WireType != WireType.String)
								{
									int num2 = protoReader.FieldNumber;
									do
									{
										list2.Add(protoReader.ReadInt32());
									}
									while (protoReader.TryReadFieldHeader(num2));
								}
								else
								{
									SubItemToken arg_146_0 = ProtoReader.StartSubItem(protoReader);
									while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
									{
										list2.Add(protoReader.ReadInt32());
									}
									ProtoReader.EndSubItem(arg_146_0, protoReader);
								}
							}
						}
						else
						{
							if (sCArmsDealerData == null)
							{
								SCArmsDealerData expr_A9 = new SCArmsDealerData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCArmsDealerData = expr_A9;
							}
							long num3 = protoReader.ReadInt64();
							sCArmsDealerData.nextRefreshTime = num3;
						}
					}
					else
					{
						if (sCArmsDealerData == null)
						{
							SCArmsDealerData expr_79 = new SCArmsDealerData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCArmsDealerData = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCArmsDealerData.lastRefreshTimeWithMoney = num3;
					}
				}
				else
				{
					if (sCArmsDealerData == null)
					{
						SCArmsDealerData expr_49 = new SCArmsDealerData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCArmsDealerData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCArmsDealerData.useMoneyRefreshTimes = num2;
				}
			}
			else
			{
				if (sCArmsDealerData == null)
				{
					SCArmsDealerData expr_19 = new SCArmsDealerData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCArmsDealerData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCArmsDealerData.id = num3;
			}
		}
		if (sCArmsDealerData == null)
		{
			SCArmsDealerData expr_214 = new SCArmsDealerData();
			ProtoReader.NoteObject(expr_214, protoReader);
			sCArmsDealerData = expr_214;
		}
		return sCArmsDealerData;
	}

	private static void Write(SCArmyCDTimes sCArmyCDTimes, ProtoWriter protoWriter)
	{
		if (sCArmyCDTimes.GetType() != typeof(SCArmyCDTimes))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCArmyCDTimes), sCArmyCDTimes.GetType());
		}
		long expr_2D = sCArmyCDTimes.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCArmyCDTimes.cdTimes;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCArmyCDTimes, protoWriter);
	}

	private static SCArmyCDTimes Read(SCArmyCDTimes sCArmyCDTimes, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCArmyCDTimes == null)
					{
						SCArmyCDTimes expr_A2 = new SCArmyCDTimes();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCArmyCDTimes = expr_A2;
					}
					protoReader.AppendExtensionData(sCArmyCDTimes);
				}
				else
				{
					if (sCArmyCDTimes == null)
					{
						SCArmyCDTimes expr_49 = new SCArmyCDTimes();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCArmyCDTimes = expr_49;
					}
					List<KVStruct> list = sCArmyCDTimes.cdTimes;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCArmyCDTimes == null)
				{
					SCArmyCDTimes expr_19 = new SCArmyCDTimes();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCArmyCDTimes = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCArmyCDTimes.id = id;
			}
		}
		if (sCArmyCDTimes == null)
		{
			SCArmyCDTimes expr_CB = new SCArmyCDTimes();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCArmyCDTimes = expr_CB;
		}
		return sCArmyCDTimes;
	}

	private static void Write(SCArmyData sCArmyData, ProtoWriter writer)
	{
		if (sCArmyData.GetType() != typeof(SCArmyData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCArmyData), sCArmyData.GetType());
		}
		long expr_2D = sCArmyData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCArmyData.level;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCArmyData.starLevel;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCArmyData, writer);
	}

	private static SCArmyData Read(SCArmyData sCArmyData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCArmyData == null)
						{
							SCArmyData expr_A0 = new SCArmyData();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCArmyData = expr_A0;
						}
						protoReader.AppendExtensionData(sCArmyData);
					}
					else
					{
						if (sCArmyData == null)
						{
							SCArmyData expr_79 = new SCArmyData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCArmyData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCArmyData.starLevel = num2;
					}
				}
				else
				{
					if (sCArmyData == null)
					{
						SCArmyData expr_49 = new SCArmyData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCArmyData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCArmyData.level = num2;
				}
			}
			else
			{
				if (sCArmyData == null)
				{
					SCArmyData expr_19 = new SCArmyData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCArmyData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCArmyData.id = id;
			}
		}
		if (sCArmyData == null)
		{
			SCArmyData expr_C9 = new SCArmyData();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCArmyData = expr_C9;
		}
		return sCArmyData;
	}

	private static void Write(SCArmyTokenCdTime sCArmyTokenCdTime, ProtoWriter writer)
	{
		if (sCArmyTokenCdTime.GetType() != typeof(SCArmyTokenCdTime))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCArmyTokenCdTime), sCArmyTokenCdTime.GetType());
		}
		long expr_2D = sCArmyTokenCdTime.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCArmyTokenCdTime.armyTokenCdTime;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCArmyTokenCdTime, writer);
	}

	private static SCArmyTokenCdTime Read(SCArmyTokenCdTime sCArmyTokenCdTime, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCArmyTokenCdTime == null)
					{
						SCArmyTokenCdTime expr_70 = new SCArmyTokenCdTime();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCArmyTokenCdTime = expr_70;
					}
					protoReader.AppendExtensionData(sCArmyTokenCdTime);
				}
				else
				{
					if (sCArmyTokenCdTime == null)
					{
						SCArmyTokenCdTime expr_49 = new SCArmyTokenCdTime();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCArmyTokenCdTime = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCArmyTokenCdTime.armyTokenCdTime = num2;
				}
			}
			else
			{
				if (sCArmyTokenCdTime == null)
				{
					SCArmyTokenCdTime expr_19 = new SCArmyTokenCdTime();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCArmyTokenCdTime = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCArmyTokenCdTime.id = num2;
			}
		}
		if (sCArmyTokenCdTime == null)
		{
			SCArmyTokenCdTime expr_99 = new SCArmyTokenCdTime();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCArmyTokenCdTime = expr_99;
		}
		return sCArmyTokenCdTime;
	}

	private static void Write(SCBattleEnd sCBattleEnd, ProtoWriter protoWriter)
	{
		if (sCBattleEnd.GetType() != typeof(SCBattleEnd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBattleEnd), sCBattleEnd.GetType());
		}
		int expr_2D = sCBattleEnd.id;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		bool expr_4A = sCBattleEnd.win;
		if (expr_4A)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_4A, protoWriter);
		}
		KVStruct expr_67 = sCBattleEnd.battlefieldStar;
		if (expr_67 != null)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_67, protoWriter);
			ProtoMsgSerializer.Write(expr_67, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		long expr_93 = sCBattleEnd.npcAttackId;
		if (expr_93 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_93, protoWriter);
		}
		List<KVStruct> expr_B9 = sCBattleEnd.addItems;
		if (expr_B9 != null)
		{
			List<KVStruct> list = expr_B9;
			foreach (KVStruct arg_DE_0 in list)
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DE_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DE_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_11D = sCBattleEnd.addRes;
		if (expr_11D != null)
		{
			List<KVStruct> list = expr_11D;
			foreach (KVStruct arg_142_0 in list)
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_142_0, protoWriter);
				ProtoMsgSerializer.Write(arg_142_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_181 = sCBattleEnd.addEquips;
		if (expr_181 != null)
		{
			List<KVStruct> list = expr_181;
			foreach (KVStruct arg_1A7_0 in list)
			{
				ProtoWriter.WriteFieldHeader(9, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_1A7_0, protoWriter);
				ProtoMsgSerializer.Write(arg_1A7_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_1E6 = sCBattleEnd.isFirstBattleField;
		if (expr_1E6 != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1E6, protoWriter);
		}
		int expr_204 = sCBattleEnd.soldierExp;
		if (expr_204 != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_204, protoWriter);
		}
		int expr_222 = sCBattleEnd.completeId;
		if (expr_222 != 0)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_222, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCBattleEnd, protoWriter);
	}

	private static SCBattleEnd Read(SCBattleEnd sCBattleEnd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 7)
							{
								if (num != 8)
								{
									if (num != 9)
									{
										if (num != 10)
										{
											if (num != 11)
											{
												if (num != 12)
												{
													if (sCBattleEnd == null)
													{
														SCBattleEnd expr_2AC = new SCBattleEnd();
														ProtoReader.NoteObject(expr_2AC, protoReader);
														sCBattleEnd = expr_2AC;
													}
													protoReader.AppendExtensionData(sCBattleEnd);
												}
												else
												{
													if (sCBattleEnd == null)
													{
														SCBattleEnd expr_285 = new SCBattleEnd();
														ProtoReader.NoteObject(expr_285, protoReader);
														sCBattleEnd = expr_285;
													}
													int num2 = protoReader.ReadInt32();
													sCBattleEnd.completeId = num2;
												}
											}
											else
											{
												if (sCBattleEnd == null)
												{
													SCBattleEnd expr_254 = new SCBattleEnd();
													ProtoReader.NoteObject(expr_254, protoReader);
													sCBattleEnd = expr_254;
												}
												int num2 = protoReader.ReadInt32();
												sCBattleEnd.soldierExp = num2;
											}
										}
										else
										{
											if (sCBattleEnd == null)
											{
												SCBattleEnd expr_223 = new SCBattleEnd();
												ProtoReader.NoteObject(expr_223, protoReader);
												sCBattleEnd = expr_223;
											}
											int num2 = protoReader.ReadInt32();
											sCBattleEnd.isFirstBattleField = num2;
										}
									}
									else
									{
										if (sCBattleEnd == null)
										{
											SCBattleEnd expr_1BE = new SCBattleEnd();
											ProtoReader.NoteObject(expr_1BE, protoReader);
											sCBattleEnd = expr_1BE;
										}
										List<KVStruct> list = sCBattleEnd.addEquips;
										if (list == null)
										{
											list = new List<KVStruct>();
										}
										int num2 = protoReader.FieldNumber;
										do
										{
											List<KVStruct> arg_1F8_0 = list;
											KVStruct arg_1EC_0 = null;
											SubItemToken token = ProtoReader.StartSubItem(protoReader);
											KVStruct arg_1F8_1 = ProtoMsgSerializer.Read(arg_1EC_0, protoReader);
											ProtoReader.EndSubItem(token, protoReader);
											arg_1F8_0.Add(arg_1F8_1);
										}
										while (protoReader.TryReadFieldHeader(num2));
									}
								}
								else
								{
									if (sCBattleEnd == null)
									{
										SCBattleEnd expr_159 = new SCBattleEnd();
										ProtoReader.NoteObject(expr_159, protoReader);
										sCBattleEnd = expr_159;
									}
									List<KVStruct> list = sCBattleEnd.addRes;
									if (list == null)
									{
										list = new List<KVStruct>();
									}
									int num2 = protoReader.FieldNumber;
									do
									{
										List<KVStruct> arg_193_0 = list;
										KVStruct arg_187_0 = null;
										SubItemToken token = ProtoReader.StartSubItem(protoReader);
										KVStruct arg_193_1 = ProtoMsgSerializer.Read(arg_187_0, protoReader);
										ProtoReader.EndSubItem(token, protoReader);
										arg_193_0.Add(arg_193_1);
									}
									while (protoReader.TryReadFieldHeader(num2));
								}
							}
							else
							{
								if (sCBattleEnd == null)
								{
									SCBattleEnd expr_F5 = new SCBattleEnd();
									ProtoReader.NoteObject(expr_F5, protoReader);
									sCBattleEnd = expr_F5;
								}
								List<KVStruct> list = sCBattleEnd.addItems;
								if (list == null)
								{
									list = new List<KVStruct>();
								}
								int num2 = protoReader.FieldNumber;
								do
								{
									List<KVStruct> arg_12F_0 = list;
									KVStruct arg_123_0 = null;
									SubItemToken token = ProtoReader.StartSubItem(protoReader);
									KVStruct arg_12F_1 = ProtoMsgSerializer.Read(arg_123_0, protoReader);
									ProtoReader.EndSubItem(token, protoReader);
									arg_12F_0.Add(arg_12F_1);
								}
								while (protoReader.TryReadFieldHeader(num2));
							}
						}
						else
						{
							if (sCBattleEnd == null)
							{
								SCBattleEnd expr_C3 = new SCBattleEnd();
								ProtoReader.NoteObject(expr_C3, protoReader);
								sCBattleEnd = expr_C3;
							}
							long npcAttackId = protoReader.ReadInt64();
							sCBattleEnd.npcAttackId = npcAttackId;
						}
					}
					else
					{
						if (sCBattleEnd == null)
						{
							SCBattleEnd expr_79 = new SCBattleEnd();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCBattleEnd = expr_79;
						}
						KVStruct arg_90_0 = sCBattleEnd.battlefieldStar;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_9C_0 = ProtoMsgSerializer.Read(arg_90_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						KVStruct kVStruct = arg_9C_0;
						if (kVStruct != null)
						{
							sCBattleEnd.battlefieldStar = kVStruct;
						}
					}
				}
				else
				{
					if (sCBattleEnd == null)
					{
						SCBattleEnd expr_49 = new SCBattleEnd();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBattleEnd = expr_49;
					}
					bool win = protoReader.ReadBoolean();
					sCBattleEnd.win = win;
				}
			}
			else
			{
				if (sCBattleEnd == null)
				{
					SCBattleEnd expr_19 = new SCBattleEnd();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBattleEnd = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				sCBattleEnd.id = num2;
			}
		}
		if (sCBattleEnd == null)
		{
			SCBattleEnd expr_2D5 = new SCBattleEnd();
			ProtoReader.NoteObject(expr_2D5, protoReader);
			sCBattleEnd = expr_2D5;
		}
		return sCBattleEnd;
	}

	private static void Write(SCBattleFieldBox sCBattleFieldBox, ProtoWriter protoWriter)
	{
		if (sCBattleFieldBox.GetType() != typeof(SCBattleFieldBox))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBattleFieldBox), sCBattleFieldBox.GetType());
		}
		long expr_2D = sCBattleFieldBox.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCBattleFieldBox.battleFieldBox;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_B7 = sCBattleFieldBox.type;
		if (expr_B7 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_B7, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCBattleFieldBox, protoWriter);
	}

	private static SCBattleFieldBox Read(SCBattleFieldBox sCBattleFieldBox, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCBattleFieldBox == null)
						{
							SCBattleFieldBox expr_D2 = new SCBattleFieldBox();
							ProtoReader.NoteObject(expr_D2, protoReader);
							sCBattleFieldBox = expr_D2;
						}
						protoReader.AppendExtensionData(sCBattleFieldBox);
					}
					else
					{
						if (sCBattleFieldBox == null)
						{
							SCBattleFieldBox expr_AB = new SCBattleFieldBox();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCBattleFieldBox = expr_AB;
						}
						int num2 = protoReader.ReadInt32();
						sCBattleFieldBox.type = num2;
					}
				}
				else
				{
					if (sCBattleFieldBox == null)
					{
						SCBattleFieldBox expr_49 = new SCBattleFieldBox();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBattleFieldBox = expr_49;
					}
					List<KVStruct> list = sCBattleFieldBox.battleFieldBox;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (sCBattleFieldBox == null)
				{
					SCBattleFieldBox expr_19 = new SCBattleFieldBox();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBattleFieldBox = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCBattleFieldBox.id = id;
			}
		}
		if (sCBattleFieldBox == null)
		{
			SCBattleFieldBox expr_FB = new SCBattleFieldBox();
			ProtoReader.NoteObject(expr_FB, protoReader);
			sCBattleFieldBox = expr_FB;
		}
		return sCBattleFieldBox;
	}

	private static void Write(SCBattleStart sCBattleStart, ProtoWriter protoWriter)
	{
		if (sCBattleStart.GetType() != typeof(SCBattleStart))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBattleStart), sCBattleStart.GetType());
		}
		bool expr_2D = sCBattleStart.start;
		if (expr_2D)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_2D, protoWriter);
		}
		int expr_4A = sCBattleStart.battleType;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_4A, protoWriter);
		}
		int expr_67 = sCBattleStart.from;
		if (expr_67 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_67, protoWriter);
		}
		long expr_84 = sCBattleStart.id;
		if (expr_84 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_84, protoWriter);
		}
		List<KVStruct> expr_AA = sCBattleStart.eventMap;
		if (expr_AA != null)
		{
			List<KVStruct> list = expr_AA;
			foreach (KVStruct arg_CF_0 in list)
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_CF_0, protoWriter);
				ProtoMsgSerializer.Write(arg_CF_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCBattleStart, protoWriter);
	}

	private static SCBattleStart Read(SCBattleStart sCBattleStart, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (sCBattleStart == null)
								{
									SCBattleStart expr_136 = new SCBattleStart();
									ProtoReader.NoteObject(expr_136, protoReader);
									sCBattleStart = expr_136;
								}
								protoReader.AppendExtensionData(sCBattleStart);
							}
							else
							{
								if (sCBattleStart == null)
								{
									SCBattleStart expr_D9 = new SCBattleStart();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCBattleStart = expr_D9;
								}
								List<KVStruct> list = sCBattleStart.eventMap;
								if (list == null)
								{
									list = new List<KVStruct>();
								}
								int num2 = protoReader.FieldNumber;
								do
								{
									List<KVStruct> arg_115_0 = list;
									KVStruct arg_108_0 = null;
									SubItemToken token = ProtoReader.StartSubItem(protoReader);
									KVStruct arg_115_1 = ProtoMsgSerializer.Read(arg_108_0, protoReader);
									ProtoReader.EndSubItem(token, protoReader);
									arg_115_0.Add(arg_115_1);
								}
								while (protoReader.TryReadFieldHeader(num2));
							}
						}
						else
						{
							if (sCBattleStart == null)
							{
								SCBattleStart expr_A9 = new SCBattleStart();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCBattleStart = expr_A9;
							}
							long id = protoReader.ReadInt64();
							sCBattleStart.id = id;
						}
					}
					else
					{
						if (sCBattleStart == null)
						{
							SCBattleStart expr_79 = new SCBattleStart();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCBattleStart = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCBattleStart.from = num2;
					}
				}
				else
				{
					if (sCBattleStart == null)
					{
						SCBattleStart expr_49 = new SCBattleStart();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBattleStart = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCBattleStart.battleType = num2;
				}
			}
			else
			{
				if (sCBattleStart == null)
				{
					SCBattleStart expr_19 = new SCBattleStart();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBattleStart = expr_19;
				}
				bool start = protoReader.ReadBoolean();
				sCBattleStart.start = start;
			}
		}
		if (sCBattleStart == null)
		{
			SCBattleStart expr_15F = new SCBattleStart();
			ProtoReader.NoteObject(expr_15F, protoReader);
			sCBattleStart = expr_15F;
		}
		return sCBattleStart;
	}

	private static void Write(SCBtnOpen sCBtnOpen, ProtoWriter writer)
	{
		if (sCBtnOpen.GetType() != typeof(SCBtnOpen))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBtnOpen), sCBtnOpen.GetType());
		}
		long expr_2D = sCBtnOpen.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCBtnOpen.isAllOpen;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		List<int> expr_70 = sCBtnOpen.btnList;
		if (expr_70 != null)
		{
			List<int> list = expr_70;
			foreach (int arg_96_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_96_0, writer);
			}
		}
		List<int> expr_C5 = sCBtnOpen.btnId;
		if (expr_C5 != null)
		{
			List<int> list = expr_C5;
			foreach (int arg_EB_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_EB_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCBtnOpen, writer);
	}

	private static SCBtnOpen Read(SCBtnOpen sCBtnOpen, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCBtnOpen == null)
							{
								SCBtnOpen expr_186 = new SCBtnOpen();
								ProtoReader.NoteObject(expr_186, protoReader);
								sCBtnOpen = expr_186;
							}
							protoReader.AppendExtensionData(sCBtnOpen);
						}
						else
						{
							if (sCBtnOpen == null)
							{
								SCBtnOpen expr_104 = new SCBtnOpen();
								ProtoReader.NoteObject(expr_104, protoReader);
								sCBtnOpen = expr_104;
							}
							List<int> list = sCBtnOpen.btnId;
							if (list == null)
							{
								list = new List<int>();
							}
							if (protoReader.WireType != WireType.String)
							{
								int num2 = protoReader.FieldNumber;
								do
								{
									list.Add(protoReader.ReadInt32());
								}
								while (protoReader.TryReadFieldHeader(num2));
							}
							else
							{
								SubItemToken arg_171_0 = ProtoReader.StartSubItem(protoReader);
								while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
								{
									list.Add(protoReader.ReadInt32());
								}
								ProtoReader.EndSubItem(arg_171_0, protoReader);
							}
						}
					}
					else
					{
						if (sCBtnOpen == null)
						{
							SCBtnOpen expr_79 = new SCBtnOpen();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCBtnOpen = expr_79;
						}
						List<int> list = sCBtnOpen.btnList;
						if (list == null)
						{
							list = new List<int>();
						}
						if (protoReader.WireType != WireType.String)
						{
							int num2 = protoReader.FieldNumber;
							do
							{
								list.Add(protoReader.ReadInt32());
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
						else
						{
							SubItemToken arg_E6_0 = ProtoReader.StartSubItem(protoReader);
							while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
							{
								list.Add(protoReader.ReadInt32());
							}
							ProtoReader.EndSubItem(arg_E6_0, protoReader);
						}
					}
				}
				else
				{
					if (sCBtnOpen == null)
					{
						SCBtnOpen expr_49 = new SCBtnOpen();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBtnOpen = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCBtnOpen.isAllOpen = num2;
				}
			}
			else
			{
				if (sCBtnOpen == null)
				{
					SCBtnOpen expr_19 = new SCBtnOpen();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBtnOpen = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCBtnOpen.id = id;
			}
		}
		if (sCBtnOpen == null)
		{
			SCBtnOpen expr_1AF = new SCBtnOpen();
			ProtoReader.NoteObject(expr_1AF, protoReader);
			sCBtnOpen = expr_1AF;
		}
		return sCBtnOpen;
	}

	private static void Write(SCBuildingMove sCBuildingMove, ProtoWriter writer)
	{
		if (sCBuildingMove.GetType() != typeof(SCBuildingMove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBuildingMove), sCBuildingMove.GetType());
		}
		long expr_2D = sCBuildingMove.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCBuildingMove.index;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCBuildingMove.islandId;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCBuildingMove, writer);
	}

	private static SCBuildingMove Read(SCBuildingMove sCBuildingMove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCBuildingMove == null)
						{
							SCBuildingMove expr_A0 = new SCBuildingMove();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCBuildingMove = expr_A0;
						}
						protoReader.AppendExtensionData(sCBuildingMove);
					}
					else
					{
						if (sCBuildingMove == null)
						{
							SCBuildingMove expr_79 = new SCBuildingMove();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCBuildingMove = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCBuildingMove.islandId = num2;
					}
				}
				else
				{
					if (sCBuildingMove == null)
					{
						SCBuildingMove expr_49 = new SCBuildingMove();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBuildingMove = expr_49;
					}
					int index = protoReader.ReadInt32();
					sCBuildingMove.index = index;
				}
			}
			else
			{
				if (sCBuildingMove == null)
				{
					SCBuildingMove expr_19 = new SCBuildingMove();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBuildingMove = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCBuildingMove.id = num2;
			}
		}
		if (sCBuildingMove == null)
		{
			SCBuildingMove expr_C9 = new SCBuildingMove();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCBuildingMove = expr_C9;
		}
		return sCBuildingMove;
	}

	private static void Write(SCBuildingRemove sCBuildingRemove, ProtoWriter writer)
	{
		if (sCBuildingRemove.GetType() != typeof(SCBuildingRemove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBuildingRemove), sCBuildingRemove.GetType());
		}
		long expr_2D = sCBuildingRemove.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(sCBuildingRemove, writer);
	}

	private static SCBuildingRemove Read(SCBuildingRemove sCBuildingRemove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (sCBuildingRemove == null)
				{
					SCBuildingRemove expr_40 = new SCBuildingRemove();
					ProtoReader.NoteObject(expr_40, protoReader);
					sCBuildingRemove = expr_40;
				}
				protoReader.AppendExtensionData(sCBuildingRemove);
			}
			else
			{
				if (sCBuildingRemove == null)
				{
					SCBuildingRemove expr_19 = new SCBuildingRemove();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBuildingRemove = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCBuildingRemove.id = id;
			}
		}
		if (sCBuildingRemove == null)
		{
			SCBuildingRemove expr_69 = new SCBuildingRemove();
			ProtoReader.NoteObject(expr_69, protoReader);
			sCBuildingRemove = expr_69;
		}
		return sCBuildingRemove;
	}

	private static void Write(SCBuyArmyToken sCBuyArmyToken, ProtoWriter writer)
	{
		if (sCBuyArmyToken.GetType() != typeof(SCBuyArmyToken))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBuyArmyToken), sCBuyArmyToken.GetType());
		}
		long expr_2D = sCBuyArmyToken.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCBuyArmyToken.times;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCBuyArmyToken, writer);
	}

	private static SCBuyArmyToken Read(SCBuyArmyToken sCBuyArmyToken, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCBuyArmyToken == null)
					{
						SCBuyArmyToken expr_70 = new SCBuyArmyToken();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCBuyArmyToken = expr_70;
					}
					protoReader.AppendExtensionData(sCBuyArmyToken);
				}
				else
				{
					if (sCBuyArmyToken == null)
					{
						SCBuyArmyToken expr_49 = new SCBuyArmyToken();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBuyArmyToken = expr_49;
					}
					int times = protoReader.ReadInt32();
					sCBuyArmyToken.times = times;
				}
			}
			else
			{
				if (sCBuyArmyToken == null)
				{
					SCBuyArmyToken expr_19 = new SCBuyArmyToken();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBuyArmyToken = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCBuyArmyToken.id = id;
			}
		}
		if (sCBuyArmyToken == null)
		{
			SCBuyArmyToken expr_99 = new SCBuyArmyToken();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCBuyArmyToken = expr_99;
		}
		return sCBuyArmyToken;
	}

	private static void Write(SCBuyBuildingQueue sCBuyBuildingQueue, ProtoWriter writer)
	{
		if (sCBuyBuildingQueue.GetType() != typeof(SCBuyBuildingQueue))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCBuyBuildingQueue), sCBuyBuildingQueue.GetType());
		}
		long expr_2D = sCBuyBuildingQueue.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCBuyBuildingQueue.queueNum;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCBuyBuildingQueue, writer);
	}

	private static SCBuyBuildingQueue Read(SCBuyBuildingQueue sCBuyBuildingQueue, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCBuyBuildingQueue == null)
					{
						SCBuyBuildingQueue expr_70 = new SCBuyBuildingQueue();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCBuyBuildingQueue = expr_70;
					}
					protoReader.AppendExtensionData(sCBuyBuildingQueue);
				}
				else
				{
					if (sCBuyBuildingQueue == null)
					{
						SCBuyBuildingQueue expr_49 = new SCBuyBuildingQueue();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCBuyBuildingQueue = expr_49;
					}
					int queueNum = protoReader.ReadInt32();
					sCBuyBuildingQueue.queueNum = queueNum;
				}
			}
			else
			{
				if (sCBuyBuildingQueue == null)
				{
					SCBuyBuildingQueue expr_19 = new SCBuyBuildingQueue();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCBuyBuildingQueue = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCBuyBuildingQueue.id = id;
			}
		}
		if (sCBuyBuildingQueue == null)
		{
			SCBuyBuildingQueue expr_99 = new SCBuyBuildingQueue();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCBuyBuildingQueue = expr_99;
		}
		return sCBuyBuildingQueue;
	}

	private static void Write(SCCalcMoney sCCalcMoney, ProtoWriter protoWriter)
	{
		if (sCCalcMoney.GetType() != typeof(SCCalcMoney))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCCalcMoney), sCCalcMoney.GetType());
		}
		int expr_2D = sCCalcMoney.money;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		List<KVStruct> expr_4A = sCCalcMoney.res;
		if (expr_4A != null)
		{
			List<KVStruct> list = expr_4A;
			foreach (KVStruct arg_6F_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_6F_0, protoWriter);
				ProtoMsgSerializer.Write(arg_6F_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_AE = sCCalcMoney.timeDiff;
		if (expr_AE != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_AE, protoWriter);
		}
		long expr_D4 = sCCalcMoney.id;
		if (expr_D4 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_D4, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCCalcMoney, protoWriter);
	}

	private static SCCalcMoney Read(SCCalcMoney sCCalcMoney, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCCalcMoney == null)
							{
								SCCalcMoney expr_104 = new SCCalcMoney();
								ProtoReader.NoteObject(expr_104, protoReader);
								sCCalcMoney = expr_104;
							}
							protoReader.AppendExtensionData(sCCalcMoney);
						}
						else
						{
							if (sCCalcMoney == null)
							{
								SCCalcMoney expr_DB = new SCCalcMoney();
								ProtoReader.NoteObject(expr_DB, protoReader);
								sCCalcMoney = expr_DB;
							}
							long num2 = protoReader.ReadInt64();
							sCCalcMoney.id = num2;
						}
					}
					else
					{
						if (sCCalcMoney == null)
						{
							SCCalcMoney expr_A9 = new SCCalcMoney();
							ProtoReader.NoteObject(expr_A9, protoReader);
							sCCalcMoney = expr_A9;
						}
						long num2 = protoReader.ReadInt64();
						sCCalcMoney.timeDiff = num2;
					}
				}
				else
				{
					if (sCCalcMoney == null)
					{
						SCCalcMoney expr_49 = new SCCalcMoney();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCCalcMoney = expr_49;
					}
					List<KVStruct> list = sCCalcMoney.res;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int num3 = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_7F_0 = list;
						KVStruct arg_73_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_7F_1 = ProtoMsgSerializer.Read(arg_73_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_7F_0.Add(arg_7F_1);
					}
					while (protoReader.TryReadFieldHeader(num3));
				}
			}
			else
			{
				if (sCCalcMoney == null)
				{
					SCCalcMoney expr_19 = new SCCalcMoney();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCCalcMoney = expr_19;
				}
				int num3 = protoReader.ReadInt32();
				sCCalcMoney.money = num3;
			}
		}
		if (sCCalcMoney == null)
		{
			SCCalcMoney expr_12D = new SCCalcMoney();
			ProtoReader.NoteObject(expr_12D, protoReader);
			sCCalcMoney = expr_12D;
		}
		return sCCalcMoney;
	}

	private static void Write(SCCDEndTime sCCDEndTime, ProtoWriter writer)
	{
		if (sCCDEndTime.GetType() != typeof(SCCDEndTime))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCCDEndTime), sCCDEndTime.GetType());
		}
		long expr_2D = sCCDEndTime.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCCDEndTime.type;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCCDEndTime.CDEndTime;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		int expr_96 = sCCDEndTime.level;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(sCCDEndTime, writer);
	}

	private static SCCDEndTime Read(SCCDEndTime sCCDEndTime, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCCDEndTime == null)
							{
								SCCDEndTime expr_D0 = new SCCDEndTime();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCCDEndTime = expr_D0;
							}
							protoReader.AppendExtensionData(sCCDEndTime);
						}
						else
						{
							if (sCCDEndTime == null)
							{
								SCCDEndTime expr_A9 = new SCCDEndTime();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCCDEndTime = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCCDEndTime.level = num2;
						}
					}
					else
					{
						if (sCCDEndTime == null)
						{
							SCCDEndTime expr_79 = new SCCDEndTime();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCCDEndTime = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCCDEndTime.CDEndTime = num3;
					}
				}
				else
				{
					if (sCCDEndTime == null)
					{
						SCCDEndTime expr_49 = new SCCDEndTime();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCCDEndTime = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCCDEndTime.type = num2;
				}
			}
			else
			{
				if (sCCDEndTime == null)
				{
					SCCDEndTime expr_19 = new SCCDEndTime();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCCDEndTime = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCCDEndTime.id = num3;
			}
		}
		if (sCCDEndTime == null)
		{
			SCCDEndTime expr_F9 = new SCCDEndTime();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCCDEndTime = expr_F9;
		}
		return sCCDEndTime;
	}

	private static void Write(SCChitChatData sCChitChatData, ProtoWriter writer)
	{
		if (sCChitChatData.GetType() != typeof(SCChitChatData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCChitChatData), sCChitChatData.GetType());
		}
		long expr_2D = sCChitChatData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCChitChatData.userId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		string expr_79 = sCChitChatData.userName;
		if (expr_79 != null)
		{
			if (!(expr_79 == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_79, writer);
			}
		}
		string expr_A9 = sCChitChatData.message;
		if (expr_A9 != null)
		{
			if (!(expr_A9 == ""))
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, writer);
				ProtoWriter.WriteString(expr_A9, writer);
			}
		}
		int expr_D9 = sCChitChatData.type;
		if (expr_D9 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_D9, writer);
		}
		int expr_F6 = sCChitChatData.militaryRank;
		if (expr_F6 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_F6, writer);
		}
		int expr_113 = sCChitChatData.contentType;
		if (expr_113 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_113, writer);
		}
		long expr_130 = sCChitChatData.time;
		if (expr_130 != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_130, writer);
		}
		ProtoWriter.AppendExtensionData(sCChitChatData, writer);
	}

	private static SCChitChatData Read(SCChitChatData sCChitChatData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (sCChitChatData == null)
											{
												SCChitChatData expr_196 = new SCChitChatData();
												ProtoReader.NoteObject(expr_196, protoReader);
												sCChitChatData = expr_196;
											}
											protoReader.AppendExtensionData(sCChitChatData);
										}
										else
										{
											if (sCChitChatData == null)
											{
												SCChitChatData expr_16F = new SCChitChatData();
												ProtoReader.NoteObject(expr_16F, protoReader);
												sCChitChatData = expr_16F;
											}
											long num2 = protoReader.ReadInt64();
											sCChitChatData.time = num2;
										}
									}
									else
									{
										if (sCChitChatData == null)
										{
											SCChitChatData expr_13F = new SCChitChatData();
											ProtoReader.NoteObject(expr_13F, protoReader);
											sCChitChatData = expr_13F;
										}
										int num3 = protoReader.ReadInt32();
										sCChitChatData.contentType = num3;
									}
								}
								else
								{
									if (sCChitChatData == null)
									{
										SCChitChatData expr_10F = new SCChitChatData();
										ProtoReader.NoteObject(expr_10F, protoReader);
										sCChitChatData = expr_10F;
									}
									int num3 = protoReader.ReadInt32();
									sCChitChatData.militaryRank = num3;
								}
							}
							else
							{
								if (sCChitChatData == null)
								{
									SCChitChatData expr_DF = new SCChitChatData();
									ProtoReader.NoteObject(expr_DF, protoReader);
									sCChitChatData = expr_DF;
								}
								int num3 = protoReader.ReadInt32();
								sCChitChatData.type = num3;
							}
						}
						else
						{
							if (sCChitChatData == null)
							{
								SCChitChatData expr_AC = new SCChitChatData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCChitChatData = expr_AC;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								sCChitChatData.message = text;
							}
						}
					}
					else
					{
						if (sCChitChatData == null)
						{
							SCChitChatData expr_79 = new SCChitChatData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCChitChatData = expr_79;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							sCChitChatData.userName = text;
						}
					}
				}
				else
				{
					if (sCChitChatData == null)
					{
						SCChitChatData expr_49 = new SCChitChatData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCChitChatData = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCChitChatData.userId = num2;
				}
			}
			else
			{
				if (sCChitChatData == null)
				{
					SCChitChatData expr_19 = new SCChitChatData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCChitChatData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCChitChatData.id = num2;
			}
		}
		if (sCChitChatData == null)
		{
			SCChitChatData expr_1BF = new SCChitChatData();
			ProtoReader.NoteObject(expr_1BF, protoReader);
			sCChitChatData = expr_1BF;
		}
		return sCChitChatData;
	}

	private static void Write(SCCityWallBatchMove sCCityWallBatchMove, ProtoWriter protoWriter)
	{
		if (sCCityWallBatchMove.GetType() != typeof(SCCityWallBatchMove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCCityWallBatchMove), sCCityWallBatchMove.GetType());
		}
		long expr_2D = sCCityWallBatchMove.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<SCBuildingMove> expr_53 = sCCityWallBatchMove.cityWalls;
		if (expr_53 != null)
		{
			List<SCBuildingMove> list = expr_53;
			foreach (SCBuildingMove arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCCityWallBatchMove, protoWriter);
	}

	private static SCCityWallBatchMove Read(SCCityWallBatchMove sCCityWallBatchMove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCCityWallBatchMove == null)
					{
						SCCityWallBatchMove expr_A2 = new SCCityWallBatchMove();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCCityWallBatchMove = expr_A2;
					}
					protoReader.AppendExtensionData(sCCityWallBatchMove);
				}
				else
				{
					if (sCCityWallBatchMove == null)
					{
						SCCityWallBatchMove expr_49 = new SCCityWallBatchMove();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCCityWallBatchMove = expr_49;
					}
					List<SCBuildingMove> list = sCCityWallBatchMove.cityWalls;
					if (list == null)
					{
						list = new List<SCBuildingMove>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<SCBuildingMove> arg_81_0 = list;
						SCBuildingMove arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						SCBuildingMove arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCCityWallBatchMove == null)
				{
					SCCityWallBatchMove expr_19 = new SCCityWallBatchMove();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCCityWallBatchMove = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCCityWallBatchMove.id = id;
			}
		}
		if (sCCityWallBatchMove == null)
		{
			SCCityWallBatchMove expr_CB = new SCCityWallBatchMove();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCCityWallBatchMove = expr_CB;
		}
		return sCCityWallBatchMove;
	}

	private static void Write(SCClearDailyTask sCClearDailyTask, ProtoWriter writer)
	{
		if (sCClearDailyTask.GetType() != typeof(SCClearDailyTask))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCClearDailyTask), sCClearDailyTask.GetType());
		}
		long expr_2D = sCClearDailyTask.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(sCClearDailyTask, writer);
	}

	private static SCClearDailyTask Read(SCClearDailyTask sCClearDailyTask, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (sCClearDailyTask == null)
				{
					SCClearDailyTask expr_40 = new SCClearDailyTask();
					ProtoReader.NoteObject(expr_40, protoReader);
					sCClearDailyTask = expr_40;
				}
				protoReader.AppendExtensionData(sCClearDailyTask);
			}
			else
			{
				if (sCClearDailyTask == null)
				{
					SCClearDailyTask expr_19 = new SCClearDailyTask();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCClearDailyTask = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCClearDailyTask.id = id;
			}
		}
		if (sCClearDailyTask == null)
		{
			SCClearDailyTask expr_69 = new SCClearDailyTask();
			ProtoReader.NoteObject(expr_69, protoReader);
			sCClearDailyTask = expr_69;
		}
		return sCClearDailyTask;
	}

	private static void Write(SCConfigureArmyData sCConfigureArmyData, ProtoWriter protoWriter)
	{
		if (sCConfigureArmyData.GetType() != typeof(SCConfigureArmyData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCConfigureArmyData), sCConfigureArmyData.GetType());
		}
		long expr_2D = sCConfigureArmyData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCConfigureArmyData.armyId2Num;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = sCConfigureArmyData.cdTime2ArmyId;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_11B = sCConfigureArmyData.endArmyId2Num;
		if (expr_11B != null)
		{
			List<KVStruct> list = expr_11B;
			foreach (KVStruct arg_140_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_140_0, protoWriter);
				ProtoMsgSerializer.Write(arg_140_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCConfigureArmyData, protoWriter);
	}

	private static SCConfigureArmyData Read(SCConfigureArmyData sCConfigureArmyData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCConfigureArmyData == null)
							{
								SCConfigureArmyData expr_166 = new SCConfigureArmyData();
								ProtoReader.NoteObject(expr_166, protoReader);
								sCConfigureArmyData = expr_166;
							}
							protoReader.AppendExtensionData(sCConfigureArmyData);
						}
						else
						{
							if (sCConfigureArmyData == null)
							{
								SCConfigureArmyData expr_10D = new SCConfigureArmyData();
								ProtoReader.NoteObject(expr_10D, protoReader);
								sCConfigureArmyData = expr_10D;
							}
							List<KVStruct> list = sCConfigureArmyData.endArmyId2Num;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int fieldNumber = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_145_0 = list;
								KVStruct arg_138_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_145_1 = ProtoMsgSerializer.Read(arg_138_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_145_0.Add(arg_145_1);
							}
							while (protoReader.TryReadFieldHeader(fieldNumber));
						}
					}
					else
					{
						if (sCConfigureArmyData == null)
						{
							SCConfigureArmyData expr_AB = new SCConfigureArmyData();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCConfigureArmyData = expr_AB;
						}
						List<KVStruct> list = sCConfigureArmyData.cdTime2ArmyId;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sCConfigureArmyData == null)
					{
						SCConfigureArmyData expr_49 = new SCConfigureArmyData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCConfigureArmyData = expr_49;
					}
					List<KVStruct> list = sCConfigureArmyData.armyId2Num;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCConfigureArmyData == null)
				{
					SCConfigureArmyData expr_19 = new SCConfigureArmyData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCConfigureArmyData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCConfigureArmyData.id = id;
			}
		}
		if (sCConfigureArmyData == null)
		{
			SCConfigureArmyData expr_18F = new SCConfigureArmyData();
			ProtoReader.NoteObject(expr_18F, protoReader);
			sCConfigureArmyData = expr_18F;
		}
		return sCConfigureArmyData;
	}

	private static void Write(SCEliteBoxStatus sCEliteBoxStatus, ProtoWriter protoWriter)
	{
		if (sCEliteBoxStatus.GetType() != typeof(SCEliteBoxStatus))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCEliteBoxStatus), sCEliteBoxStatus.GetType());
		}
		long expr_2D = sCEliteBoxStatus.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCEliteBoxStatus.boxStatus;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		bool expr_B7 = sCEliteBoxStatus.showTips;
		if (expr_B7)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_B7, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCEliteBoxStatus, protoWriter);
	}

	private static SCEliteBoxStatus Read(SCEliteBoxStatus sCEliteBoxStatus, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCEliteBoxStatus == null)
						{
							SCEliteBoxStatus expr_D4 = new SCEliteBoxStatus();
							ProtoReader.NoteObject(expr_D4, protoReader);
							sCEliteBoxStatus = expr_D4;
						}
						protoReader.AppendExtensionData(sCEliteBoxStatus);
					}
					else
					{
						if (sCEliteBoxStatus == null)
						{
							SCEliteBoxStatus expr_AB = new SCEliteBoxStatus();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCEliteBoxStatus = expr_AB;
						}
						bool showTips = protoReader.ReadBoolean();
						sCEliteBoxStatus.showTips = showTips;
					}
				}
				else
				{
					if (sCEliteBoxStatus == null)
					{
						SCEliteBoxStatus expr_49 = new SCEliteBoxStatus();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCEliteBoxStatus = expr_49;
					}
					List<KVStruct> list = sCEliteBoxStatus.boxStatus;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCEliteBoxStatus == null)
				{
					SCEliteBoxStatus expr_19 = new SCEliteBoxStatus();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCEliteBoxStatus = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCEliteBoxStatus.id = id;
			}
		}
		if (sCEliteBoxStatus == null)
		{
			SCEliteBoxStatus expr_FD = new SCEliteBoxStatus();
			ProtoReader.NoteObject(expr_FD, protoReader);
			sCEliteBoxStatus = expr_FD;
		}
		return sCEliteBoxStatus;
	}

	private static void Write(SCExpCardData sCExpCardData, ProtoWriter protoWriter)
	{
		if (sCExpCardData.GetType() != typeof(SCExpCardData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCExpCardData), sCExpCardData.GetType());
		}
		long expr_2D = sCExpCardData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCExpCardData.expCard;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCExpCardData, protoWriter);
	}

	private static SCExpCardData Read(SCExpCardData sCExpCardData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCExpCardData == null)
					{
						SCExpCardData expr_A2 = new SCExpCardData();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCExpCardData = expr_A2;
					}
					protoReader.AppendExtensionData(sCExpCardData);
				}
				else
				{
					if (sCExpCardData == null)
					{
						SCExpCardData expr_49 = new SCExpCardData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCExpCardData = expr_49;
					}
					List<KVStruct> list = sCExpCardData.expCard;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCExpCardData == null)
				{
					SCExpCardData expr_19 = new SCExpCardData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCExpCardData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCExpCardData.id = id;
			}
		}
		if (sCExpCardData == null)
		{
			SCExpCardData expr_CB = new SCExpCardData();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCExpCardData = expr_CB;
		}
		return sCExpCardData;
	}

	private static void Write(SCExtraArmy sCExtraArmy, ProtoWriter protoWriter)
	{
		if (sCExtraArmy.GetType() != typeof(SCExtraArmy))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCExtraArmy), sCExtraArmy.GetType());
		}
		long expr_2D = sCExtraArmy.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCExtraArmy.itemId2Level;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = sCExtraArmy.itemId2Num;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_11B = sCExtraArmy.espireTime;
		if (expr_11B != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_11B, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCExtraArmy, protoWriter);
	}

	private static SCExtraArmy Read(SCExtraArmy sCExtraArmy, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCExtraArmy == null)
							{
								SCExtraArmy expr_134 = new SCExtraArmy();
								ProtoReader.NoteObject(expr_134, protoReader);
								sCExtraArmy = expr_134;
							}
							protoReader.AppendExtensionData(sCExtraArmy);
						}
						else
						{
							if (sCExtraArmy == null)
							{
								SCExtraArmy expr_10D = new SCExtraArmy();
								ProtoReader.NoteObject(expr_10D, protoReader);
								sCExtraArmy = expr_10D;
							}
							long num2 = protoReader.ReadInt64();
							sCExtraArmy.espireTime = num2;
						}
					}
					else
					{
						if (sCExtraArmy == null)
						{
							SCExtraArmy expr_AB = new SCExtraArmy();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCExtraArmy = expr_AB;
						}
						List<KVStruct> list = sCExtraArmy.itemId2Num;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sCExtraArmy == null)
					{
						SCExtraArmy expr_49 = new SCExtraArmy();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCExtraArmy = expr_49;
					}
					List<KVStruct> list = sCExtraArmy.itemId2Level;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCExtraArmy == null)
				{
					SCExtraArmy expr_19 = new SCExtraArmy();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCExtraArmy = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCExtraArmy.id = num2;
			}
		}
		if (sCExtraArmy == null)
		{
			SCExtraArmy expr_15D = new SCExtraArmy();
			ProtoReader.NoteObject(expr_15D, protoReader);
			sCExtraArmy = expr_15D;
		}
		return sCExtraArmy;
	}

	private static void Write(SCFightingEvent sCFightingEvent, ProtoWriter protoWriter)
	{
		if (sCFightingEvent.GetType() != typeof(SCFightingEvent))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCFightingEvent), sCFightingEvent.GetType());
		}
		long expr_2D = sCFightingEvent.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCFightingEvent.dropItem;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = sCFightingEvent.dropEquip;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_11B = sCFightingEvent.buyArmyTimes;
		if (expr_11B != null)
		{
			List<KVStruct> list = expr_11B;
			foreach (KVStruct arg_140_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_140_0, protoWriter);
				ProtoMsgSerializer.Write(arg_140_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCFightingEvent, protoWriter);
	}

	private static SCFightingEvent Read(SCFightingEvent sCFightingEvent, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCFightingEvent == null)
							{
								SCFightingEvent expr_166 = new SCFightingEvent();
								ProtoReader.NoteObject(expr_166, protoReader);
								sCFightingEvent = expr_166;
							}
							protoReader.AppendExtensionData(sCFightingEvent);
						}
						else
						{
							if (sCFightingEvent == null)
							{
								SCFightingEvent expr_10D = new SCFightingEvent();
								ProtoReader.NoteObject(expr_10D, protoReader);
								sCFightingEvent = expr_10D;
							}
							List<KVStruct> list = sCFightingEvent.buyArmyTimes;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int fieldNumber = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_145_0 = list;
								KVStruct arg_138_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_145_1 = ProtoMsgSerializer.Read(arg_138_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_145_0.Add(arg_145_1);
							}
							while (protoReader.TryReadFieldHeader(fieldNumber));
						}
					}
					else
					{
						if (sCFightingEvent == null)
						{
							SCFightingEvent expr_AB = new SCFightingEvent();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCFightingEvent = expr_AB;
						}
						List<KVStruct> list = sCFightingEvent.dropEquip;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sCFightingEvent == null)
					{
						SCFightingEvent expr_49 = new SCFightingEvent();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCFightingEvent = expr_49;
					}
					List<KVStruct> list = sCFightingEvent.dropItem;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCFightingEvent == null)
				{
					SCFightingEvent expr_19 = new SCFightingEvent();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCFightingEvent = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCFightingEvent.id = id;
			}
		}
		if (sCFightingEvent == null)
		{
			SCFightingEvent expr_18F = new SCFightingEvent();
			ProtoReader.NoteObject(expr_18F, protoReader);
			sCFightingEvent = expr_18F;
		}
		return sCFightingEvent;
	}

	private static void Write(SCFlushSkill sCFlushSkill, ProtoWriter writer)
	{
		if (sCFlushSkill.GetType() != typeof(SCFlushSkill))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCFlushSkill), sCFlushSkill.GetType());
		}
		long expr_2D = sCFlushSkill.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCFlushSkill.debris;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCFlushSkill, writer);
	}

	private static SCFlushSkill Read(SCFlushSkill sCFlushSkill, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCFlushSkill == null)
					{
						SCFlushSkill expr_70 = new SCFlushSkill();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCFlushSkill = expr_70;
					}
					protoReader.AppendExtensionData(sCFlushSkill);
				}
				else
				{
					if (sCFlushSkill == null)
					{
						SCFlushSkill expr_49 = new SCFlushSkill();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCFlushSkill = expr_49;
					}
					int debris = protoReader.ReadInt32();
					sCFlushSkill.debris = debris;
				}
			}
			else
			{
				if (sCFlushSkill == null)
				{
					SCFlushSkill expr_19 = new SCFlushSkill();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCFlushSkill = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCFlushSkill.id = id;
			}
		}
		if (sCFlushSkill == null)
		{
			SCFlushSkill expr_99 = new SCFlushSkill();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCFlushSkill = expr_99;
		}
		return sCFlushSkill;
	}

	private static void Write(SCGetActivitiesList sCGetActivitiesList, ProtoWriter protoWriter)
	{
		if (sCGetActivitiesList.GetType() != typeof(SCGetActivitiesList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCGetActivitiesList), sCGetActivitiesList.GetType());
		}
		long expr_2D = sCGetActivitiesList.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<DesignActivityData> expr_53 = sCGetActivitiesList.data;
		if (expr_53 != null)
		{
			List<DesignActivityData> list = expr_53;
			foreach (DesignActivityData arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_B7 = sCGetActivitiesList.type;
		if (expr_B7 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_B7, protoWriter);
		}
		LotteryData expr_D4 = sCGetActivitiesList.lottery;
		if (expr_D4 != null)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_D4, protoWriter);
			ProtoMsgSerializer.Write(expr_D4, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCGetActivitiesList, protoWriter);
	}

	private static SCGetActivitiesList Read(SCGetActivitiesList sCGetActivitiesList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCGetActivitiesList == null)
							{
								SCGetActivitiesList expr_11E = new SCGetActivitiesList();
								ProtoReader.NoteObject(expr_11E, protoReader);
								sCGetActivitiesList = expr_11E;
							}
							protoReader.AppendExtensionData(sCGetActivitiesList);
						}
						else
						{
							if (sCGetActivitiesList == null)
							{
								SCGetActivitiesList expr_DB = new SCGetActivitiesList();
								ProtoReader.NoteObject(expr_DB, protoReader);
								sCGetActivitiesList = expr_DB;
							}
							LotteryData arg_F3_0 = sCGetActivitiesList.lottery;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							LotteryData arg_100_0 = ProtoMsgSerializer.Read(arg_F3_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							LotteryData lotteryData = arg_100_0;
							if (lotteryData != null)
							{
								sCGetActivitiesList.lottery = lotteryData;
							}
						}
					}
					else
					{
						if (sCGetActivitiesList == null)
						{
							SCGetActivitiesList expr_AB = new SCGetActivitiesList();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCGetActivitiesList = expr_AB;
						}
						int num2 = protoReader.ReadInt32();
						sCGetActivitiesList.type = num2;
					}
				}
				else
				{
					if (sCGetActivitiesList == null)
					{
						SCGetActivitiesList expr_49 = new SCGetActivitiesList();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCGetActivitiesList = expr_49;
					}
					List<DesignActivityData> list = sCGetActivitiesList.data;
					if (list == null)
					{
						list = new List<DesignActivityData>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<DesignActivityData> arg_81_0 = list;
						DesignActivityData arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						DesignActivityData arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (sCGetActivitiesList == null)
				{
					SCGetActivitiesList expr_19 = new SCGetActivitiesList();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCGetActivitiesList = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCGetActivitiesList.id = id;
			}
		}
		if (sCGetActivitiesList == null)
		{
			SCGetActivitiesList expr_147 = new SCGetActivitiesList();
			ProtoReader.NoteObject(expr_147, protoReader);
			sCGetActivitiesList = expr_147;
		}
		return sCGetActivitiesList;
	}

	private static void Write(SCGetOrderId sCGetOrderId, ProtoWriter writer)
	{
		if (sCGetOrderId.GetType() != typeof(SCGetOrderId))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCGetOrderId), sCGetOrderId.GetType());
		}
		long expr_2D = sCGetOrderId.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = sCGetOrderId.orderId;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCGetOrderId, writer);
	}

	private static SCGetOrderId Read(SCGetOrderId sCGetOrderId, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCGetOrderId == null)
					{
						SCGetOrderId expr_73 = new SCGetOrderId();
						ProtoReader.NoteObject(expr_73, protoReader);
						sCGetOrderId = expr_73;
					}
					protoReader.AppendExtensionData(sCGetOrderId);
				}
				else
				{
					if (sCGetOrderId == null)
					{
						SCGetOrderId expr_49 = new SCGetOrderId();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCGetOrderId = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCGetOrderId.orderId = text;
					}
				}
			}
			else
			{
				if (sCGetOrderId == null)
				{
					SCGetOrderId expr_19 = new SCGetOrderId();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCGetOrderId = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCGetOrderId.id = id;
			}
		}
		if (sCGetOrderId == null)
		{
			SCGetOrderId expr_9C = new SCGetOrderId();
			ProtoReader.NoteObject(expr_9C, protoReader);
			sCGetOrderId = expr_9C;
		}
		return sCGetOrderId;
	}

	private static void Write(SCGM sCGM, ProtoWriter writer)
	{
		if (sCGM.GetType() != typeof(SCGM))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCGM), sCGM.GetType());
		}
		long expr_2D = sCGM.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = sCGM.data;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCGM, writer);
	}

	private static SCGM Read(SCGM sCGM, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCGM == null)
					{
						SCGM expr_73 = new SCGM();
						ProtoReader.NoteObject(expr_73, protoReader);
						sCGM = expr_73;
					}
					protoReader.AppendExtensionData(sCGM);
				}
				else
				{
					if (sCGM == null)
					{
						SCGM expr_49 = new SCGM();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCGM = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCGM.data = text;
					}
				}
			}
			else
			{
				if (sCGM == null)
				{
					SCGM expr_19 = new SCGM();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCGM = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCGM.id = id;
			}
		}
		if (sCGM == null)
		{
			SCGM expr_9C = new SCGM();
			ProtoReader.NoteObject(expr_9C, protoReader);
			sCGM = expr_9C;
		}
		return sCGM;
	}

	private static void Write(SCGoldIslandChanged sCGoldIslandChanged, ProtoWriter protoWriter)
	{
		if (sCGoldIslandChanged.GetType() != typeof(SCGoldIslandChanged))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCGoldIslandChanged), sCGoldIslandChanged.GetType());
		}
		long expr_2D = sCGoldIslandChanged.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCGoldIslandChanged.addedTakeTime;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCGoldIslandChanged, protoWriter);
	}

	private static SCGoldIslandChanged Read(SCGoldIslandChanged sCGoldIslandChanged, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCGoldIslandChanged == null)
					{
						SCGoldIslandChanged expr_A2 = new SCGoldIslandChanged();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCGoldIslandChanged = expr_A2;
					}
					protoReader.AppendExtensionData(sCGoldIslandChanged);
				}
				else
				{
					if (sCGoldIslandChanged == null)
					{
						SCGoldIslandChanged expr_49 = new SCGoldIslandChanged();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCGoldIslandChanged = expr_49;
					}
					List<KVStruct> list = sCGoldIslandChanged.addedTakeTime;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCGoldIslandChanged == null)
				{
					SCGoldIslandChanged expr_19 = new SCGoldIslandChanged();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCGoldIslandChanged = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCGoldIslandChanged.id = id;
			}
		}
		if (sCGoldIslandChanged == null)
		{
			SCGoldIslandChanged expr_CB = new SCGoldIslandChanged();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCGoldIslandChanged = expr_CB;
		}
		return sCGoldIslandChanged;
	}

	private static void Write(SCGrowableItemData sCGrowableItemData, ProtoWriter writer)
	{
		if (sCGrowableItemData.GetType() != typeof(SCGrowableItemData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCGrowableItemData), sCGrowableItemData.GetType());
		}
		long expr_2D = sCGrowableItemData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCGrowableItemData.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCGrowableItemData, writer);
	}

	private static SCGrowableItemData Read(SCGrowableItemData sCGrowableItemData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCGrowableItemData == null)
					{
						SCGrowableItemData expr_70 = new SCGrowableItemData();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCGrowableItemData = expr_70;
					}
					protoReader.AppendExtensionData(sCGrowableItemData);
				}
				else
				{
					if (sCGrowableItemData == null)
					{
						SCGrowableItemData expr_49 = new SCGrowableItemData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCGrowableItemData = expr_49;
					}
					int itemId = protoReader.ReadInt32();
					sCGrowableItemData.itemId = itemId;
				}
			}
			else
			{
				if (sCGrowableItemData == null)
				{
					SCGrowableItemData expr_19 = new SCGrowableItemData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCGrowableItemData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCGrowableItemData.id = id;
			}
		}
		if (sCGrowableItemData == null)
		{
			SCGrowableItemData expr_99 = new SCGrowableItemData();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCGrowableItemData = expr_99;
		}
		return sCGrowableItemData;
	}

	private static void Write(SCHeartbeat sCHeartbeat, ProtoWriter writer)
	{
		if (sCHeartbeat.GetType() != typeof(SCHeartbeat))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCHeartbeat), sCHeartbeat.GetType());
		}
		long expr_2D = sCHeartbeat.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(sCHeartbeat, writer);
	}

	private static SCHeartbeat Read(SCHeartbeat sCHeartbeat, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (sCHeartbeat == null)
				{
					SCHeartbeat expr_40 = new SCHeartbeat();
					ProtoReader.NoteObject(expr_40, protoReader);
					sCHeartbeat = expr_40;
				}
				protoReader.AppendExtensionData(sCHeartbeat);
			}
			else
			{
				if (sCHeartbeat == null)
				{
					SCHeartbeat expr_19 = new SCHeartbeat();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCHeartbeat = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCHeartbeat.id = id;
			}
		}
		if (sCHeartbeat == null)
		{
			SCHeartbeat expr_69 = new SCHeartbeat();
			ProtoReader.NoteObject(expr_69, protoReader);
			sCHeartbeat = expr_69;
		}
		return sCHeartbeat;
	}

	private static void Write(SCIgnoreLegionApply sCIgnoreLegionApply, ProtoWriter writer)
	{
		if (sCIgnoreLegionApply.GetType() != typeof(SCIgnoreLegionApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCIgnoreLegionApply), sCIgnoreLegionApply.GetType());
		}
		long expr_2D = sCIgnoreLegionApply.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(sCIgnoreLegionApply, writer);
	}

	private static SCIgnoreLegionApply Read(SCIgnoreLegionApply sCIgnoreLegionApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (sCIgnoreLegionApply == null)
				{
					SCIgnoreLegionApply expr_40 = new SCIgnoreLegionApply();
					ProtoReader.NoteObject(expr_40, protoReader);
					sCIgnoreLegionApply = expr_40;
				}
				protoReader.AppendExtensionData(sCIgnoreLegionApply);
			}
			else
			{
				if (sCIgnoreLegionApply == null)
				{
					SCIgnoreLegionApply expr_19 = new SCIgnoreLegionApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCIgnoreLegionApply = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCIgnoreLegionApply.id = id;
			}
		}
		if (sCIgnoreLegionApply == null)
		{
			SCIgnoreLegionApply expr_69 = new SCIgnoreLegionApply();
			ProtoReader.NoteObject(expr_69, protoReader);
			sCIgnoreLegionApply = expr_69;
		}
		return sCIgnoreLegionApply;
	}

	private static void Write(SCIslandBeAttackedData sCIslandBeAttackedData, ProtoWriter writer)
	{
		if (sCIslandBeAttackedData.GetType() != typeof(SCIslandBeAttackedData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCIslandBeAttackedData), sCIslandBeAttackedData.GetType());
		}
		long expr_2D = sCIslandBeAttackedData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<long> expr_53 = sCIslandBeAttackedData.buildingId;
		if (expr_53 != null)
		{
			List<long> list = expr_53;
			foreach (long arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_79_0, writer);
			}
		}
		bool expr_A8 = sCIslandBeAttackedData.all;
		if (expr_A8)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_A8, writer);
		}
		ProtoWriter.AppendExtensionData(sCIslandBeAttackedData, writer);
	}

	private static SCIslandBeAttackedData Read(SCIslandBeAttackedData sCIslandBeAttackedData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCIslandBeAttackedData == null)
						{
							SCIslandBeAttackedData expr_FD = new SCIslandBeAttackedData();
							ProtoReader.NoteObject(expr_FD, protoReader);
							sCIslandBeAttackedData = expr_FD;
						}
						protoReader.AppendExtensionData(sCIslandBeAttackedData);
					}
					else
					{
						if (sCIslandBeAttackedData == null)
						{
							SCIslandBeAttackedData expr_D4 = new SCIslandBeAttackedData();
							ProtoReader.NoteObject(expr_D4, protoReader);
							sCIslandBeAttackedData = expr_D4;
						}
						bool all = protoReader.ReadBoolean();
						sCIslandBeAttackedData.all = all;
					}
				}
				else
				{
					if (sCIslandBeAttackedData == null)
					{
						SCIslandBeAttackedData expr_49 = new SCIslandBeAttackedData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCIslandBeAttackedData = expr_49;
					}
					List<long> list = sCIslandBeAttackedData.buildingId;
					if (list == null)
					{
						list = new List<long>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt64());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt64());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCIslandBeAttackedData == null)
				{
					SCIslandBeAttackedData expr_19 = new SCIslandBeAttackedData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCIslandBeAttackedData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCIslandBeAttackedData.id = id;
			}
		}
		if (sCIslandBeAttackedData == null)
		{
			SCIslandBeAttackedData expr_126 = new SCIslandBeAttackedData();
			ProtoReader.NoteObject(expr_126, protoReader);
			sCIslandBeAttackedData = expr_126;
		}
		return sCIslandBeAttackedData;
	}

	private static void Write(SCIslandData sCIslandData, ProtoWriter protoWriter)
	{
		if (sCIslandData.GetType() != typeof(SCIslandData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCIslandData), sCIslandData.GetType());
		}
		int expr_2D = sCIslandData.islandId;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		int expr_4A = sCIslandData.index;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_4A, protoWriter);
		}
		List<int> expr_67 = sCIslandData.cutTrees;
		if (expr_67 != null)
		{
			List<int> list = expr_67;
			foreach (int arg_8D_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
				ProtoWriter.WriteInt32(arg_8D_0, protoWriter);
			}
		}
		List<KVStruct> expr_BC = sCIslandData.CDEndTime;
		if (expr_BC != null)
		{
			List<KVStruct> list2 = expr_BC;
			foreach (KVStruct arg_E1_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_E1_0, protoWriter);
				ProtoMsgSerializer.Write(arg_E1_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_122 = sCIslandData.id;
		if (expr_122 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_122, protoWriter);
		}
		int expr_148 = sCIslandData.baseResId;
		if (expr_148 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_148, protoWriter);
		}
		int expr_165 = sCIslandData.terrainTypeId;
		if (expr_165 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_165, protoWriter);
		}
		List<SCPlayerBuilding> expr_182 = sCIslandData.playerBuildings;
		if (expr_182 != null)
		{
			List<SCPlayerBuilding> list3 = expr_182;
			foreach (SCPlayerBuilding arg_1AA_0 in list3)
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_1AA_0, protoWriter);
				ProtoMsgSerializer.Write(arg_1AA_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCGrowableItemData> expr_1EB = sCIslandData.growableItem;
		if (expr_1EB != null)
		{
			List<SCGrowableItemData> list4 = expr_1EB;
			foreach (SCGrowableItemData arg_214_0 in list4)
			{
				ProtoWriter.WriteFieldHeader(9, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_214_0, protoWriter);
				ProtoMsgSerializer.Write(arg_214_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCIslandOfficerData> expr_255 = sCIslandData.officers;
		if (expr_255 != null)
		{
			List<SCIslandOfficerData> list5 = expr_255;
			foreach (SCIslandOfficerData arg_27E_0 in list5)
			{
				ProtoWriter.WriteFieldHeader(10, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_27E_0, protoWriter);
				ProtoMsgSerializer.Write(arg_27E_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_2BF = sCIslandData.tech;
		if (expr_2BF != null)
		{
			List<KVStruct> list2 = expr_2BF;
			foreach (KVStruct arg_2E5_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(11, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_2E5_0, protoWriter);
				ProtoMsgSerializer.Write(arg_2E5_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_326 = sCIslandData.baseRes;
		if (expr_326 != null)
		{
			List<KVStruct> list2 = expr_326;
			foreach (KVStruct arg_34C_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(12, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_34C_0, protoWriter);
				ProtoMsgSerializer.Write(arg_34C_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_38D = sCIslandData.dropListId;
		if (expr_38D != 0)
		{
			ProtoWriter.WriteFieldHeader(14, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_38D, protoWriter);
		}
		int expr_3AB = sCIslandData.medal;
		if (expr_3AB != 0)
		{
			ProtoWriter.WriteFieldHeader(15, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_3AB, protoWriter);
		}
		List<KVStruct> expr_3C9 = sCIslandData.resources;
		if (expr_3C9 != null)
		{
			List<KVStruct> list2 = expr_3C9;
			foreach (KVStruct arg_3EF_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(16, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_3EF_0, protoWriter);
				ProtoMsgSerializer.Write(arg_3EF_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_430 = sCIslandData.ownerId;
		if (expr_430 != 0L)
		{
			ProtoWriter.WriteFieldHeader(17, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_430, protoWriter);
		}
		int expr_457 = sCIslandData.ownerLevel;
		if (expr_457 != 0)
		{
			ProtoWriter.WriteFieldHeader(18, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_457, protoWriter);
		}
		string expr_475 = sCIslandData.ownerName;
		if (expr_475 != null)
		{
			if (!(expr_475 == ""))
			{
				ProtoWriter.WriteFieldHeader(19, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_475, protoWriter);
			}
		}
		List<KVStruct> expr_4A6 = sCIslandData.removeCdTime;
		if (expr_4A6 != null)
		{
			List<KVStruct> list2 = expr_4A6;
			foreach (KVStruct arg_4CC_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(20, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_4CC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_4CC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCArmyData> expr_50D = sCIslandData.targetArmy;
		if (expr_50D != null)
		{
			List<SCArmyData> list6 = expr_50D;
			foreach (SCArmyData arg_536_0 in list6)
			{
				ProtoWriter.WriteFieldHeader(21, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_536_0, protoWriter);
				ProtoMsgSerializer.Write(arg_536_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_577 = sCIslandData.armyCDTime;
		if (expr_577 != null)
		{
			List<KVStruct> list2 = expr_577;
			foreach (KVStruct arg_59D_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(22, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_59D_0, protoWriter);
				ProtoMsgSerializer.Write(arg_59D_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCConfigureArmyData> expr_5DE = sCIslandData.targetConfArmys;
		if (expr_5DE != null)
		{
			List<SCConfigureArmyData> list7 = expr_5DE;
			foreach (SCConfigureArmyData arg_607_0 in list7)
			{
				ProtoWriter.WriteFieldHeader(23, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_607_0, protoWriter);
				ProtoMsgSerializer.Write(arg_607_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCExtraArmy> expr_648 = sCIslandData.extraArmyData;
		if (expr_648 != null)
		{
			List<SCExtraArmy> list8 = expr_648;
			foreach (SCExtraArmy arg_671_0 in list8)
			{
				ProtoWriter.WriteFieldHeader(24, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_671_0, protoWriter);
				ProtoMsgSerializer.Write(arg_671_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_6B2 = sCIslandData.dropItems;
		if (expr_6B2 != null)
		{
			List<KVStruct> list2 = expr_6B2;
			foreach (KVStruct arg_6D8_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(25, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_6D8_0, protoWriter);
				ProtoMsgSerializer.Write(arg_6D8_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCIslandData, protoWriter);
	}

	private static SCIslandData Read(SCIslandData sCIslandData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 10)
												{
													if (num != 11)
													{
														if (num != 12)
														{
															if (num != 14)
															{
																if (num != 15)
																{
																	if (num != 16)
																	{
																		if (num != 17)
																		{
																			if (num != 18)
																			{
																				if (num != 19)
																				{
																					if (num != 20)
																					{
																						if (num != 21)
																						{
																							if (num != 22)
																							{
																								if (num != 23)
																								{
																									if (num != 24)
																									{
																										if (num != 25)
																										{
																											if (sCIslandData == null)
																											{
																												SCIslandData expr_7A7 = new SCIslandData();
																												ProtoReader.NoteObject(expr_7A7, protoReader);
																												sCIslandData = expr_7A7;
																											}
																											protoReader.AppendExtensionData(sCIslandData);
																										}
																										else
																										{
																											if (sCIslandData == null)
																											{
																												SCIslandData expr_74E = new SCIslandData();
																												ProtoReader.NoteObject(expr_74E, protoReader);
																												sCIslandData = expr_74E;
																											}
																											List<KVStruct> list = sCIslandData.dropItems;
																											if (list == null)
																											{
																												list = new List<KVStruct>();
																											}
																											int num2 = protoReader.FieldNumber;
																											do
																											{
																												List<KVStruct> arg_786_0 = list;
																												KVStruct arg_779_0 = null;
																												SubItemToken token = ProtoReader.StartSubItem(protoReader);
																												KVStruct arg_786_1 = ProtoMsgSerializer.Read(arg_779_0, protoReader);
																												ProtoReader.EndSubItem(token, protoReader);
																												arg_786_0.Add(arg_786_1);
																											}
																											while (protoReader.TryReadFieldHeader(num2));
																										}
																									}
																									else
																									{
																										if (sCIslandData == null)
																										{
																											SCIslandData expr_6E7 = new SCIslandData();
																											ProtoReader.NoteObject(expr_6E7, protoReader);
																											sCIslandData = expr_6E7;
																										}
																										List<SCExtraArmy> list2 = sCIslandData.extraArmyData;
																										if (list2 == null)
																										{
																											list2 = new List<SCExtraArmy>();
																										}
																										int num2 = protoReader.FieldNumber;
																										do
																										{
																											List<SCExtraArmy> arg_723_0 = list2;
																											SCExtraArmy arg_716_0 = null;
																											SubItemToken token = ProtoReader.StartSubItem(protoReader);
																											SCExtraArmy arg_723_1 = ProtoMsgSerializer.Read(arg_716_0, protoReader);
																											ProtoReader.EndSubItem(token, protoReader);
																											arg_723_0.Add(arg_723_1);
																										}
																										while (protoReader.TryReadFieldHeader(num2));
																									}
																								}
																								else
																								{
																									if (sCIslandData == null)
																									{
																										SCIslandData expr_680 = new SCIslandData();
																										ProtoReader.NoteObject(expr_680, protoReader);
																										sCIslandData = expr_680;
																									}
																									List<SCConfigureArmyData> list3 = sCIslandData.targetConfArmys;
																									if (list3 == null)
																									{
																										list3 = new List<SCConfigureArmyData>();
																									}
																									int num2 = protoReader.FieldNumber;
																									do
																									{
																										List<SCConfigureArmyData> arg_6BC_0 = list3;
																										SCConfigureArmyData arg_6AF_0 = null;
																										SubItemToken token = ProtoReader.StartSubItem(protoReader);
																										SCConfigureArmyData arg_6BC_1 = ProtoMsgSerializer.Read(arg_6AF_0, protoReader);
																										ProtoReader.EndSubItem(token, protoReader);
																										arg_6BC_0.Add(arg_6BC_1);
																									}
																									while (protoReader.TryReadFieldHeader(num2));
																								}
																							}
																							else
																							{
																								if (sCIslandData == null)
																								{
																									SCIslandData expr_61D = new SCIslandData();
																									ProtoReader.NoteObject(expr_61D, protoReader);
																									sCIslandData = expr_61D;
																								}
																								List<KVStruct> list = sCIslandData.armyCDTime;
																								if (list == null)
																								{
																									list = new List<KVStruct>();
																								}
																								int num2 = protoReader.FieldNumber;
																								do
																								{
																									List<KVStruct> arg_655_0 = list;
																									KVStruct arg_648_0 = null;
																									SubItemToken token = ProtoReader.StartSubItem(protoReader);
																									KVStruct arg_655_1 = ProtoMsgSerializer.Read(arg_648_0, protoReader);
																									ProtoReader.EndSubItem(token, protoReader);
																									arg_655_0.Add(arg_655_1);
																								}
																								while (protoReader.TryReadFieldHeader(num2));
																							}
																						}
																						else
																						{
																							if (sCIslandData == null)
																							{
																								SCIslandData expr_5B6 = new SCIslandData();
																								ProtoReader.NoteObject(expr_5B6, protoReader);
																								sCIslandData = expr_5B6;
																							}
																							List<SCArmyData> list4 = sCIslandData.targetArmy;
																							if (list4 == null)
																							{
																								list4 = new List<SCArmyData>();
																							}
																							int num2 = protoReader.FieldNumber;
																							do
																							{
																								List<SCArmyData> arg_5F2_0 = list4;
																								SCArmyData arg_5E5_0 = null;
																								SubItemToken token = ProtoReader.StartSubItem(protoReader);
																								SCArmyData arg_5F2_1 = ProtoMsgSerializer.Read(arg_5E5_0, protoReader);
																								ProtoReader.EndSubItem(token, protoReader);
																								arg_5F2_0.Add(arg_5F2_1);
																							}
																							while (protoReader.TryReadFieldHeader(num2));
																						}
																					}
																					else
																					{
																						if (sCIslandData == null)
																						{
																							SCIslandData expr_553 = new SCIslandData();
																							ProtoReader.NoteObject(expr_553, protoReader);
																							sCIslandData = expr_553;
																						}
																						List<KVStruct> list = sCIslandData.removeCdTime;
																						if (list == null)
																						{
																							list = new List<KVStruct>();
																						}
																						int num2 = protoReader.FieldNumber;
																						do
																						{
																							List<KVStruct> arg_58B_0 = list;
																							KVStruct arg_57E_0 = null;
																							SubItemToken token = ProtoReader.StartSubItem(protoReader);
																							KVStruct arg_58B_1 = ProtoMsgSerializer.Read(arg_57E_0, protoReader);
																							ProtoReader.EndSubItem(token, protoReader);
																							arg_58B_0.Add(arg_58B_1);
																						}
																						while (protoReader.TryReadFieldHeader(num2));
																					}
																				}
																				else
																				{
																					if (sCIslandData == null)
																					{
																						SCIslandData expr_51C = new SCIslandData();
																						ProtoReader.NoteObject(expr_51C, protoReader);
																						sCIslandData = expr_51C;
																					}
																					string text = protoReader.ReadString();
																					if (text != null)
																					{
																						sCIslandData.ownerName = text;
																					}
																				}
																			}
																			else
																			{
																				if (sCIslandData == null)
																				{
																					SCIslandData expr_4EB = new SCIslandData();
																					ProtoReader.NoteObject(expr_4EB, protoReader);
																					sCIslandData = expr_4EB;
																				}
																				int num2 = protoReader.ReadInt32();
																				sCIslandData.ownerLevel = num2;
																			}
																		}
																		else
																		{
																			if (sCIslandData == null)
																			{
																				SCIslandData expr_4B8 = new SCIslandData();
																				ProtoReader.NoteObject(expr_4B8, protoReader);
																				sCIslandData = expr_4B8;
																			}
																			long num3 = protoReader.ReadInt64();
																			sCIslandData.ownerId = num3;
																		}
																	}
																	else
																	{
																		if (sCIslandData == null)
																		{
																			SCIslandData expr_455 = new SCIslandData();
																			ProtoReader.NoteObject(expr_455, protoReader);
																			sCIslandData = expr_455;
																		}
																		List<KVStruct> list = sCIslandData.resources;
																		if (list == null)
																		{
																			list = new List<KVStruct>();
																		}
																		int num2 = protoReader.FieldNumber;
																		do
																		{
																			List<KVStruct> arg_48D_0 = list;
																			KVStruct arg_480_0 = null;
																			SubItemToken token = ProtoReader.StartSubItem(protoReader);
																			KVStruct arg_48D_1 = ProtoMsgSerializer.Read(arg_480_0, protoReader);
																			ProtoReader.EndSubItem(token, protoReader);
																			arg_48D_0.Add(arg_48D_1);
																		}
																		while (protoReader.TryReadFieldHeader(num2));
																	}
																}
																else
																{
																	if (sCIslandData == null)
																	{
																		SCIslandData expr_424 = new SCIslandData();
																		ProtoReader.NoteObject(expr_424, protoReader);
																		sCIslandData = expr_424;
																	}
																	int num2 = protoReader.ReadInt32();
																	sCIslandData.medal = num2;
																}
															}
															else
															{
																if (sCIslandData == null)
																{
																	SCIslandData expr_3F3 = new SCIslandData();
																	ProtoReader.NoteObject(expr_3F3, protoReader);
																	sCIslandData = expr_3F3;
																}
																int num2 = protoReader.ReadInt32();
																sCIslandData.dropListId = num2;
															}
														}
														else
														{
															if (sCIslandData == null)
															{
																SCIslandData expr_390 = new SCIslandData();
																ProtoReader.NoteObject(expr_390, protoReader);
																sCIslandData = expr_390;
															}
															List<KVStruct> list = sCIslandData.baseRes;
															if (list == null)
															{
																list = new List<KVStruct>();
															}
															int num2 = protoReader.FieldNumber;
															do
															{
																List<KVStruct> arg_3C8_0 = list;
																KVStruct arg_3BB_0 = null;
																SubItemToken token = ProtoReader.StartSubItem(protoReader);
																KVStruct arg_3C8_1 = ProtoMsgSerializer.Read(arg_3BB_0, protoReader);
																ProtoReader.EndSubItem(token, protoReader);
																arg_3C8_0.Add(arg_3C8_1);
															}
															while (protoReader.TryReadFieldHeader(num2));
														}
													}
													else
													{
														if (sCIslandData == null)
														{
															SCIslandData expr_32D = new SCIslandData();
															ProtoReader.NoteObject(expr_32D, protoReader);
															sCIslandData = expr_32D;
														}
														List<KVStruct> list = sCIslandData.tech;
														if (list == null)
														{
															list = new List<KVStruct>();
														}
														int num2 = protoReader.FieldNumber;
														do
														{
															List<KVStruct> arg_365_0 = list;
															KVStruct arg_358_0 = null;
															SubItemToken token = ProtoReader.StartSubItem(protoReader);
															KVStruct arg_365_1 = ProtoMsgSerializer.Read(arg_358_0, protoReader);
															ProtoReader.EndSubItem(token, protoReader);
															arg_365_0.Add(arg_365_1);
														}
														while (protoReader.TryReadFieldHeader(num2));
													}
												}
												else
												{
													if (sCIslandData == null)
													{
														SCIslandData expr_2C6 = new SCIslandData();
														ProtoReader.NoteObject(expr_2C6, protoReader);
														sCIslandData = expr_2C6;
													}
													List<SCIslandOfficerData> list5 = sCIslandData.officers;
													if (list5 == null)
													{
														list5 = new List<SCIslandOfficerData>();
													}
													int num2 = protoReader.FieldNumber;
													do
													{
														List<SCIslandOfficerData> arg_302_0 = list5;
														SCIslandOfficerData arg_2F5_0 = null;
														SubItemToken token = ProtoReader.StartSubItem(protoReader);
														SCIslandOfficerData arg_302_1 = ProtoMsgSerializer.Read(arg_2F5_0, protoReader);
														ProtoReader.EndSubItem(token, protoReader);
														arg_302_0.Add(arg_302_1);
													}
													while (protoReader.TryReadFieldHeader(num2));
												}
											}
											else
											{
												if (sCIslandData == null)
												{
													SCIslandData expr_25F = new SCIslandData();
													ProtoReader.NoteObject(expr_25F, protoReader);
													sCIslandData = expr_25F;
												}
												List<SCGrowableItemData> list6 = sCIslandData.growableItem;
												if (list6 == null)
												{
													list6 = new List<SCGrowableItemData>();
												}
												int num2 = protoReader.FieldNumber;
												do
												{
													List<SCGrowableItemData> arg_29B_0 = list6;
													SCGrowableItemData arg_28E_0 = null;
													SubItemToken token = ProtoReader.StartSubItem(protoReader);
													SCGrowableItemData arg_29B_1 = ProtoMsgSerializer.Read(arg_28E_0, protoReader);
													ProtoReader.EndSubItem(token, protoReader);
													arg_29B_0.Add(arg_29B_1);
												}
												while (protoReader.TryReadFieldHeader(num2));
											}
										}
										else
										{
											if (sCIslandData == null)
											{
												SCIslandData expr_1F8 = new SCIslandData();
												ProtoReader.NoteObject(expr_1F8, protoReader);
												sCIslandData = expr_1F8;
											}
											List<SCPlayerBuilding> list7 = sCIslandData.playerBuildings;
											if (list7 == null)
											{
												list7 = new List<SCPlayerBuilding>();
											}
											int num2 = protoReader.FieldNumber;
											do
											{
												List<SCPlayerBuilding> arg_234_0 = list7;
												SCPlayerBuilding arg_227_0 = null;
												SubItemToken token = ProtoReader.StartSubItem(protoReader);
												SCPlayerBuilding arg_234_1 = ProtoMsgSerializer.Read(arg_227_0, protoReader);
												ProtoReader.EndSubItem(token, protoReader);
												arg_234_0.Add(arg_234_1);
											}
											while (protoReader.TryReadFieldHeader(num2));
										}
									}
									else
									{
										if (sCIslandData == null)
										{
											SCIslandData expr_1C8 = new SCIslandData();
											ProtoReader.NoteObject(expr_1C8, protoReader);
											sCIslandData = expr_1C8;
										}
										int num2 = protoReader.ReadInt32();
										sCIslandData.terrainTypeId = num2;
									}
								}
								else
								{
									if (sCIslandData == null)
									{
										SCIslandData expr_198 = new SCIslandData();
										ProtoReader.NoteObject(expr_198, protoReader);
										sCIslandData = expr_198;
									}
									int num2 = protoReader.ReadInt32();
									sCIslandData.baseResId = num2;
								}
							}
							else
							{
								if (sCIslandData == null)
								{
									SCIslandData expr_166 = new SCIslandData();
									ProtoReader.NoteObject(expr_166, protoReader);
									sCIslandData = expr_166;
								}
								long num3 = protoReader.ReadInt64();
								sCIslandData.id = num3;
							}
						}
						else
						{
							if (sCIslandData == null)
							{
								SCIslandData expr_104 = new SCIslandData();
								ProtoReader.NoteObject(expr_104, protoReader);
								sCIslandData = expr_104;
							}
							List<KVStruct> list = sCIslandData.CDEndTime;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int num2 = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_13C_0 = list;
								KVStruct arg_12F_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_13C_1 = ProtoMsgSerializer.Read(arg_12F_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_13C_0.Add(arg_13C_1);
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
					}
					else
					{
						if (sCIslandData == null)
						{
							SCIslandData expr_79 = new SCIslandData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCIslandData = expr_79;
						}
						List<int> list8 = sCIslandData.cutTrees;
						if (list8 == null)
						{
							list8 = new List<int>();
						}
						if (protoReader.WireType != WireType.String)
						{
							int num2 = protoReader.FieldNumber;
							do
							{
								list8.Add(protoReader.ReadInt32());
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
						else
						{
							SubItemToken arg_E6_0 = ProtoReader.StartSubItem(protoReader);
							while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
							{
								list8.Add(protoReader.ReadInt32());
							}
							ProtoReader.EndSubItem(arg_E6_0, protoReader);
						}
					}
				}
				else
				{
					if (sCIslandData == null)
					{
						SCIslandData expr_49 = new SCIslandData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCIslandData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCIslandData.index = num2;
				}
			}
			else
			{
				if (sCIslandData == null)
				{
					SCIslandData expr_19 = new SCIslandData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCIslandData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				sCIslandData.islandId = num2;
			}
		}
		if (sCIslandData == null)
		{
			SCIslandData expr_7D0 = new SCIslandData();
			ProtoReader.NoteObject(expr_7D0, protoReader);
			sCIslandData = expr_7D0;
		}
		return sCIslandData;
	}

	private static void Write(SCIslandOfficerData sCIslandOfficerData, ProtoWriter writer)
	{
		if (sCIslandOfficerData.GetType() != typeof(SCIslandOfficerData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCIslandOfficerData), sCIslandOfficerData.GetType());
		}
		long expr_2D = sCIslandOfficerData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCIslandOfficerData.level;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		List<int> expr_70 = sCIslandOfficerData.equips;
		if (expr_70 != null)
		{
			List<int> list = expr_70;
			foreach (int arg_96_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_96_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCIslandOfficerData, writer);
	}

	private static SCIslandOfficerData Read(SCIslandOfficerData sCIslandOfficerData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCIslandOfficerData == null)
						{
							SCIslandOfficerData expr_FB = new SCIslandOfficerData();
							ProtoReader.NoteObject(expr_FB, protoReader);
							sCIslandOfficerData = expr_FB;
						}
						protoReader.AppendExtensionData(sCIslandOfficerData);
					}
					else
					{
						if (sCIslandOfficerData == null)
						{
							SCIslandOfficerData expr_79 = new SCIslandOfficerData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCIslandOfficerData = expr_79;
						}
						List<int> list = sCIslandOfficerData.equips;
						if (list == null)
						{
							list = new List<int>();
						}
						if (protoReader.WireType != WireType.String)
						{
							int num2 = protoReader.FieldNumber;
							do
							{
								list.Add(protoReader.ReadInt32());
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
						else
						{
							SubItemToken arg_E6_0 = ProtoReader.StartSubItem(protoReader);
							while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
							{
								list.Add(protoReader.ReadInt32());
							}
							ProtoReader.EndSubItem(arg_E6_0, protoReader);
						}
					}
				}
				else
				{
					if (sCIslandOfficerData == null)
					{
						SCIslandOfficerData expr_49 = new SCIslandOfficerData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCIslandOfficerData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCIslandOfficerData.level = num2;
				}
			}
			else
			{
				if (sCIslandOfficerData == null)
				{
					SCIslandOfficerData expr_19 = new SCIslandOfficerData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCIslandOfficerData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCIslandOfficerData.id = id;
			}
		}
		if (sCIslandOfficerData == null)
		{
			SCIslandOfficerData expr_124 = new SCIslandOfficerData();
			ProtoReader.NoteObject(expr_124, protoReader);
			sCIslandOfficerData = expr_124;
		}
		return sCIslandOfficerData;
	}

	private static void Write(SCLegionApply sCLegionApply, ProtoWriter writer)
	{
		if (sCLegionApply.GetType() != typeof(SCLegionApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCLegionApply), sCLegionApply.GetType());
		}
		long expr_2D = sCLegionApply.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCLegionApply.legionId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		long expr_79 = sCLegionApply.playerId;
		if (expr_79 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_79, writer);
		}
		int expr_9F = sCLegionApply.level;
		if (expr_9F != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_9F, writer);
		}
		string expr_BC = sCLegionApply.playerName;
		if (expr_BC != null)
		{
			if (!(expr_BC == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, writer);
				ProtoWriter.WriteString(expr_BC, writer);
			}
		}
		int expr_EC = sCLegionApply.medal;
		if (expr_EC != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_EC, writer);
		}
		ProtoWriter.AppendExtensionData(sCLegionApply, writer);
	}

	private static SCLegionApply Read(SCLegionApply sCLegionApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (sCLegionApply == null)
									{
										SCLegionApply expr_133 = new SCLegionApply();
										ProtoReader.NoteObject(expr_133, protoReader);
										sCLegionApply = expr_133;
									}
									protoReader.AppendExtensionData(sCLegionApply);
								}
								else
								{
									if (sCLegionApply == null)
									{
										SCLegionApply expr_10C = new SCLegionApply();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCLegionApply = expr_10C;
									}
									int num2 = protoReader.ReadInt32();
									sCLegionApply.medal = num2;
								}
							}
							else
							{
								if (sCLegionApply == null)
								{
									SCLegionApply expr_D9 = new SCLegionApply();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCLegionApply = expr_D9;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									sCLegionApply.playerName = text;
								}
							}
						}
						else
						{
							if (sCLegionApply == null)
							{
								SCLegionApply expr_A9 = new SCLegionApply();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCLegionApply = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCLegionApply.level = num2;
						}
					}
					else
					{
						if (sCLegionApply == null)
						{
							SCLegionApply expr_79 = new SCLegionApply();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCLegionApply = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCLegionApply.playerId = num3;
					}
				}
				else
				{
					if (sCLegionApply == null)
					{
						SCLegionApply expr_49 = new SCLegionApply();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCLegionApply = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					sCLegionApply.legionId = num3;
				}
			}
			else
			{
				if (sCLegionApply == null)
				{
					SCLegionApply expr_19 = new SCLegionApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCLegionApply = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCLegionApply.id = num3;
			}
		}
		if (sCLegionApply == null)
		{
			SCLegionApply expr_15C = new SCLegionApply();
			ProtoReader.NoteObject(expr_15C, protoReader);
			sCLegionApply = expr_15C;
		}
		return sCLegionApply;
	}

	private static void Write(SCLegionData sCLegionData, ProtoWriter writer)
	{
		if (sCLegionData.GetType() != typeof(SCLegionData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCLegionData), sCLegionData.GetType());
		}
		long expr_2D = sCLegionData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = sCLegionData.name;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		int expr_83 = sCLegionData.logo;
		if (expr_83 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_83, writer);
		}
		int expr_A0 = sCLegionData.needMinMedal;
		if (expr_A0 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_A0, writer);
		}
		int expr_BD = sCLegionData.openType;
		if (expr_BD != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_BD, writer);
		}
		int expr_DA = sCLegionData.level;
		if (expr_DA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_DA, writer);
		}
		int expr_F7 = sCLegionData.memberLimit;
		if (expr_F7 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_F7, writer);
		}
		int expr_114 = sCLegionData.exp;
		if (expr_114 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_114, writer);
		}
		int expr_131 = sCLegionData.rank;
		if (expr_131 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_131, writer);
		}
		int expr_14F = sCLegionData.medal;
		if (expr_14F != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_14F, writer);
		}
		int expr_16D = sCLegionData.memberCount;
		if (expr_16D != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_16D, writer);
		}
		string expr_18B = sCLegionData.notice;
		if (expr_18B != null)
		{
			if (!(expr_18B == ""))
			{
				ProtoWriter.WriteFieldHeader(12, WireType.String, writer);
				ProtoWriter.WriteString(expr_18B, writer);
			}
		}
		long expr_1BC = sCLegionData.legionId;
		if (expr_1BC != 0L)
		{
			ProtoWriter.WriteFieldHeader(13, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_1BC, writer);
		}
		ProtoWriter.AppendExtensionData(sCLegionData, writer);
	}

	private static SCLegionData Read(SCLegionData sCLegionData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 10)
												{
													if (num != 11)
													{
														if (num != 12)
														{
															if (num != 13)
															{
																if (sCLegionData == null)
																{
																	SCLegionData expr_28B = new SCLegionData();
																	ProtoReader.NoteObject(expr_28B, protoReader);
																	sCLegionData = expr_28B;
																}
																protoReader.AppendExtensionData(sCLegionData);
															}
															else
															{
																if (sCLegionData == null)
																{
																	SCLegionData expr_264 = new SCLegionData();
																	ProtoReader.NoteObject(expr_264, protoReader);
																	sCLegionData = expr_264;
																}
																long num2 = protoReader.ReadInt64();
																sCLegionData.legionId = num2;
															}
														}
														else
														{
															if (sCLegionData == null)
															{
																SCLegionData expr_230 = new SCLegionData();
																ProtoReader.NoteObject(expr_230, protoReader);
																sCLegionData = expr_230;
															}
															string text = protoReader.ReadString();
															if (text != null)
															{
																sCLegionData.notice = text;
															}
														}
													}
													else
													{
														if (sCLegionData == null)
														{
															SCLegionData expr_1FF = new SCLegionData();
															ProtoReader.NoteObject(expr_1FF, protoReader);
															sCLegionData = expr_1FF;
														}
														int num3 = protoReader.ReadInt32();
														sCLegionData.memberCount = num3;
													}
												}
												else
												{
													if (sCLegionData == null)
													{
														SCLegionData expr_1CE = new SCLegionData();
														ProtoReader.NoteObject(expr_1CE, protoReader);
														sCLegionData = expr_1CE;
													}
													int num3 = protoReader.ReadInt32();
													sCLegionData.medal = num3;
												}
											}
											else
											{
												if (sCLegionData == null)
												{
													SCLegionData expr_19D = new SCLegionData();
													ProtoReader.NoteObject(expr_19D, protoReader);
													sCLegionData = expr_19D;
												}
												int num3 = protoReader.ReadInt32();
												sCLegionData.rank = num3;
											}
										}
										else
										{
											if (sCLegionData == null)
											{
												SCLegionData expr_16C = new SCLegionData();
												ProtoReader.NoteObject(expr_16C, protoReader);
												sCLegionData = expr_16C;
											}
											int num3 = protoReader.ReadInt32();
											sCLegionData.exp = num3;
										}
									}
									else
									{
										if (sCLegionData == null)
										{
											SCLegionData expr_13C = new SCLegionData();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCLegionData = expr_13C;
										}
										int num3 = protoReader.ReadInt32();
										sCLegionData.memberLimit = num3;
									}
								}
								else
								{
									if (sCLegionData == null)
									{
										SCLegionData expr_10C = new SCLegionData();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCLegionData = expr_10C;
									}
									int num3 = protoReader.ReadInt32();
									sCLegionData.level = num3;
								}
							}
							else
							{
								if (sCLegionData == null)
								{
									SCLegionData expr_DC = new SCLegionData();
									ProtoReader.NoteObject(expr_DC, protoReader);
									sCLegionData = expr_DC;
								}
								int num3 = protoReader.ReadInt32();
								sCLegionData.openType = num3;
							}
						}
						else
						{
							if (sCLegionData == null)
							{
								SCLegionData expr_AC = new SCLegionData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCLegionData = expr_AC;
							}
							int num3 = protoReader.ReadInt32();
							sCLegionData.needMinMedal = num3;
						}
					}
					else
					{
						if (sCLegionData == null)
						{
							SCLegionData expr_7C = new SCLegionData();
							ProtoReader.NoteObject(expr_7C, protoReader);
							sCLegionData = expr_7C;
						}
						int num3 = protoReader.ReadInt32();
						sCLegionData.logo = num3;
					}
				}
				else
				{
					if (sCLegionData == null)
					{
						SCLegionData expr_49 = new SCLegionData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCLegionData = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCLegionData.name = text;
					}
				}
			}
			else
			{
				if (sCLegionData == null)
				{
					SCLegionData expr_19 = new SCLegionData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCLegionData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCLegionData.id = num2;
			}
		}
		if (sCLegionData == null)
		{
			SCLegionData expr_2B4 = new SCLegionData();
			ProtoReader.NoteObject(expr_2B4, protoReader);
			sCLegionData = expr_2B4;
		}
		return sCLegionData;
	}

	private static void Write(SCLegionHelpApply sCLegionHelpApply, ProtoWriter writer)
	{
		if (sCLegionHelpApply.GetType() != typeof(SCLegionHelpApply))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCLegionHelpApply), sCLegionHelpApply.GetType());
		}
		long expr_2D = sCLegionHelpApply.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCLegionHelpApply.time;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		long expr_79 = sCLegionHelpApply.cdTime;
		if (expr_79 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_79, writer);
		}
		long expr_9F = sCLegionHelpApply.userId;
		if (expr_9F != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_9F, writer);
		}
		long expr_C5 = sCLegionHelpApply.buildingId;
		if (expr_C5 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_C5, writer);
		}
		string expr_EB = sCLegionHelpApply.userName;
		if (expr_EB != null)
		{
			if (!(expr_EB == ""))
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, writer);
				ProtoWriter.WriteString(expr_EB, writer);
			}
		}
		int expr_11B = sCLegionHelpApply.buildingIndex;
		if (expr_11B != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_11B, writer);
		}
		List<long> expr_138 = sCLegionHelpApply.helpers;
		if (expr_138 != null)
		{
			List<long> list = expr_138;
			foreach (long arg_15E_0 in list)
			{
				ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_15E_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCLegionHelpApply, writer);
	}

	private static SCLegionHelpApply Read(SCLegionHelpApply sCLegionHelpApply, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (sCLegionHelpApply == null)
											{
												SCLegionHelpApply expr_1F3 = new SCLegionHelpApply();
												ProtoReader.NoteObject(expr_1F3, protoReader);
												sCLegionHelpApply = expr_1F3;
											}
											protoReader.AppendExtensionData(sCLegionHelpApply);
										}
										else
										{
											if (sCLegionHelpApply == null)
											{
												SCLegionHelpApply expr_16C = new SCLegionHelpApply();
												ProtoReader.NoteObject(expr_16C, protoReader);
												sCLegionHelpApply = expr_16C;
											}
											List<long> list = sCLegionHelpApply.helpers;
											if (list == null)
											{
												list = new List<long>();
											}
											if (protoReader.WireType != WireType.String)
											{
												int num2 = protoReader.FieldNumber;
												do
												{
													list.Add(protoReader.ReadInt64());
												}
												while (protoReader.TryReadFieldHeader(num2));
											}
											else
											{
												SubItemToken arg_1DE_0 = ProtoReader.StartSubItem(protoReader);
												while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
												{
													list.Add(protoReader.ReadInt64());
												}
												ProtoReader.EndSubItem(arg_1DE_0, protoReader);
											}
										}
									}
									else
									{
										if (sCLegionHelpApply == null)
										{
											SCLegionHelpApply expr_13C = new SCLegionHelpApply();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCLegionHelpApply = expr_13C;
										}
										int num2 = protoReader.ReadInt32();
										sCLegionHelpApply.buildingIndex = num2;
									}
								}
								else
								{
									if (sCLegionHelpApply == null)
									{
										SCLegionHelpApply expr_109 = new SCLegionHelpApply();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCLegionHelpApply = expr_109;
									}
									string text = protoReader.ReadString();
									if (text != null)
									{
										sCLegionHelpApply.userName = text;
									}
								}
							}
							else
							{
								if (sCLegionHelpApply == null)
								{
									SCLegionHelpApply expr_D9 = new SCLegionHelpApply();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCLegionHelpApply = expr_D9;
								}
								long num3 = protoReader.ReadInt64();
								sCLegionHelpApply.buildingId = num3;
							}
						}
						else
						{
							if (sCLegionHelpApply == null)
							{
								SCLegionHelpApply expr_A9 = new SCLegionHelpApply();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCLegionHelpApply = expr_A9;
							}
							long num3 = protoReader.ReadInt64();
							sCLegionHelpApply.userId = num3;
						}
					}
					else
					{
						if (sCLegionHelpApply == null)
						{
							SCLegionHelpApply expr_79 = new SCLegionHelpApply();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCLegionHelpApply = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCLegionHelpApply.cdTime = num3;
					}
				}
				else
				{
					if (sCLegionHelpApply == null)
					{
						SCLegionHelpApply expr_49 = new SCLegionHelpApply();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCLegionHelpApply = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					sCLegionHelpApply.time = num3;
				}
			}
			else
			{
				if (sCLegionHelpApply == null)
				{
					SCLegionHelpApply expr_19 = new SCLegionHelpApply();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCLegionHelpApply = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCLegionHelpApply.id = num3;
			}
		}
		if (sCLegionHelpApply == null)
		{
			SCLegionHelpApply expr_21C = new SCLegionHelpApply();
			ProtoReader.NoteObject(expr_21C, protoReader);
			sCLegionHelpApply = expr_21C;
		}
		return sCLegionHelpApply;
	}

	private static void Write(SCLegionMember sCLegionMember, ProtoWriter writer)
	{
		if (sCLegionMember.GetType() != typeof(SCLegionMember))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCLegionMember), sCLegionMember.GetType());
		}
		long expr_2D = sCLegionMember.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCLegionMember.level;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		string expr_70 = sCLegionMember.name;
		if (expr_70 != null)
		{
			if (!(expr_70 == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_70, writer);
			}
		}
		int expr_A0 = sCLegionMember.job;
		if (expr_A0 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_A0, writer);
		}
		int expr_BD = sCLegionMember.contribution;
		if (expr_BD != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_BD, writer);
		}
		int expr_DA = sCLegionMember.medal;
		if (expr_DA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_DA, writer);
		}
		long expr_F7 = sCLegionMember.legionId;
		if (expr_F7 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_F7, writer);
		}
		ProtoWriter.AppendExtensionData(sCLegionMember, writer);
	}

	private static SCLegionMember Read(SCLegionMember sCLegionMember, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (sCLegionMember == null)
										{
											SCLegionMember expr_163 = new SCLegionMember();
											ProtoReader.NoteObject(expr_163, protoReader);
											sCLegionMember = expr_163;
										}
										protoReader.AppendExtensionData(sCLegionMember);
									}
									else
									{
										if (sCLegionMember == null)
										{
											SCLegionMember expr_13C = new SCLegionMember();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCLegionMember = expr_13C;
										}
										long num2 = protoReader.ReadInt64();
										sCLegionMember.legionId = num2;
									}
								}
								else
								{
									if (sCLegionMember == null)
									{
										SCLegionMember expr_10C = new SCLegionMember();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCLegionMember = expr_10C;
									}
									int num3 = protoReader.ReadInt32();
									sCLegionMember.medal = num3;
								}
							}
							else
							{
								if (sCLegionMember == null)
								{
									SCLegionMember expr_DC = new SCLegionMember();
									ProtoReader.NoteObject(expr_DC, protoReader);
									sCLegionMember = expr_DC;
								}
								int num3 = protoReader.ReadInt32();
								sCLegionMember.contribution = num3;
							}
						}
						else
						{
							if (sCLegionMember == null)
							{
								SCLegionMember expr_AC = new SCLegionMember();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCLegionMember = expr_AC;
							}
							int num3 = protoReader.ReadInt32();
							sCLegionMember.job = num3;
						}
					}
					else
					{
						if (sCLegionMember == null)
						{
							SCLegionMember expr_79 = new SCLegionMember();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCLegionMember = expr_79;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							sCLegionMember.name = text;
						}
					}
				}
				else
				{
					if (sCLegionMember == null)
					{
						SCLegionMember expr_49 = new SCLegionMember();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCLegionMember = expr_49;
					}
					int num3 = protoReader.ReadInt32();
					sCLegionMember.level = num3;
				}
			}
			else
			{
				if (sCLegionMember == null)
				{
					SCLegionMember expr_19 = new SCLegionMember();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCLegionMember = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCLegionMember.id = num2;
			}
		}
		if (sCLegionMember == null)
		{
			SCLegionMember expr_18C = new SCLegionMember();
			ProtoReader.NoteObject(expr_18C, protoReader);
			sCLegionMember = expr_18C;
		}
		return sCLegionMember;
	}

	private static void Write(SCLegionPVE sCLegionPVE, ProtoWriter writer)
	{
		if (sCLegionPVE.GetType() != typeof(SCLegionPVE))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCLegionPVE), sCLegionPVE.GetType());
		}
		long expr_2D = sCLegionPVE.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCLegionPVE.curBattleId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCLegionPVE.times;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		long expr_8D = sCLegionPVE.flushTimes;
		if (expr_8D != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_8D, writer);
		}
		ProtoWriter.AppendExtensionData(sCLegionPVE, writer);
	}

	private static SCLegionPVE Read(SCLegionPVE sCLegionPVE, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCLegionPVE == null)
							{
								SCLegionPVE expr_D0 = new SCLegionPVE();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCLegionPVE = expr_D0;
							}
							protoReader.AppendExtensionData(sCLegionPVE);
						}
						else
						{
							if (sCLegionPVE == null)
							{
								SCLegionPVE expr_A9 = new SCLegionPVE();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCLegionPVE = expr_A9;
							}
							long num2 = protoReader.ReadInt64();
							sCLegionPVE.flushTimes = num2;
						}
					}
					else
					{
						if (sCLegionPVE == null)
						{
							SCLegionPVE expr_79 = new SCLegionPVE();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCLegionPVE = expr_79;
						}
						int num3 = protoReader.ReadInt32();
						sCLegionPVE.times = num3;
					}
				}
				else
				{
					if (sCLegionPVE == null)
					{
						SCLegionPVE expr_49 = new SCLegionPVE();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCLegionPVE = expr_49;
					}
					int num3 = protoReader.ReadInt32();
					sCLegionPVE.curBattleId = num3;
				}
			}
			else
			{
				if (sCLegionPVE == null)
				{
					SCLegionPVE expr_19 = new SCLegionPVE();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCLegionPVE = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCLegionPVE.id = num2;
			}
		}
		if (sCLegionPVE == null)
		{
			SCLegionPVE expr_F9 = new SCLegionPVE();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCLegionPVE = expr_F9;
		}
		return sCLegionPVE;
	}

	private static void Write(SCLotteryPrize sCLotteryPrize, ProtoWriter writer)
	{
		if (sCLotteryPrize.GetType() != typeof(SCLotteryPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCLotteryPrize), sCLotteryPrize.GetType());
		}
		long expr_2D = sCLotteryPrize.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<int> expr_53 = sCLotteryPrize.prizeList;
		if (expr_53 != null)
		{
			List<int> list = expr_53;
			foreach (int arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_79_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCLotteryPrize, writer);
	}

	private static SCLotteryPrize Read(SCLotteryPrize sCLotteryPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCLotteryPrize == null)
					{
						SCLotteryPrize expr_CB = new SCLotteryPrize();
						ProtoReader.NoteObject(expr_CB, protoReader);
						sCLotteryPrize = expr_CB;
					}
					protoReader.AppendExtensionData(sCLotteryPrize);
				}
				else
				{
					if (sCLotteryPrize == null)
					{
						SCLotteryPrize expr_49 = new SCLotteryPrize();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCLotteryPrize = expr_49;
					}
					List<int> list = sCLotteryPrize.prizeList;
					if (list == null)
					{
						list = new List<int>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt32());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt32());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCLotteryPrize == null)
				{
					SCLotteryPrize expr_19 = new SCLotteryPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCLotteryPrize = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCLotteryPrize.id = id;
			}
		}
		if (sCLotteryPrize == null)
		{
			SCLotteryPrize expr_F4 = new SCLotteryPrize();
			ProtoReader.NoteObject(expr_F4, protoReader);
			sCLotteryPrize = expr_F4;
		}
		return sCLotteryPrize;
	}

	private static void Write(SCMapEntity sCMapEntity, ProtoWriter protoWriter)
	{
		if (sCMapEntity.GetType() != typeof(SCMapEntity))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCMapEntity), sCMapEntity.GetType());
		}
		long expr_2D = sCMapEntity.islandId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		int expr_53 = sCMapEntity.index;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_53, protoWriter);
		}
		int expr_70 = sCMapEntity.ownerType;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_70, protoWriter);
		}
		long expr_8D = sCMapEntity.ownerId;
		if (expr_8D != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_8D, protoWriter);
		}
		string expr_B3 = sCMapEntity.ownerName;
		if (expr_B3 != null)
		{
			if (!(expr_B3 == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_B3, protoWriter);
			}
		}
		int expr_E3 = sCMapEntity.ownerLevel;
		if (expr_E3 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_E3, protoWriter);
		}
		bool expr_100 = sCMapEntity.refresh;
		if (expr_100)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_100, protoWriter);
		}
		List<SCPlayerResource> expr_11D = sCMapEntity.res;
		if (expr_11D != null)
		{
			List<SCPlayerResource> list = expr_11D;
			foreach (SCPlayerResource arg_142_0 in list)
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_142_0, protoWriter);
				ProtoMsgSerializer.Write(arg_142_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_181 = sCMapEntity.id;
		if (expr_181 != 0L)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_181, protoWriter);
		}
		int expr_1A8 = sCMapEntity.commondLevel;
		if (expr_1A8 != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1A8, protoWriter);
		}
		long expr_1C6 = sCMapEntity.worldMapId;
		if (expr_1C6 != 0L)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_1C6, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCMapEntity, protoWriter);
	}

	private static SCMapEntity Read(SCMapEntity sCMapEntity, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 11)
												{
													if (num != 12)
													{
														if (sCMapEntity == null)
														{
															SCMapEntity expr_25E = new SCMapEntity();
															ProtoReader.NoteObject(expr_25E, protoReader);
															sCMapEntity = expr_25E;
														}
														protoReader.AppendExtensionData(sCMapEntity);
													}
													else
													{
														if (sCMapEntity == null)
														{
															SCMapEntity expr_237 = new SCMapEntity();
															ProtoReader.NoteObject(expr_237, protoReader);
															sCMapEntity = expr_237;
														}
														long num2 = protoReader.ReadInt64();
														sCMapEntity.worldMapId = num2;
													}
												}
												else
												{
													if (sCMapEntity == null)
													{
														SCMapEntity expr_206 = new SCMapEntity();
														ProtoReader.NoteObject(expr_206, protoReader);
														sCMapEntity = expr_206;
													}
													int num3 = protoReader.ReadInt32();
													sCMapEntity.commondLevel = num3;
												}
											}
											else
											{
												if (sCMapEntity == null)
												{
													SCMapEntity expr_1D5 = new SCMapEntity();
													ProtoReader.NoteObject(expr_1D5, protoReader);
													sCMapEntity = expr_1D5;
												}
												long num2 = protoReader.ReadInt64();
												sCMapEntity.id = num2;
											}
										}
										else
										{
											if (sCMapEntity == null)
											{
												SCMapEntity expr_16E = new SCMapEntity();
												ProtoReader.NoteObject(expr_16E, protoReader);
												sCMapEntity = expr_16E;
											}
											List<SCPlayerResource> list = sCMapEntity.res;
											if (list == null)
											{
												list = new List<SCPlayerResource>();
											}
											int num3 = protoReader.FieldNumber;
											do
											{
												List<SCPlayerResource> arg_1AA_0 = list;
												SCPlayerResource arg_19D_0 = null;
												SubItemToken token = ProtoReader.StartSubItem(protoReader);
												SCPlayerResource arg_1AA_1 = ProtoMsgSerializer.Read(arg_19D_0, protoReader);
												ProtoReader.EndSubItem(token, protoReader);
												arg_1AA_0.Add(arg_1AA_1);
											}
											while (protoReader.TryReadFieldHeader(num3));
										}
									}
									else
									{
										if (sCMapEntity == null)
										{
											SCMapEntity expr_13C = new SCMapEntity();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCMapEntity = expr_13C;
										}
										bool refresh = protoReader.ReadBoolean();
										sCMapEntity.refresh = refresh;
									}
								}
								else
								{
									if (sCMapEntity == null)
									{
										SCMapEntity expr_10C = new SCMapEntity();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCMapEntity = expr_10C;
									}
									int num3 = protoReader.ReadInt32();
									sCMapEntity.ownerLevel = num3;
								}
							}
							else
							{
								if (sCMapEntity == null)
								{
									SCMapEntity expr_D9 = new SCMapEntity();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCMapEntity = expr_D9;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									sCMapEntity.ownerName = text;
								}
							}
						}
						else
						{
							if (sCMapEntity == null)
							{
								SCMapEntity expr_A9 = new SCMapEntity();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCMapEntity = expr_A9;
							}
							long num2 = protoReader.ReadInt64();
							sCMapEntity.ownerId = num2;
						}
					}
					else
					{
						if (sCMapEntity == null)
						{
							SCMapEntity expr_79 = new SCMapEntity();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCMapEntity = expr_79;
						}
						int num3 = protoReader.ReadInt32();
						sCMapEntity.ownerType = num3;
					}
				}
				else
				{
					if (sCMapEntity == null)
					{
						SCMapEntity expr_49 = new SCMapEntity();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCMapEntity = expr_49;
					}
					int num3 = protoReader.ReadInt32();
					sCMapEntity.index = num3;
				}
			}
			else
			{
				if (sCMapEntity == null)
				{
					SCMapEntity expr_19 = new SCMapEntity();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCMapEntity = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCMapEntity.islandId = num2;
			}
		}
		if (sCMapEntity == null)
		{
			SCMapEntity expr_287 = new SCMapEntity();
			ProtoReader.NoteObject(expr_287, protoReader);
			sCMapEntity = expr_287;
		}
		return sCMapEntity;
	}

	private static void Write(SCMapIndexNotice sCMapIndexNotice, ProtoWriter protoWriter)
	{
		if (sCMapIndexNotice.GetType() != typeof(SCMapIndexNotice))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCMapIndexNotice), sCMapIndexNotice.GetType());
		}
		long expr_2D = sCMapIndexNotice.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCMapIndexNotice.index;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		bool expr_B7 = sCMapIndexNotice.tips;
		if (expr_B7)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_B7, protoWriter);
		}
		long expr_D4 = sCMapIndexNotice.worldMapId;
		if (expr_D4 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_D4, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCMapIndexNotice, protoWriter);
	}

	private static SCMapIndexNotice Read(SCMapIndexNotice sCMapIndexNotice, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCMapIndexNotice == null)
							{
								SCMapIndexNotice expr_104 = new SCMapIndexNotice();
								ProtoReader.NoteObject(expr_104, protoReader);
								sCMapIndexNotice = expr_104;
							}
							protoReader.AppendExtensionData(sCMapIndexNotice);
						}
						else
						{
							if (sCMapIndexNotice == null)
							{
								SCMapIndexNotice expr_DD = new SCMapIndexNotice();
								ProtoReader.NoteObject(expr_DD, protoReader);
								sCMapIndexNotice = expr_DD;
							}
							long num2 = protoReader.ReadInt64();
							sCMapIndexNotice.worldMapId = num2;
						}
					}
					else
					{
						if (sCMapIndexNotice == null)
						{
							SCMapIndexNotice expr_AB = new SCMapIndexNotice();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCMapIndexNotice = expr_AB;
						}
						bool tips = protoReader.ReadBoolean();
						sCMapIndexNotice.tips = tips;
					}
				}
				else
				{
					if (sCMapIndexNotice == null)
					{
						SCMapIndexNotice expr_49 = new SCMapIndexNotice();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCMapIndexNotice = expr_49;
					}
					List<KVStruct> list = sCMapIndexNotice.index;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCMapIndexNotice == null)
				{
					SCMapIndexNotice expr_19 = new SCMapIndexNotice();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCMapIndexNotice = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCMapIndexNotice.id = num2;
			}
		}
		if (sCMapIndexNotice == null)
		{
			SCMapIndexNotice expr_12D = new SCMapIndexNotice();
			ProtoReader.NoteObject(expr_12D, protoReader);
			sCMapIndexNotice = expr_12D;
		}
		return sCMapIndexNotice;
	}

	private static void Write(SCMonitorData sCMonitorData, ProtoWriter writer)
	{
		if (sCMonitorData.GetType() != typeof(SCMonitorData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCMonitorData), sCMonitorData.GetType());
		}
		long expr_2D = sCMonitorData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCMonitorData.serverId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCMonitorData.areaId;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		string expr_8D = sCMonitorData.data;
		if (expr_8D != null)
		{
			if (!(expr_8D == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, writer);
				ProtoWriter.WriteString(expr_8D, writer);
			}
		}
		string expr_BD = sCMonitorData.uniqueId;
		if (expr_BD != null)
		{
			if (!(expr_BD == ""))
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, writer);
				ProtoWriter.WriteString(expr_BD, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCMonitorData, writer);
	}

	private static SCMonitorData Read(SCMonitorData sCMonitorData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (sCMonitorData == null)
								{
									SCMonitorData expr_106 = new SCMonitorData();
									ProtoReader.NoteObject(expr_106, protoReader);
									sCMonitorData = expr_106;
								}
								protoReader.AppendExtensionData(sCMonitorData);
							}
							else
							{
								if (sCMonitorData == null)
								{
									SCMonitorData expr_DC = new SCMonitorData();
									ProtoReader.NoteObject(expr_DC, protoReader);
									sCMonitorData = expr_DC;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									sCMonitorData.uniqueId = text;
								}
							}
						}
						else
						{
							if (sCMonitorData == null)
							{
								SCMonitorData expr_A9 = new SCMonitorData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCMonitorData = expr_A9;
							}
							string text = protoReader.ReadString();
							if (text != null)
							{
								sCMonitorData.data = text;
							}
						}
					}
					else
					{
						if (sCMonitorData == null)
						{
							SCMonitorData expr_79 = new SCMonitorData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCMonitorData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCMonitorData.areaId = num2;
					}
				}
				else
				{
					if (sCMonitorData == null)
					{
						SCMonitorData expr_49 = new SCMonitorData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCMonitorData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCMonitorData.serverId = num2;
				}
			}
			else
			{
				if (sCMonitorData == null)
				{
					SCMonitorData expr_19 = new SCMonitorData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCMonitorData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCMonitorData.id = id;
			}
		}
		if (sCMonitorData == null)
		{
			SCMonitorData expr_12F = new SCMonitorData();
			ProtoReader.NoteObject(expr_12F, protoReader);
			sCMonitorData = expr_12F;
		}
		return sCMonitorData;
	}

	private static void Write(SCNoticeList sCNoticeList, ProtoWriter protoWriter)
	{
		if (sCNoticeList.GetType() != typeof(SCNoticeList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCNoticeList), sCNoticeList.GetType());
		}
		List<NoticeData> expr_2D = sCNoticeList.data;
		if (expr_2D != null)
		{
			List<NoticeData> list = expr_2D;
			foreach (NoticeData arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_91 = sCNoticeList.id;
		if (expr_91 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_91, protoWriter);
		}
		int expr_B7 = sCNoticeList.hasNew;
		if (expr_B7 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_B7, protoWriter);
		}
		List<long> expr_D4 = sCNoticeList.removed;
		if (expr_D4 != null)
		{
			List<long> list2 = expr_D4;
			foreach (long arg_FB_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
				ProtoWriter.WriteInt64(arg_FB_0, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCNoticeList, protoWriter);
	}

	private static SCNoticeList Read(SCNoticeList sCNoticeList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCNoticeList == null)
							{
								SCNoticeList expr_162 = new SCNoticeList();
								ProtoReader.NoteObject(expr_162, protoReader);
								sCNoticeList = expr_162;
							}
							protoReader.AppendExtensionData(sCNoticeList);
						}
						else
						{
							if (sCNoticeList == null)
							{
								SCNoticeList expr_DB = new SCNoticeList();
								ProtoReader.NoteObject(expr_DB, protoReader);
								sCNoticeList = expr_DB;
							}
							List<long> list = sCNoticeList.removed;
							if (list == null)
							{
								list = new List<long>();
							}
							if (protoReader.WireType != WireType.String)
							{
								int num2 = protoReader.FieldNumber;
								do
								{
									list.Add(protoReader.ReadInt64());
								}
								while (protoReader.TryReadFieldHeader(num2));
							}
							else
							{
								SubItemToken arg_14D_0 = ProtoReader.StartSubItem(protoReader);
								while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
								{
									list.Add(protoReader.ReadInt64());
								}
								ProtoReader.EndSubItem(arg_14D_0, protoReader);
							}
						}
					}
					else
					{
						if (sCNoticeList == null)
						{
							SCNoticeList expr_AB = new SCNoticeList();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCNoticeList = expr_AB;
						}
						int num2 = protoReader.ReadInt32();
						sCNoticeList.hasNew = num2;
					}
				}
				else
				{
					if (sCNoticeList == null)
					{
						SCNoticeList expr_79 = new SCNoticeList();
						ProtoReader.NoteObject(expr_79, protoReader);
						sCNoticeList = expr_79;
					}
					long id = protoReader.ReadInt64();
					sCNoticeList.id = id;
				}
			}
			else
			{
				if (sCNoticeList == null)
				{
					SCNoticeList expr_19 = new SCNoticeList();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCNoticeList = expr_19;
				}
				List<NoticeData> list2 = sCNoticeList.data;
				if (list2 == null)
				{
					list2 = new List<NoticeData>();
				}
				int num2 = protoReader.FieldNumber;
				do
				{
					List<NoticeData> arg_4F_0 = list2;
					NoticeData arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					NoticeData arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(num2));
			}
		}
		if (sCNoticeList == null)
		{
			SCNoticeList expr_18B = new SCNoticeList();
			ProtoReader.NoteObject(expr_18B, protoReader);
			sCNoticeList = expr_18B;
		}
		return sCNoticeList;
	}

	private static void Write(SCNPCAttackData sCNPCAttackData, ProtoWriter writer)
	{
		if (sCNPCAttackData.GetType() != typeof(SCNPCAttackData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCNPCAttackData), sCNPCAttackData.GetType());
		}
		long expr_2D = sCNPCAttackData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<int> expr_53 = sCNPCAttackData.waveId;
		if (expr_53 != null)
		{
			List<int> list = expr_53;
			foreach (int arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_79_0, writer);
			}
		}
		string expr_A8 = sCNPCAttackData.name;
		if (expr_A8 != null)
		{
			if (!(expr_A8 == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_A8, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCNPCAttackData, writer);
	}

	private static SCNPCAttackData Read(SCNPCAttackData sCNPCAttackData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCNPCAttackData == null)
						{
							SCNPCAttackData expr_101 = new SCNPCAttackData();
							ProtoReader.NoteObject(expr_101, protoReader);
							sCNPCAttackData = expr_101;
						}
						protoReader.AppendExtensionData(sCNPCAttackData);
					}
					else
					{
						if (sCNPCAttackData == null)
						{
							SCNPCAttackData expr_D4 = new SCNPCAttackData();
							ProtoReader.NoteObject(expr_D4, protoReader);
							sCNPCAttackData = expr_D4;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							sCNPCAttackData.name = text;
						}
					}
				}
				else
				{
					if (sCNPCAttackData == null)
					{
						SCNPCAttackData expr_49 = new SCNPCAttackData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCNPCAttackData = expr_49;
					}
					List<int> list = sCNPCAttackData.waveId;
					if (list == null)
					{
						list = new List<int>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt32());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt32());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCNPCAttackData == null)
				{
					SCNPCAttackData expr_19 = new SCNPCAttackData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCNPCAttackData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCNPCAttackData.id = id;
			}
		}
		if (sCNPCAttackData == null)
		{
			SCNPCAttackData expr_12A = new SCNPCAttackData();
			ProtoReader.NoteObject(expr_12A, protoReader);
			sCNPCAttackData = expr_12A;
		}
		return sCNPCAttackData;
	}

	private static void Write(SCOfficerData sCOfficerData, ProtoWriter protoWriter)
	{
		if (sCOfficerData.GetType() != typeof(SCOfficerData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOfficerData), sCOfficerData.GetType());
		}
		long expr_2D = sCOfficerData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		int expr_53 = sCOfficerData.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_53, protoWriter);
		}
		int expr_70 = sCOfficerData.level;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_70, protoWriter);
		}
		int expr_8D = sCOfficerData.exp;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_8D, protoWriter);
		}
		int expr_AA = sCOfficerData.type;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_AA, protoWriter);
		}
		long expr_C7 = sCOfficerData.dismissTime;
		if (expr_C7 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_C7, protoWriter);
		}
		long expr_ED = sCOfficerData.unfreezeTime;
		if (expr_ED != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_ED, protoWriter);
		}
		List<KVStruct> expr_113 = sCOfficerData.equ;
		if (expr_113 != null)
		{
			List<KVStruct> list = expr_113;
			foreach (KVStruct arg_139_0 in list)
			{
				ProtoWriter.WriteFieldHeader(9, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_139_0, protoWriter);
				ProtoMsgSerializer.Write(arg_139_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCOfficerData, protoWriter);
	}

	private static SCOfficerData Read(SCOfficerData sCOfficerData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (sCOfficerData == null)
											{
												SCOfficerData expr_1C3 = new SCOfficerData();
												ProtoReader.NoteObject(expr_1C3, protoReader);
												sCOfficerData = expr_1C3;
											}
											protoReader.AppendExtensionData(sCOfficerData);
										}
										else
										{
											if (sCOfficerData == null)
											{
												SCOfficerData expr_16A = new SCOfficerData();
												ProtoReader.NoteObject(expr_16A, protoReader);
												sCOfficerData = expr_16A;
											}
											List<KVStruct> list = sCOfficerData.equ;
											if (list == null)
											{
												list = new List<KVStruct>();
											}
											int num2 = protoReader.FieldNumber;
											do
											{
												List<KVStruct> arg_1A2_0 = list;
												KVStruct arg_195_0 = null;
												SubItemToken token = ProtoReader.StartSubItem(protoReader);
												KVStruct arg_1A2_1 = ProtoMsgSerializer.Read(arg_195_0, protoReader);
												ProtoReader.EndSubItem(token, protoReader);
												arg_1A2_0.Add(arg_1A2_1);
											}
											while (protoReader.TryReadFieldHeader(num2));
										}
									}
									else
									{
										if (sCOfficerData == null)
										{
											SCOfficerData expr_139 = new SCOfficerData();
											ProtoReader.NoteObject(expr_139, protoReader);
											sCOfficerData = expr_139;
										}
										long num3 = protoReader.ReadInt64();
										sCOfficerData.unfreezeTime = num3;
									}
								}
								else
								{
									if (sCOfficerData == null)
									{
										SCOfficerData expr_109 = new SCOfficerData();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCOfficerData = expr_109;
									}
									long num3 = protoReader.ReadInt64();
									sCOfficerData.dismissTime = num3;
								}
							}
							else
							{
								if (sCOfficerData == null)
								{
									SCOfficerData expr_D9 = new SCOfficerData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCOfficerData = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								sCOfficerData.type = num2;
							}
						}
						else
						{
							if (sCOfficerData == null)
							{
								SCOfficerData expr_A9 = new SCOfficerData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCOfficerData = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCOfficerData.exp = num2;
						}
					}
					else
					{
						if (sCOfficerData == null)
						{
							SCOfficerData expr_79 = new SCOfficerData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCOfficerData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCOfficerData.level = num2;
					}
				}
				else
				{
					if (sCOfficerData == null)
					{
						SCOfficerData expr_49 = new SCOfficerData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOfficerData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCOfficerData.itemId = num2;
				}
			}
			else
			{
				if (sCOfficerData == null)
				{
					SCOfficerData expr_19 = new SCOfficerData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOfficerData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCOfficerData.id = num3;
			}
		}
		if (sCOfficerData == null)
		{
			SCOfficerData expr_1EC = new SCOfficerData();
			ProtoReader.NoteObject(expr_1EC, protoReader);
			sCOfficerData = expr_1EC;
		}
		return sCOfficerData;
	}

	private static void Write(SCOfficerEqu sCOfficerEqu, ProtoWriter writer)
	{
		if (sCOfficerEqu.GetType() != typeof(SCOfficerEqu))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOfficerEqu), sCOfficerEqu.GetType());
		}
		long expr_2D = sCOfficerEqu.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCOfficerEqu.equId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCOfficerEqu.officerId;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		int expr_96 = sCOfficerEqu.type;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(sCOfficerEqu, writer);
	}

	private static SCOfficerEqu Read(SCOfficerEqu sCOfficerEqu, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCOfficerEqu == null)
							{
								SCOfficerEqu expr_D0 = new SCOfficerEqu();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCOfficerEqu = expr_D0;
							}
							protoReader.AppendExtensionData(sCOfficerEqu);
						}
						else
						{
							if (sCOfficerEqu == null)
							{
								SCOfficerEqu expr_A9 = new SCOfficerEqu();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCOfficerEqu = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCOfficerEqu.type = num2;
						}
					}
					else
					{
						if (sCOfficerEqu == null)
						{
							SCOfficerEqu expr_79 = new SCOfficerEqu();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCOfficerEqu = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCOfficerEqu.officerId = num3;
					}
				}
				else
				{
					if (sCOfficerEqu == null)
					{
						SCOfficerEqu expr_49 = new SCOfficerEqu();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOfficerEqu = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCOfficerEqu.equId = num2;
				}
			}
			else
			{
				if (sCOfficerEqu == null)
				{
					SCOfficerEqu expr_19 = new SCOfficerEqu();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOfficerEqu = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCOfficerEqu.id = num3;
			}
		}
		if (sCOfficerEqu == null)
		{
			SCOfficerEqu expr_F9 = new SCOfficerEqu();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCOfficerEqu = expr_F9;
		}
		return sCOfficerEqu;
	}

	private static void Write(SCOfficerRemove sCOfficerRemove, ProtoWriter writer)
	{
		if (sCOfficerRemove.GetType() != typeof(SCOfficerRemove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOfficerRemove), sCOfficerRemove.GetType());
		}
		long expr_2D = sCOfficerRemove.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		ProtoWriter.AppendExtensionData(sCOfficerRemove, writer);
	}

	private static SCOfficerRemove Read(SCOfficerRemove sCOfficerRemove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (sCOfficerRemove == null)
				{
					SCOfficerRemove expr_40 = new SCOfficerRemove();
					ProtoReader.NoteObject(expr_40, protoReader);
					sCOfficerRemove = expr_40;
				}
				protoReader.AppendExtensionData(sCOfficerRemove);
			}
			else
			{
				if (sCOfficerRemove == null)
				{
					SCOfficerRemove expr_19 = new SCOfficerRemove();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOfficerRemove = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCOfficerRemove.id = id;
			}
		}
		if (sCOfficerRemove == null)
		{
			SCOfficerRemove expr_69 = new SCOfficerRemove();
			ProtoReader.NoteObject(expr_69, protoReader);
			sCOfficerRemove = expr_69;
		}
		return sCOfficerRemove;
	}

	private static void Write(SCOfficerTenRecruitData sCOfficerTenRecruitData, ProtoWriter protoWriter)
	{
		if (sCOfficerTenRecruitData.GetType() != typeof(SCOfficerTenRecruitData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOfficerTenRecruitData), sCOfficerTenRecruitData.GetType());
		}
		long expr_2D = sCOfficerTenRecruitData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<OfficerTenRecruitData> expr_53 = sCOfficerTenRecruitData.officerTenRecruitData;
		if (expr_53 != null)
		{
			List<OfficerTenRecruitData> list = expr_53;
			foreach (OfficerTenRecruitData arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCOfficerTenRecruitData, protoWriter);
	}

	private static SCOfficerTenRecruitData Read(SCOfficerTenRecruitData sCOfficerTenRecruitData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCOfficerTenRecruitData == null)
					{
						SCOfficerTenRecruitData expr_A2 = new SCOfficerTenRecruitData();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCOfficerTenRecruitData = expr_A2;
					}
					protoReader.AppendExtensionData(sCOfficerTenRecruitData);
				}
				else
				{
					if (sCOfficerTenRecruitData == null)
					{
						SCOfficerTenRecruitData expr_49 = new SCOfficerTenRecruitData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOfficerTenRecruitData = expr_49;
					}
					List<OfficerTenRecruitData> list = sCOfficerTenRecruitData.officerTenRecruitData;
					if (list == null)
					{
						list = new List<OfficerTenRecruitData>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<OfficerTenRecruitData> arg_81_0 = list;
						OfficerTenRecruitData arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						OfficerTenRecruitData arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCOfficerTenRecruitData == null)
				{
					SCOfficerTenRecruitData expr_19 = new SCOfficerTenRecruitData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOfficerTenRecruitData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCOfficerTenRecruitData.id = id;
			}
		}
		if (sCOfficerTenRecruitData == null)
		{
			SCOfficerTenRecruitData expr_CB = new SCOfficerTenRecruitData();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCOfficerTenRecruitData = expr_CB;
		}
		return sCOfficerTenRecruitData;
	}

	private static void Write(SCOnlineRewards sCOnlineRewards, ProtoWriter writer)
	{
		if (sCOnlineRewards.GetType() != typeof(SCOnlineRewards))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOnlineRewards), sCOnlineRewards.GetType());
		}
		long expr_2D = sCOnlineRewards.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCOnlineRewards.step;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCOnlineRewards.nextRewardTime;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCOnlineRewards, writer);
	}

	private static SCOnlineRewards Read(SCOnlineRewards sCOnlineRewards, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCOnlineRewards == null)
						{
							SCOnlineRewards expr_A0 = new SCOnlineRewards();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCOnlineRewards = expr_A0;
						}
						protoReader.AppendExtensionData(sCOnlineRewards);
					}
					else
					{
						if (sCOnlineRewards == null)
						{
							SCOnlineRewards expr_79 = new SCOnlineRewards();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCOnlineRewards = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCOnlineRewards.nextRewardTime = num2;
					}
				}
				else
				{
					if (sCOnlineRewards == null)
					{
						SCOnlineRewards expr_49 = new SCOnlineRewards();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOnlineRewards = expr_49;
					}
					int step = protoReader.ReadInt32();
					sCOnlineRewards.step = step;
				}
			}
			else
			{
				if (sCOnlineRewards == null)
				{
					SCOnlineRewards expr_19 = new SCOnlineRewards();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOnlineRewards = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCOnlineRewards.id = num2;
			}
		}
		if (sCOnlineRewards == null)
		{
			SCOnlineRewards expr_C9 = new SCOnlineRewards();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCOnlineRewards = expr_C9;
		}
		return sCOnlineRewards;
	}

	private static void Write(SCOpenArmy sCOpenArmy, ProtoWriter writer)
	{
		if (sCOpenArmy.GetType() != typeof(SCOpenArmy))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOpenArmy), sCOpenArmy.GetType());
		}
		long expr_2D = sCOpenArmy.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<int> expr_53 = sCOpenArmy.armys;
		if (expr_53 != null)
		{
			List<int> list = expr_53;
			foreach (int arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_79_0, writer);
			}
		}
		long expr_A8 = sCOpenArmy.buildingId;
		if (expr_A8 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_A8, writer);
		}
		ProtoWriter.AppendExtensionData(sCOpenArmy, writer);
	}

	private static SCOpenArmy Read(SCOpenArmy sCOpenArmy, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCOpenArmy == null)
						{
							SCOpenArmy expr_FB = new SCOpenArmy();
							ProtoReader.NoteObject(expr_FB, protoReader);
							sCOpenArmy = expr_FB;
						}
						protoReader.AppendExtensionData(sCOpenArmy);
					}
					else
					{
						if (sCOpenArmy == null)
						{
							SCOpenArmy expr_D4 = new SCOpenArmy();
							ProtoReader.NoteObject(expr_D4, protoReader);
							sCOpenArmy = expr_D4;
						}
						long num2 = protoReader.ReadInt64();
						sCOpenArmy.buildingId = num2;
					}
				}
				else
				{
					if (sCOpenArmy == null)
					{
						SCOpenArmy expr_49 = new SCOpenArmy();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOpenArmy = expr_49;
					}
					List<int> list = sCOpenArmy.armys;
					if (list == null)
					{
						list = new List<int>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt32());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt32());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCOpenArmy == null)
				{
					SCOpenArmy expr_19 = new SCOpenArmy();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOpenArmy = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCOpenArmy.id = num2;
			}
		}
		if (sCOpenArmy == null)
		{
			SCOpenArmy expr_124 = new SCOpenArmy();
			ProtoReader.NoteObject(expr_124, protoReader);
			sCOpenArmy = expr_124;
		}
		return sCOpenArmy;
	}

	private static void Write(SCOperation sCOperation, ProtoWriter writer)
	{
		if (sCOperation.GetType() != typeof(SCOperation))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOperation), sCOperation.GetType());
		}
		long expr_2D = sCOperation.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCOperation.type;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		bool expr_70 = sCOperation.isSuccess;
		if (expr_70)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_70, writer);
		}
		long expr_8D = sCOperation.dataId;
		if (expr_8D != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_8D, writer);
		}
		ProtoWriter.AppendExtensionData(sCOperation, writer);
	}

	private static SCOperation Read(SCOperation sCOperation, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCOperation == null)
							{
								SCOperation expr_D0 = new SCOperation();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCOperation = expr_D0;
							}
							protoReader.AppendExtensionData(sCOperation);
						}
						else
						{
							if (sCOperation == null)
							{
								SCOperation expr_A9 = new SCOperation();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCOperation = expr_A9;
							}
							long num2 = protoReader.ReadInt64();
							sCOperation.dataId = num2;
						}
					}
					else
					{
						if (sCOperation == null)
						{
							SCOperation expr_79 = new SCOperation();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCOperation = expr_79;
						}
						bool isSuccess = protoReader.ReadBoolean();
						sCOperation.isSuccess = isSuccess;
					}
				}
				else
				{
					if (sCOperation == null)
					{
						SCOperation expr_49 = new SCOperation();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOperation = expr_49;
					}
					int type = protoReader.ReadInt32();
					sCOperation.type = type;
				}
			}
			else
			{
				if (sCOperation == null)
				{
					SCOperation expr_19 = new SCOperation();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOperation = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCOperation.id = num2;
			}
		}
		if (sCOperation == null)
		{
			SCOperation expr_F9 = new SCOperation();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCOperation = expr_F9;
		}
		return sCOperation;
	}

	private static void Write(SCOtherPlayerInfo sCOtherPlayerInfo, ProtoWriter writer)
	{
		if (sCOtherPlayerInfo.GetType() != typeof(SCOtherPlayerInfo))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCOtherPlayerInfo), sCOtherPlayerInfo.GetType());
		}
		long expr_2D = sCOtherPlayerInfo.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = sCOtherPlayerInfo.name;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		int expr_83 = sCOtherPlayerInfo.level;
		if (expr_83 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_83, writer);
		}
		ProtoWriter.AppendExtensionData(sCOtherPlayerInfo, writer);
	}

	private static SCOtherPlayerInfo Read(SCOtherPlayerInfo sCOtherPlayerInfo, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCOtherPlayerInfo == null)
						{
							SCOtherPlayerInfo expr_A3 = new SCOtherPlayerInfo();
							ProtoReader.NoteObject(expr_A3, protoReader);
							sCOtherPlayerInfo = expr_A3;
						}
						protoReader.AppendExtensionData(sCOtherPlayerInfo);
					}
					else
					{
						if (sCOtherPlayerInfo == null)
						{
							SCOtherPlayerInfo expr_7C = new SCOtherPlayerInfo();
							ProtoReader.NoteObject(expr_7C, protoReader);
							sCOtherPlayerInfo = expr_7C;
						}
						int level = protoReader.ReadInt32();
						sCOtherPlayerInfo.level = level;
					}
				}
				else
				{
					if (sCOtherPlayerInfo == null)
					{
						SCOtherPlayerInfo expr_49 = new SCOtherPlayerInfo();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCOtherPlayerInfo = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCOtherPlayerInfo.name = text;
					}
				}
			}
			else
			{
				if (sCOtherPlayerInfo == null)
				{
					SCOtherPlayerInfo expr_19 = new SCOtherPlayerInfo();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCOtherPlayerInfo = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCOtherPlayerInfo.id = id;
			}
		}
		if (sCOtherPlayerInfo == null)
		{
			SCOtherPlayerInfo expr_CC = new SCOtherPlayerInfo();
			ProtoReader.NoteObject(expr_CC, protoReader);
			sCOtherPlayerInfo = expr_CC;
		}
		return sCOtherPlayerInfo;
	}

	private static void Write(SCPayCallback sCPayCallback, ProtoWriter writer)
	{
		if (sCPayCallback.GetType() != typeof(SCPayCallback))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPayCallback), sCPayCallback.GetType());
		}
		string expr_2D = sCPayCallback.result;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		int expr_5D = sCPayCallback.id;
		if (expr_5D != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_5D, writer);
		}
		ProtoWriter.AppendExtensionData(sCPayCallback, writer);
	}

	private static SCPayCallback Read(SCPayCallback sCPayCallback, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCPayCallback == null)
					{
						SCPayCallback expr_73 = new SCPayCallback();
						ProtoReader.NoteObject(expr_73, protoReader);
						sCPayCallback = expr_73;
					}
					protoReader.AppendExtensionData(sCPayCallback);
				}
				else
				{
					if (sCPayCallback == null)
					{
						SCPayCallback expr_4C = new SCPayCallback();
						ProtoReader.NoteObject(expr_4C, protoReader);
						sCPayCallback = expr_4C;
					}
					int id = protoReader.ReadInt32();
					sCPayCallback.id = id;
				}
			}
			else
			{
				if (sCPayCallback == null)
				{
					SCPayCallback expr_19 = new SCPayCallback();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPayCallback = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					sCPayCallback.result = text;
				}
			}
		}
		if (sCPayCallback == null)
		{
			SCPayCallback expr_9C = new SCPayCallback();
			ProtoReader.NoteObject(expr_9C, protoReader);
			sCPayCallback = expr_9C;
		}
		return sCPayCallback;
	}

	private static void Write(SCPlayerAideData sCPlayerAideData, ProtoWriter writer)
	{
		if (sCPlayerAideData.GetType() != typeof(SCPlayerAideData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerAideData), sCPlayerAideData.GetType());
		}
		long expr_2D = sCPlayerAideData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<int> expr_53 = sCPlayerAideData.aideIds;
		if (expr_53 != null)
		{
			List<int> list = expr_53;
			foreach (int arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_79_0, writer);
			}
		}
		List<int> expr_A8 = sCPlayerAideData.abilitys;
		if (expr_A8 != null)
		{
			List<int> list = expr_A8;
			foreach (int arg_CE_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_CE_0, writer);
			}
		}
		List<int> expr_FD = sCPlayerAideData.itemId;
		if (expr_FD != null)
		{
			List<int> list = expr_FD;
			foreach (int arg_123_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_123_0, writer);
			}
		}
		List<long> expr_152 = sCPlayerAideData.time;
		if (expr_152 != null)
		{
			List<long> list2 = expr_152;
			foreach (long arg_178_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_178_0, writer);
			}
		}
		int expr_1A7 = sCPlayerAideData.needSendAideId;
		if (expr_1A7 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_1A7, writer);
		}
		long expr_1C4 = sCPlayerAideData.endTime;
		if (expr_1C4 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_1C4, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerAideData, writer);
	}

	private static SCPlayerAideData Read(SCPlayerAideData sCPlayerAideData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (sCPlayerAideData == null)
										{
											SCPlayerAideData expr_2D1 = new SCPlayerAideData();
											ProtoReader.NoteObject(expr_2D1, protoReader);
											sCPlayerAideData = expr_2D1;
										}
										protoReader.AppendExtensionData(sCPlayerAideData);
									}
									else
									{
										if (sCPlayerAideData == null)
										{
											SCPlayerAideData expr_2AA = new SCPlayerAideData();
											ProtoReader.NoteObject(expr_2AA, protoReader);
											sCPlayerAideData = expr_2AA;
										}
										long num2 = protoReader.ReadInt64();
										sCPlayerAideData.endTime = num2;
									}
								}
								else
								{
									if (sCPlayerAideData == null)
									{
										SCPlayerAideData expr_27A = new SCPlayerAideData();
										ProtoReader.NoteObject(expr_27A, protoReader);
										sCPlayerAideData = expr_27A;
									}
									int num3 = protoReader.ReadInt32();
									sCPlayerAideData.needSendAideId = num3;
								}
							}
							else
							{
								if (sCPlayerAideData == null)
								{
									SCPlayerAideData expr_1EA = new SCPlayerAideData();
									ProtoReader.NoteObject(expr_1EA, protoReader);
									sCPlayerAideData = expr_1EA;
								}
								List<long> list = sCPlayerAideData.time;
								if (list == null)
								{
									list = new List<long>();
								}
								if (protoReader.WireType != WireType.String)
								{
									int num3 = protoReader.FieldNumber;
									do
									{
										list.Add(protoReader.ReadInt64());
									}
									while (protoReader.TryReadFieldHeader(num3));
								}
								else
								{
									SubItemToken arg_25C_0 = ProtoReader.StartSubItem(protoReader);
									while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
									{
										list.Add(protoReader.ReadInt64());
									}
									ProtoReader.EndSubItem(arg_25C_0, protoReader);
								}
							}
						}
						else
						{
							if (sCPlayerAideData == null)
							{
								SCPlayerAideData expr_15F = new SCPlayerAideData();
								ProtoReader.NoteObject(expr_15F, protoReader);
								sCPlayerAideData = expr_15F;
							}
							List<int> list2 = sCPlayerAideData.itemId;
							if (list2 == null)
							{
								list2 = new List<int>();
							}
							if (protoReader.WireType != WireType.String)
							{
								int num3 = protoReader.FieldNumber;
								do
								{
									list2.Add(protoReader.ReadInt32());
								}
								while (protoReader.TryReadFieldHeader(num3));
							}
							else
							{
								SubItemToken arg_1CC_0 = ProtoReader.StartSubItem(protoReader);
								while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
								{
									list2.Add(protoReader.ReadInt32());
								}
								ProtoReader.EndSubItem(arg_1CC_0, protoReader);
							}
						}
					}
					else
					{
						if (sCPlayerAideData == null)
						{
							SCPlayerAideData expr_D4 = new SCPlayerAideData();
							ProtoReader.NoteObject(expr_D4, protoReader);
							sCPlayerAideData = expr_D4;
						}
						List<int> list2 = sCPlayerAideData.abilitys;
						if (list2 == null)
						{
							list2 = new List<int>();
						}
						if (protoReader.WireType != WireType.String)
						{
							int num3 = protoReader.FieldNumber;
							do
							{
								list2.Add(protoReader.ReadInt32());
							}
							while (protoReader.TryReadFieldHeader(num3));
						}
						else
						{
							SubItemToken arg_141_0 = ProtoReader.StartSubItem(protoReader);
							while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
							{
								list2.Add(protoReader.ReadInt32());
							}
							ProtoReader.EndSubItem(arg_141_0, protoReader);
						}
					}
				}
				else
				{
					if (sCPlayerAideData == null)
					{
						SCPlayerAideData expr_49 = new SCPlayerAideData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerAideData = expr_49;
					}
					List<int> list2 = sCPlayerAideData.aideIds;
					if (list2 == null)
					{
						list2 = new List<int>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int num3 = protoReader.FieldNumber;
						do
						{
							list2.Add(protoReader.ReadInt32());
						}
						while (protoReader.TryReadFieldHeader(num3));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list2.Add(protoReader.ReadInt32());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCPlayerAideData == null)
				{
					SCPlayerAideData expr_19 = new SCPlayerAideData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerAideData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCPlayerAideData.id = num2;
			}
		}
		if (sCPlayerAideData == null)
		{
			SCPlayerAideData expr_2FA = new SCPlayerAideData();
			ProtoReader.NoteObject(expr_2FA, protoReader);
			sCPlayerAideData = expr_2FA;
		}
		return sCPlayerAideData;
	}

	private static void Write(SCPlayerBase sCPlayerBase, ProtoWriter writer)
	{
		if (sCPlayerBase.GetType() != typeof(SCPlayerBase))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerBase), sCPlayerBase.GetType());
		}
		long expr_2D = sCPlayerBase.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = sCPlayerBase.name;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		int expr_83 = sCPlayerBase.medal;
		if (expr_83 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_83, writer);
		}
		int expr_A0 = sCPlayerBase.guideId;
		if (expr_A0 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_A0, writer);
		}
		int expr_BD = sCPlayerBase.index;
		if (expr_BD != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_BD, writer);
		}
		long expr_DA = sCPlayerBase.islandId;
		if (expr_DA != 0L)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_DA, writer);
		}
		long expr_100 = sCPlayerBase.legionId;
		if (expr_100 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_100, writer);
		}
		string expr_126 = sCPlayerBase.legionName;
		if (expr_126 != null)
		{
			if (!(expr_126 == ""))
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, writer);
				ProtoWriter.WriteString(expr_126, writer);
			}
		}
		int expr_156 = sCPlayerBase.isFirstLogin;
		if (expr_156 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_156, writer);
		}
		int expr_174 = sCPlayerBase.ranking;
		if (expr_174 != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_174, writer);
		}
		long expr_192 = sCPlayerBase.legionOutTime;
		if (expr_192 != 0L)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_192, writer);
		}
		int expr_1B9 = sCPlayerBase.taskGuideId;
		if (expr_1B9 != 0)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_1B9, writer);
		}
		long expr_1D7 = sCPlayerBase.createTime;
		if (expr_1D7 != 0L)
		{
			ProtoWriter.WriteFieldHeader(13, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_1D7, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerBase, writer);
	}

	private static SCPlayerBase Read(SCPlayerBase sCPlayerBase, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 10)
												{
													if (num != 11)
													{
														if (num != 12)
														{
															if (num != 13)
															{
																if (sCPlayerBase == null)
																{
																	SCPlayerBase expr_28B = new SCPlayerBase();
																	ProtoReader.NoteObject(expr_28B, protoReader);
																	sCPlayerBase = expr_28B;
																}
																protoReader.AppendExtensionData(sCPlayerBase);
															}
															else
															{
																if (sCPlayerBase == null)
																{
																	SCPlayerBase expr_264 = new SCPlayerBase();
																	ProtoReader.NoteObject(expr_264, protoReader);
																	sCPlayerBase = expr_264;
																}
																long num2 = protoReader.ReadInt64();
																sCPlayerBase.createTime = num2;
															}
														}
														else
														{
															if (sCPlayerBase == null)
															{
																SCPlayerBase expr_233 = new SCPlayerBase();
																ProtoReader.NoteObject(expr_233, protoReader);
																sCPlayerBase = expr_233;
															}
															int num3 = protoReader.ReadInt32();
															sCPlayerBase.taskGuideId = num3;
														}
													}
													else
													{
														if (sCPlayerBase == null)
														{
															SCPlayerBase expr_202 = new SCPlayerBase();
															ProtoReader.NoteObject(expr_202, protoReader);
															sCPlayerBase = expr_202;
														}
														long num2 = protoReader.ReadInt64();
														sCPlayerBase.legionOutTime = num2;
													}
												}
												else
												{
													if (sCPlayerBase == null)
													{
														SCPlayerBase expr_1D1 = new SCPlayerBase();
														ProtoReader.NoteObject(expr_1D1, protoReader);
														sCPlayerBase = expr_1D1;
													}
													int num3 = protoReader.ReadInt32();
													sCPlayerBase.ranking = num3;
												}
											}
											else
											{
												if (sCPlayerBase == null)
												{
													SCPlayerBase expr_1A0 = new SCPlayerBase();
													ProtoReader.NoteObject(expr_1A0, protoReader);
													sCPlayerBase = expr_1A0;
												}
												int num3 = protoReader.ReadInt32();
												sCPlayerBase.isFirstLogin = num3;
											}
										}
										else
										{
											if (sCPlayerBase == null)
											{
												SCPlayerBase expr_16C = new SCPlayerBase();
												ProtoReader.NoteObject(expr_16C, protoReader);
												sCPlayerBase = expr_16C;
											}
											string text = protoReader.ReadString();
											if (text != null)
											{
												sCPlayerBase.legionName = text;
											}
										}
									}
									else
									{
										if (sCPlayerBase == null)
										{
											SCPlayerBase expr_13C = new SCPlayerBase();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCPlayerBase = expr_13C;
										}
										long num2 = protoReader.ReadInt64();
										sCPlayerBase.legionId = num2;
									}
								}
								else
								{
									if (sCPlayerBase == null)
									{
										SCPlayerBase expr_10C = new SCPlayerBase();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCPlayerBase = expr_10C;
									}
									long num2 = protoReader.ReadInt64();
									sCPlayerBase.islandId = num2;
								}
							}
							else
							{
								if (sCPlayerBase == null)
								{
									SCPlayerBase expr_DC = new SCPlayerBase();
									ProtoReader.NoteObject(expr_DC, protoReader);
									sCPlayerBase = expr_DC;
								}
								int num3 = protoReader.ReadInt32();
								sCPlayerBase.index = num3;
							}
						}
						else
						{
							if (sCPlayerBase == null)
							{
								SCPlayerBase expr_AC = new SCPlayerBase();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCPlayerBase = expr_AC;
							}
							int num3 = protoReader.ReadInt32();
							sCPlayerBase.guideId = num3;
						}
					}
					else
					{
						if (sCPlayerBase == null)
						{
							SCPlayerBase expr_7C = new SCPlayerBase();
							ProtoReader.NoteObject(expr_7C, protoReader);
							sCPlayerBase = expr_7C;
						}
						int num3 = protoReader.ReadInt32();
						sCPlayerBase.medal = num3;
					}
				}
				else
				{
					if (sCPlayerBase == null)
					{
						SCPlayerBase expr_49 = new SCPlayerBase();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerBase = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCPlayerBase.name = text;
					}
				}
			}
			else
			{
				if (sCPlayerBase == null)
				{
					SCPlayerBase expr_19 = new SCPlayerBase();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerBase = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCPlayerBase.id = num2;
			}
		}
		if (sCPlayerBase == null)
		{
			SCPlayerBase expr_2B4 = new SCPlayerBase();
			ProtoReader.NoteObject(expr_2B4, protoReader);
			sCPlayerBase = expr_2B4;
		}
		return sCPlayerBase;
	}

	private static void Write(SCPlayerBuilding sCPlayerBuilding, ProtoWriter writer)
	{
		if (sCPlayerBuilding.GetType() != typeof(SCPlayerBuilding))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerBuilding), sCPlayerBuilding.GetType());
		}
		long expr_2D = sCPlayerBuilding.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCPlayerBuilding.index;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCPlayerBuilding.itemId;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = sCPlayerBuilding.level;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = sCPlayerBuilding.protductNum;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		long expr_C7 = sCPlayerBuilding.takeTime;
		if (expr_C7 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_C7, writer);
		}
		long expr_ED = sCPlayerBuilding.islandId;
		if (expr_ED != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_ED, writer);
		}
		int expr_113 = sCPlayerBuilding.upGradeLevel;
		if (expr_113 != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_113, writer);
		}
		int expr_131 = sCPlayerBuilding.strengthLevel;
		if (expr_131 != 0)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_131, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerBuilding, writer);
	}

	private static SCPlayerBuilding Read(SCPlayerBuilding sCPlayerBuilding, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 11)
										{
											if (num != 12)
											{
												if (sCPlayerBuilding == null)
												{
													SCPlayerBuilding expr_1C2 = new SCPlayerBuilding();
													ProtoReader.NoteObject(expr_1C2, protoReader);
													sCPlayerBuilding = expr_1C2;
												}
												protoReader.AppendExtensionData(sCPlayerBuilding);
											}
											else
											{
												if (sCPlayerBuilding == null)
												{
													SCPlayerBuilding expr_19B = new SCPlayerBuilding();
													ProtoReader.NoteObject(expr_19B, protoReader);
													sCPlayerBuilding = expr_19B;
												}
												int num2 = protoReader.ReadInt32();
												sCPlayerBuilding.strengthLevel = num2;
											}
										}
										else
										{
											if (sCPlayerBuilding == null)
											{
												SCPlayerBuilding expr_16A = new SCPlayerBuilding();
												ProtoReader.NoteObject(expr_16A, protoReader);
												sCPlayerBuilding = expr_16A;
											}
											int num2 = protoReader.ReadInt32();
											sCPlayerBuilding.upGradeLevel = num2;
										}
									}
									else
									{
										if (sCPlayerBuilding == null)
										{
											SCPlayerBuilding expr_139 = new SCPlayerBuilding();
											ProtoReader.NoteObject(expr_139, protoReader);
											sCPlayerBuilding = expr_139;
										}
										long num3 = protoReader.ReadInt64();
										sCPlayerBuilding.islandId = num3;
									}
								}
								else
								{
									if (sCPlayerBuilding == null)
									{
										SCPlayerBuilding expr_109 = new SCPlayerBuilding();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCPlayerBuilding = expr_109;
									}
									long num3 = protoReader.ReadInt64();
									sCPlayerBuilding.takeTime = num3;
								}
							}
							else
							{
								if (sCPlayerBuilding == null)
								{
									SCPlayerBuilding expr_D9 = new SCPlayerBuilding();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCPlayerBuilding = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								sCPlayerBuilding.protductNum = num2;
							}
						}
						else
						{
							if (sCPlayerBuilding == null)
							{
								SCPlayerBuilding expr_A9 = new SCPlayerBuilding();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCPlayerBuilding = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCPlayerBuilding.level = num2;
						}
					}
					else
					{
						if (sCPlayerBuilding == null)
						{
							SCPlayerBuilding expr_79 = new SCPlayerBuilding();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCPlayerBuilding = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCPlayerBuilding.itemId = num2;
					}
				}
				else
				{
					if (sCPlayerBuilding == null)
					{
						SCPlayerBuilding expr_49 = new SCPlayerBuilding();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerBuilding = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCPlayerBuilding.index = num2;
				}
			}
			else
			{
				if (sCPlayerBuilding == null)
				{
					SCPlayerBuilding expr_19 = new SCPlayerBuilding();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerBuilding = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCPlayerBuilding.id = num3;
			}
		}
		if (sCPlayerBuilding == null)
		{
			SCPlayerBuilding expr_1EB = new SCPlayerBuilding();
			ProtoReader.NoteObject(expr_1EB, protoReader);
			sCPlayerBuilding = expr_1EB;
		}
		return sCPlayerBuilding;
	}

	private static void Write(SCPlayerItem sCPlayerItem, ProtoWriter writer)
	{
		if (sCPlayerItem.GetType() != typeof(SCPlayerItem))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerItem), sCPlayerItem.GetType());
		}
		long expr_2D = sCPlayerItem.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCPlayerItem.value;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = sCPlayerItem.type;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		int expr_96 = sCPlayerItem.itemId;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_96, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerItem, writer);
	}

	private static SCPlayerItem Read(SCPlayerItem sCPlayerItem, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCPlayerItem == null)
							{
								SCPlayerItem expr_D0 = new SCPlayerItem();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCPlayerItem = expr_D0;
							}
							protoReader.AppendExtensionData(sCPlayerItem);
						}
						else
						{
							if (sCPlayerItem == null)
							{
								SCPlayerItem expr_A9 = new SCPlayerItem();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCPlayerItem = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCPlayerItem.itemId = num2;
						}
					}
					else
					{
						if (sCPlayerItem == null)
						{
							SCPlayerItem expr_79 = new SCPlayerItem();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCPlayerItem = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCPlayerItem.type = num2;
					}
				}
				else
				{
					if (sCPlayerItem == null)
					{
						SCPlayerItem expr_49 = new SCPlayerItem();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerItem = expr_49;
					}
					long num3 = protoReader.ReadInt64();
					sCPlayerItem.value = num3;
				}
			}
			else
			{
				if (sCPlayerItem == null)
				{
					SCPlayerItem expr_19 = new SCPlayerItem();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerItem = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCPlayerItem.id = num3;
			}
		}
		if (sCPlayerItem == null)
		{
			SCPlayerItem expr_F9 = new SCPlayerItem();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCPlayerItem = expr_F9;
		}
		return sCPlayerItem;
	}

	private static void Write(SCPlayerLegionProp sCPlayerLegionProp, ProtoWriter protoWriter)
	{
		if (sCPlayerLegionProp.GetType() != typeof(SCPlayerLegionProp))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerLegionProp), sCPlayerLegionProp.GetType());
		}
		long expr_2D = sCPlayerLegionProp.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCPlayerLegionProp.prizeData;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_B7 = sCPlayerLegionProp.legionHelpApplyTimes;
		if (expr_B7 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_B7, protoWriter);
		}
		List<KVStruct> expr_D4 = sCPlayerLegionProp.helpBuildingTimes;
		if (expr_D4 != null)
		{
			List<KVStruct> list = expr_D4;
			foreach (KVStruct arg_F9_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_F9_0, protoWriter);
				ProtoMsgSerializer.Write(arg_F9_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCPlayerLegionProp, protoWriter);
	}

	private static SCPlayerLegionProp Read(SCPlayerLegionProp sCPlayerLegionProp, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCPlayerLegionProp == null)
							{
								SCPlayerLegionProp expr_134 = new SCPlayerLegionProp();
								ProtoReader.NoteObject(expr_134, protoReader);
								sCPlayerLegionProp = expr_134;
							}
							protoReader.AppendExtensionData(sCPlayerLegionProp);
						}
						else
						{
							if (sCPlayerLegionProp == null)
							{
								SCPlayerLegionProp expr_DB = new SCPlayerLegionProp();
								ProtoReader.NoteObject(expr_DB, protoReader);
								sCPlayerLegionProp = expr_DB;
							}
							List<KVStruct> list = sCPlayerLegionProp.helpBuildingTimes;
							if (list == null)
							{
								list = new List<KVStruct>();
							}
							int num2 = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_113_0 = list;
								KVStruct arg_106_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_113_1 = ProtoMsgSerializer.Read(arg_106_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_113_0.Add(arg_113_1);
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
					}
					else
					{
						if (sCPlayerLegionProp == null)
						{
							SCPlayerLegionProp expr_AB = new SCPlayerLegionProp();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCPlayerLegionProp = expr_AB;
						}
						int num2 = protoReader.ReadInt32();
						sCPlayerLegionProp.legionHelpApplyTimes = num2;
					}
				}
				else
				{
					if (sCPlayerLegionProp == null)
					{
						SCPlayerLegionProp expr_49 = new SCPlayerLegionProp();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerLegionProp = expr_49;
					}
					List<KVStruct> list = sCPlayerLegionProp.prizeData;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (sCPlayerLegionProp == null)
				{
					SCPlayerLegionProp expr_19 = new SCPlayerLegionProp();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerLegionProp = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCPlayerLegionProp.id = id;
			}
		}
		if (sCPlayerLegionProp == null)
		{
			SCPlayerLegionProp expr_15D = new SCPlayerLegionProp();
			ProtoReader.NoteObject(expr_15D, protoReader);
			sCPlayerLegionProp = expr_15D;
		}
		return sCPlayerLegionProp;
	}

	private static void Write(SCPlayerMailData sCPlayerMailData, ProtoWriter protoWriter)
	{
		if (sCPlayerMailData.GetType() != typeof(SCPlayerMailData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerMailData), sCPlayerMailData.GetType());
		}
		long expr_2D = sCPlayerMailData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		string expr_53 = sCPlayerMailData.content;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_53, protoWriter);
			}
		}
		long expr_83 = sCPlayerMailData.time;
		if (expr_83 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_83, protoWriter);
		}
		bool expr_A9 = sCPlayerMailData.isRead;
		if (expr_A9)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_A9, protoWriter);
		}
		bool expr_C6 = sCPlayerMailData.isReceived;
		if (expr_C6)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_C6, protoWriter);
		}
		List<KVStruct> expr_E3 = sCPlayerMailData.resources;
		if (expr_E3 != null)
		{
			List<KVStruct> list = expr_E3;
			foreach (KVStruct arg_108_0 in list)
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_108_0, protoWriter);
				ProtoMsgSerializer.Write(arg_108_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_147 = sCPlayerMailData.items;
		if (expr_147 != null)
		{
			List<KVStruct> list = expr_147;
			foreach (KVStruct arg_16C_0 in list)
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_16C_0, protoWriter);
				ProtoMsgSerializer.Write(arg_16C_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		string expr_1AB = sCPlayerMailData.title;
		if (expr_1AB != null)
		{
			if (!(expr_1AB == ""))
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_1AB, protoWriter);
			}
		}
		int expr_1DB = sCPlayerMailData.money;
		if (expr_1DB != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1DB, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCPlayerMailData, protoWriter);
	}

	private static SCPlayerMailData Read(SCPlayerMailData sCPlayerMailData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (sCPlayerMailData == null)
												{
													SCPlayerMailData expr_239 = new SCPlayerMailData();
													ProtoReader.NoteObject(expr_239, protoReader);
													sCPlayerMailData = expr_239;
												}
												protoReader.AppendExtensionData(sCPlayerMailData);
											}
											else
											{
												if (sCPlayerMailData == null)
												{
													SCPlayerMailData expr_210 = new SCPlayerMailData();
													ProtoReader.NoteObject(expr_210, protoReader);
													sCPlayerMailData = expr_210;
												}
												int num2 = protoReader.ReadInt32();
												sCPlayerMailData.money = num2;
											}
										}
										else
										{
											if (sCPlayerMailData == null)
											{
												SCPlayerMailData expr_1DC = new SCPlayerMailData();
												ProtoReader.NoteObject(expr_1DC, protoReader);
												sCPlayerMailData = expr_1DC;
											}
											string text = protoReader.ReadString();
											if (text != null)
											{
												sCPlayerMailData.title = text;
											}
										}
									}
									else
									{
										if (sCPlayerMailData == null)
										{
											SCPlayerMailData expr_174 = new SCPlayerMailData();
											ProtoReader.NoteObject(expr_174, protoReader);
											sCPlayerMailData = expr_174;
										}
										List<KVStruct> list = sCPlayerMailData.items;
										if (list == null)
										{
											list = new List<KVStruct>();
										}
										int num2 = protoReader.FieldNumber;
										do
										{
											List<KVStruct> arg_1B1_0 = list;
											KVStruct arg_1A4_0 = null;
											SubItemToken token = ProtoReader.StartSubItem(protoReader);
											KVStruct arg_1B1_1 = ProtoMsgSerializer.Read(arg_1A4_0, protoReader);
											ProtoReader.EndSubItem(token, protoReader);
											arg_1B1_0.Add(arg_1B1_1);
										}
										while (protoReader.TryReadFieldHeader(num2));
									}
								}
								else
								{
									if (sCPlayerMailData == null)
									{
										SCPlayerMailData expr_10C = new SCPlayerMailData();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCPlayerMailData = expr_10C;
									}
									List<KVStruct> list = sCPlayerMailData.resources;
									if (list == null)
									{
										list = new List<KVStruct>();
									}
									int num2 = protoReader.FieldNumber;
									do
									{
										List<KVStruct> arg_149_0 = list;
										KVStruct arg_13C_0 = null;
										SubItemToken token = ProtoReader.StartSubItem(protoReader);
										KVStruct arg_149_1 = ProtoMsgSerializer.Read(arg_13C_0, protoReader);
										ProtoReader.EndSubItem(token, protoReader);
										arg_149_0.Add(arg_149_1);
									}
									while (protoReader.TryReadFieldHeader(num2));
								}
							}
							else
							{
								if (sCPlayerMailData == null)
								{
									SCPlayerMailData expr_DC = new SCPlayerMailData();
									ProtoReader.NoteObject(expr_DC, protoReader);
									sCPlayerMailData = expr_DC;
								}
								bool flag = protoReader.ReadBoolean();
								sCPlayerMailData.isReceived = flag;
							}
						}
						else
						{
							if (sCPlayerMailData == null)
							{
								SCPlayerMailData expr_AC = new SCPlayerMailData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCPlayerMailData = expr_AC;
							}
							bool flag = protoReader.ReadBoolean();
							sCPlayerMailData.isRead = flag;
						}
					}
					else
					{
						if (sCPlayerMailData == null)
						{
							SCPlayerMailData expr_7C = new SCPlayerMailData();
							ProtoReader.NoteObject(expr_7C, protoReader);
							sCPlayerMailData = expr_7C;
						}
						long num3 = protoReader.ReadInt64();
						sCPlayerMailData.time = num3;
					}
				}
				else
				{
					if (sCPlayerMailData == null)
					{
						SCPlayerMailData expr_49 = new SCPlayerMailData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerMailData = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCPlayerMailData.content = text;
					}
				}
			}
			else
			{
				if (sCPlayerMailData == null)
				{
					SCPlayerMailData expr_19 = new SCPlayerMailData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerMailData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCPlayerMailData.id = num3;
			}
		}
		if (sCPlayerMailData == null)
		{
			SCPlayerMailData expr_262 = new SCPlayerMailData();
			ProtoReader.NoteObject(expr_262, protoReader);
			sCPlayerMailData = expr_262;
		}
		return sCPlayerMailData;
	}

	private static void Write(SCPlayerMailStatus sCPlayerMailStatus, ProtoWriter writer)
	{
		if (sCPlayerMailStatus.GetType() != typeof(SCPlayerMailStatus))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerMailStatus), sCPlayerMailStatus.GetType());
		}
		long expr_2D = sCPlayerMailStatus.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		bool expr_53 = sCPlayerMailStatus.isReceived;
		if (expr_53)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerMailStatus, writer);
	}

	private static SCPlayerMailStatus Read(SCPlayerMailStatus sCPlayerMailStatus, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCPlayerMailStatus == null)
					{
						SCPlayerMailStatus expr_70 = new SCPlayerMailStatus();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCPlayerMailStatus = expr_70;
					}
					protoReader.AppendExtensionData(sCPlayerMailStatus);
				}
				else
				{
					if (sCPlayerMailStatus == null)
					{
						SCPlayerMailStatus expr_49 = new SCPlayerMailStatus();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerMailStatus = expr_49;
					}
					bool isReceived = protoReader.ReadBoolean();
					sCPlayerMailStatus.isReceived = isReceived;
				}
			}
			else
			{
				if (sCPlayerMailStatus == null)
				{
					SCPlayerMailStatus expr_19 = new SCPlayerMailStatus();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerMailStatus = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCPlayerMailStatus.id = id;
			}
		}
		if (sCPlayerMailStatus == null)
		{
			SCPlayerMailStatus expr_99 = new SCPlayerMailStatus();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCPlayerMailStatus = expr_99;
		}
		return sCPlayerMailStatus;
	}

	private static void Write(SCPlayerResource sCPlayerResource, ProtoWriter writer)
	{
		if (sCPlayerResource.GetType() != typeof(SCPlayerResource))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerResource), sCPlayerResource.GetType());
		}
		long expr_2D = sCPlayerResource.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCPlayerResource.resVal;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCPlayerResource.type;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = sCPlayerResource.resId;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerResource, writer);
	}

	private static SCPlayerResource Read(SCPlayerResource sCPlayerResource, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCPlayerResource == null)
							{
								SCPlayerResource expr_D0 = new SCPlayerResource();
								ProtoReader.NoteObject(expr_D0, protoReader);
								sCPlayerResource = expr_D0;
							}
							protoReader.AppendExtensionData(sCPlayerResource);
						}
						else
						{
							if (sCPlayerResource == null)
							{
								SCPlayerResource expr_A9 = new SCPlayerResource();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCPlayerResource = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCPlayerResource.resId = num2;
						}
					}
					else
					{
						if (sCPlayerResource == null)
						{
							SCPlayerResource expr_79 = new SCPlayerResource();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCPlayerResource = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCPlayerResource.type = num2;
					}
				}
				else
				{
					if (sCPlayerResource == null)
					{
						SCPlayerResource expr_49 = new SCPlayerResource();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerResource = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCPlayerResource.resVal = num2;
				}
			}
			else
			{
				if (sCPlayerResource == null)
				{
					SCPlayerResource expr_19 = new SCPlayerResource();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerResource = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCPlayerResource.id = id;
			}
		}
		if (sCPlayerResource == null)
		{
			SCPlayerResource expr_F9 = new SCPlayerResource();
			ProtoReader.NoteObject(expr_F9, protoReader);
			sCPlayerResource = expr_F9;
		}
		return sCPlayerResource;
	}

	private static void Write(SCPlayerSoldier sCPlayerSoldier, ProtoWriter writer)
	{
		if (sCPlayerSoldier.GetType() != typeof(SCPlayerSoldier))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerSoldier), sCPlayerSoldier.GetType());
		}
		long expr_2D = sCPlayerSoldier.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCPlayerSoldier.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCPlayerSoldier.exp;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = sCPlayerSoldier.level;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = sCPlayerSoldier.star;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		int expr_C7 = sCPlayerSoldier.skillLevel;
		if (expr_C7 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_C7, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerSoldier, writer);
	}

	private static SCPlayerSoldier Read(SCPlayerSoldier sCPlayerSoldier, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 9)
								{
									if (sCPlayerSoldier == null)
									{
										SCPlayerSoldier expr_131 = new SCPlayerSoldier();
										ProtoReader.NoteObject(expr_131, protoReader);
										sCPlayerSoldier = expr_131;
									}
									protoReader.AppendExtensionData(sCPlayerSoldier);
								}
								else
								{
									if (sCPlayerSoldier == null)
									{
										SCPlayerSoldier expr_10A = new SCPlayerSoldier();
										ProtoReader.NoteObject(expr_10A, protoReader);
										sCPlayerSoldier = expr_10A;
									}
									int num2 = protoReader.ReadInt32();
									sCPlayerSoldier.skillLevel = num2;
								}
							}
							else
							{
								if (sCPlayerSoldier == null)
								{
									SCPlayerSoldier expr_D9 = new SCPlayerSoldier();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCPlayerSoldier = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								sCPlayerSoldier.star = num2;
							}
						}
						else
						{
							if (sCPlayerSoldier == null)
							{
								SCPlayerSoldier expr_A9 = new SCPlayerSoldier();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCPlayerSoldier = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCPlayerSoldier.level = num2;
						}
					}
					else
					{
						if (sCPlayerSoldier == null)
						{
							SCPlayerSoldier expr_79 = new SCPlayerSoldier();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCPlayerSoldier = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCPlayerSoldier.exp = num2;
					}
				}
				else
				{
					if (sCPlayerSoldier == null)
					{
						SCPlayerSoldier expr_49 = new SCPlayerSoldier();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerSoldier = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCPlayerSoldier.itemId = num2;
				}
			}
			else
			{
				if (sCPlayerSoldier == null)
				{
					SCPlayerSoldier expr_19 = new SCPlayerSoldier();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerSoldier = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCPlayerSoldier.id = id;
			}
		}
		if (sCPlayerSoldier == null)
		{
			SCPlayerSoldier expr_15A = new SCPlayerSoldier();
			ProtoReader.NoteObject(expr_15A, protoReader);
			sCPlayerSoldier = expr_15A;
		}
		return sCPlayerSoldier;
	}

	private static void Write(SCPlayerTaskData sCPlayerTaskData, ProtoWriter writer)
	{
		if (sCPlayerTaskData.GetType() != typeof(SCPlayerTaskData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerTaskData), sCPlayerTaskData.GetType());
		}
		long expr_2D = sCPlayerTaskData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCPlayerTaskData.count;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		bool expr_70 = sCPlayerTaskData.status;
		if (expr_70)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerTaskData, writer);
	}

	private static SCPlayerTaskData Read(SCPlayerTaskData sCPlayerTaskData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCPlayerTaskData == null)
						{
							SCPlayerTaskData expr_A0 = new SCPlayerTaskData();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCPlayerTaskData = expr_A0;
						}
						protoReader.AppendExtensionData(sCPlayerTaskData);
					}
					else
					{
						if (sCPlayerTaskData == null)
						{
							SCPlayerTaskData expr_79 = new SCPlayerTaskData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCPlayerTaskData = expr_79;
						}
						bool status = protoReader.ReadBoolean();
						sCPlayerTaskData.status = status;
					}
				}
				else
				{
					if (sCPlayerTaskData == null)
					{
						SCPlayerTaskData expr_49 = new SCPlayerTaskData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerTaskData = expr_49;
					}
					int count = protoReader.ReadInt32();
					sCPlayerTaskData.count = count;
				}
			}
			else
			{
				if (sCPlayerTaskData == null)
				{
					SCPlayerTaskData expr_19 = new SCPlayerTaskData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerTaskData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCPlayerTaskData.id = id;
			}
		}
		if (sCPlayerTaskData == null)
		{
			SCPlayerTaskData expr_C9 = new SCPlayerTaskData();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCPlayerTaskData = expr_C9;
		}
		return sCPlayerTaskData;
	}

	private static void Write(SCPlayerVipData sCPlayerVipData, ProtoWriter writer)
	{
		if (sCPlayerVipData.GetType() != typeof(SCPlayerVipData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerVipData), sCPlayerVipData.GetType());
		}
		long expr_2D = sCPlayerVipData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCPlayerVipData.superCard;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCPlayerVipData.cardEndTime;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		long expr_96 = sCPlayerVipData.cardPrizeTime;
		if (expr_96 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_96, writer);
		}
		long expr_BC = sCPlayerVipData.vipPrizeTime;
		if (expr_BC != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_BC, writer);
		}
		int expr_E2 = sCPlayerVipData.money;
		if (expr_E2 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_E2, writer);
		}
		long expr_FF = sCPlayerVipData.scardPrizeTime;
		if (expr_FF != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_FF, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerVipData, writer);
	}

	private static SCPlayerVipData Read(SCPlayerVipData sCPlayerVipData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (sCPlayerVipData == null)
										{
											SCPlayerVipData expr_160 = new SCPlayerVipData();
											ProtoReader.NoteObject(expr_160, protoReader);
											sCPlayerVipData = expr_160;
										}
										protoReader.AppendExtensionData(sCPlayerVipData);
									}
									else
									{
										if (sCPlayerVipData == null)
										{
											SCPlayerVipData expr_139 = new SCPlayerVipData();
											ProtoReader.NoteObject(expr_139, protoReader);
											sCPlayerVipData = expr_139;
										}
										long num2 = protoReader.ReadInt64();
										sCPlayerVipData.scardPrizeTime = num2;
									}
								}
								else
								{
									if (sCPlayerVipData == null)
									{
										SCPlayerVipData expr_109 = new SCPlayerVipData();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCPlayerVipData = expr_109;
									}
									int num3 = protoReader.ReadInt32();
									sCPlayerVipData.money = num3;
								}
							}
							else
							{
								if (sCPlayerVipData == null)
								{
									SCPlayerVipData expr_D9 = new SCPlayerVipData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCPlayerVipData = expr_D9;
								}
								long num2 = protoReader.ReadInt64();
								sCPlayerVipData.vipPrizeTime = num2;
							}
						}
						else
						{
							if (sCPlayerVipData == null)
							{
								SCPlayerVipData expr_A9 = new SCPlayerVipData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCPlayerVipData = expr_A9;
							}
							long num2 = protoReader.ReadInt64();
							sCPlayerVipData.cardPrizeTime = num2;
						}
					}
					else
					{
						if (sCPlayerVipData == null)
						{
							SCPlayerVipData expr_79 = new SCPlayerVipData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCPlayerVipData = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCPlayerVipData.cardEndTime = num2;
					}
				}
				else
				{
					if (sCPlayerVipData == null)
					{
						SCPlayerVipData expr_49 = new SCPlayerVipData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCPlayerVipData = expr_49;
					}
					int num3 = protoReader.ReadInt32();
					sCPlayerVipData.superCard = num3;
				}
			}
			else
			{
				if (sCPlayerVipData == null)
				{
					SCPlayerVipData expr_19 = new SCPlayerVipData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerVipData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCPlayerVipData.id = num2;
			}
		}
		if (sCPlayerVipData == null)
		{
			SCPlayerVipData expr_189 = new SCPlayerVipData();
			ProtoReader.NoteObject(expr_189, protoReader);
			sCPlayerVipData = expr_189;
		}
		return sCPlayerVipData;
	}

	private static void Write(SCPlayerWorldMap sCPlayerWorldMap, ProtoWriter writer)
	{
		if (sCPlayerWorldMap.GetType() != typeof(SCPlayerWorldMap))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCPlayerWorldMap), sCPlayerWorldMap.GetType());
		}
		List<int> expr_2D = sCPlayerWorldMap.openGroupId;
		if (expr_2D != null)
		{
			List<int> list = expr_2D;
			foreach (int arg_53_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
				ProtoWriter.WriteInt32(arg_53_0, writer);
			}
		}
		long expr_82 = sCPlayerWorldMap.id;
		if (expr_82 != 0L)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_82, writer);
		}
		ProtoWriter.AppendExtensionData(sCPlayerWorldMap, writer);
	}

	private static SCPlayerWorldMap Read(SCPlayerWorldMap sCPlayerWorldMap, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 5)
				{
					if (sCPlayerWorldMap == null)
					{
						SCPlayerWorldMap expr_CB = new SCPlayerWorldMap();
						ProtoReader.NoteObject(expr_CB, protoReader);
						sCPlayerWorldMap = expr_CB;
					}
					protoReader.AppendExtensionData(sCPlayerWorldMap);
				}
				else
				{
					if (sCPlayerWorldMap == null)
					{
						SCPlayerWorldMap expr_A4 = new SCPlayerWorldMap();
						ProtoReader.NoteObject(expr_A4, protoReader);
						sCPlayerWorldMap = expr_A4;
					}
					long id = protoReader.ReadInt64();
					sCPlayerWorldMap.id = id;
				}
			}
			else
			{
				if (sCPlayerWorldMap == null)
				{
					SCPlayerWorldMap expr_19 = new SCPlayerWorldMap();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCPlayerWorldMap = expr_19;
				}
				List<int> list = sCPlayerWorldMap.openGroupId;
				if (list == null)
				{
					list = new List<int>();
				}
				if (protoReader.WireType != WireType.String)
				{
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						list.Add(protoReader.ReadInt32());
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
				else
				{
					SubItemToken arg_86_0 = ProtoReader.StartSubItem(protoReader);
					while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
					{
						list.Add(protoReader.ReadInt32());
					}
					ProtoReader.EndSubItem(arg_86_0, protoReader);
				}
			}
		}
		if (sCPlayerWorldMap == null)
		{
			SCPlayerWorldMap expr_F4 = new SCPlayerWorldMap();
			ProtoReader.NoteObject(expr_F4, protoReader);
			sCPlayerWorldMap = expr_F4;
		}
		return sCPlayerWorldMap;
	}

	private static void Write(SCProfile sCProfile, ProtoWriter writer)
	{
		if (sCProfile.GetType() != typeof(SCProfile))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCProfile), sCProfile.GetType());
		}
		long expr_2D = sCProfile.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCProfile.key;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		string expr_70 = sCProfile.value;
		if (expr_70 != null)
		{
			if (!(expr_70 == ""))
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, writer);
				ProtoWriter.WriteString(expr_70, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCProfile, writer);
	}

	private static SCProfile Read(SCProfile sCProfile, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCProfile == null)
						{
							SCProfile expr_A3 = new SCProfile();
							ProtoReader.NoteObject(expr_A3, protoReader);
							sCProfile = expr_A3;
						}
						protoReader.AppendExtensionData(sCProfile);
					}
					else
					{
						if (sCProfile == null)
						{
							SCProfile expr_79 = new SCProfile();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCProfile = expr_79;
						}
						string text = protoReader.ReadString();
						if (text != null)
						{
							sCProfile.value = text;
						}
					}
				}
				else
				{
					if (sCProfile == null)
					{
						SCProfile expr_49 = new SCProfile();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCProfile = expr_49;
					}
					int key = protoReader.ReadInt32();
					sCProfile.key = key;
				}
			}
			else
			{
				if (sCProfile == null)
				{
					SCProfile expr_19 = new SCProfile();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCProfile = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCProfile.id = id;
			}
		}
		if (sCProfile == null)
		{
			SCProfile expr_CC = new SCProfile();
			ProtoReader.NoteObject(expr_CC, protoReader);
			sCProfile = expr_CC;
		}
		return sCProfile;
	}

	private static void Write(SCRanking sCRanking, ProtoWriter protoWriter)
	{
		if (sCRanking.GetType() != typeof(SCRanking))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRanking), sCRanking.GetType());
		}
		long expr_2D = sCRanking.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStructStr> expr_53 = sCRanking.ids;
		if (expr_53 != null)
		{
			List<KVStructStr> list = expr_53;
			foreach (KVStructStr arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_B7 = sCRanking.type;
		if (expr_B7 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_B7, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCRanking, protoWriter);
	}

	private static SCRanking Read(SCRanking sCRanking, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCRanking == null)
						{
							SCRanking expr_D2 = new SCRanking();
							ProtoReader.NoteObject(expr_D2, protoReader);
							sCRanking = expr_D2;
						}
						protoReader.AppendExtensionData(sCRanking);
					}
					else
					{
						if (sCRanking == null)
						{
							SCRanking expr_AB = new SCRanking();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCRanking = expr_AB;
						}
						int num2 = protoReader.ReadInt32();
						sCRanking.type = num2;
					}
				}
				else
				{
					if (sCRanking == null)
					{
						SCRanking expr_49 = new SCRanking();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRanking = expr_49;
					}
					List<KVStructStr> list = sCRanking.ids;
					if (list == null)
					{
						list = new List<KVStructStr>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<KVStructStr> arg_81_0 = list;
						KVStructStr arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStructStr arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (sCRanking == null)
				{
					SCRanking expr_19 = new SCRanking();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRanking = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCRanking.id = id;
			}
		}
		if (sCRanking == null)
		{
			SCRanking expr_FB = new SCRanking();
			ProtoReader.NoteObject(expr_FB, protoReader);
			sCRanking = expr_FB;
		}
		return sCRanking;
	}

	private static void Write(SCRankingList sCRankingList, ProtoWriter protoWriter)
	{
		if (sCRankingList.GetType() != typeof(SCRankingList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRankingList), sCRankingList.GetType());
		}
		long expr_2D = sCRankingList.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<RankingData> expr_53 = sCRankingList.ranking;
		if (expr_53 != null)
		{
			List<RankingData> list = expr_53;
			foreach (RankingData arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_B7 = sCRankingList.ownRank;
		if (expr_B7 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_B7, protoWriter);
		}
		int expr_D4 = sCRankingList.flushHour;
		if (expr_D4 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_D4, protoWriter);
		}
		int expr_F1 = sCRankingList.beforeBest;
		if (expr_F1 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_F1, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCRankingList, protoWriter);
	}

	private static SCRankingList Read(SCRankingList sCRankingList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (sCRankingList == null)
								{
									SCRankingList expr_132 = new SCRankingList();
									ProtoReader.NoteObject(expr_132, protoReader);
									sCRankingList = expr_132;
								}
								protoReader.AppendExtensionData(sCRankingList);
							}
							else
							{
								if (sCRankingList == null)
								{
									SCRankingList expr_10B = new SCRankingList();
									ProtoReader.NoteObject(expr_10B, protoReader);
									sCRankingList = expr_10B;
								}
								int num2 = protoReader.ReadInt32();
								sCRankingList.beforeBest = num2;
							}
						}
						else
						{
							if (sCRankingList == null)
							{
								SCRankingList expr_DB = new SCRankingList();
								ProtoReader.NoteObject(expr_DB, protoReader);
								sCRankingList = expr_DB;
							}
							int num2 = protoReader.ReadInt32();
							sCRankingList.flushHour = num2;
						}
					}
					else
					{
						if (sCRankingList == null)
						{
							SCRankingList expr_AB = new SCRankingList();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCRankingList = expr_AB;
						}
						int num2 = protoReader.ReadInt32();
						sCRankingList.ownRank = num2;
					}
				}
				else
				{
					if (sCRankingList == null)
					{
						SCRankingList expr_49 = new SCRankingList();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRankingList = expr_49;
					}
					List<RankingData> list = sCRankingList.ranking;
					if (list == null)
					{
						list = new List<RankingData>();
					}
					int num2 = protoReader.FieldNumber;
					do
					{
						List<RankingData> arg_81_0 = list;
						RankingData arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						RankingData arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(num2));
				}
			}
			else
			{
				if (sCRankingList == null)
				{
					SCRankingList expr_19 = new SCRankingList();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRankingList = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCRankingList.id = id;
			}
		}
		if (sCRankingList == null)
		{
			SCRankingList expr_15B = new SCRankingList();
			ProtoReader.NoteObject(expr_15B, protoReader);
			sCRankingList = expr_15B;
		}
		return sCRankingList;
	}

	private static void Write(SCRankingPrizeData sCRankingPrizeData, ProtoWriter protoWriter)
	{
		if (sCRankingPrizeData.GetType() != typeof(SCRankingPrizeData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRankingPrizeData), sCRankingPrizeData.GetType());
		}
		long expr_2D = sCRankingPrizeData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCRankingPrizeData.res;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = sCRankingPrizeData.items;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		bool expr_11B = sCRankingPrizeData.prize;
		if (expr_11B)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_11B, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCRankingPrizeData, protoWriter);
	}

	private static SCRankingPrizeData Read(SCRankingPrizeData sCRankingPrizeData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCRankingPrizeData == null)
							{
								SCRankingPrizeData expr_136 = new SCRankingPrizeData();
								ProtoReader.NoteObject(expr_136, protoReader);
								sCRankingPrizeData = expr_136;
							}
							protoReader.AppendExtensionData(sCRankingPrizeData);
						}
						else
						{
							if (sCRankingPrizeData == null)
							{
								SCRankingPrizeData expr_10D = new SCRankingPrizeData();
								ProtoReader.NoteObject(expr_10D, protoReader);
								sCRankingPrizeData = expr_10D;
							}
							bool prize = protoReader.ReadBoolean();
							sCRankingPrizeData.prize = prize;
						}
					}
					else
					{
						if (sCRankingPrizeData == null)
						{
							SCRankingPrizeData expr_AB = new SCRankingPrizeData();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCRankingPrizeData = expr_AB;
						}
						List<KVStruct> list = sCRankingPrizeData.items;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sCRankingPrizeData == null)
					{
						SCRankingPrizeData expr_49 = new SCRankingPrizeData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRankingPrizeData = expr_49;
					}
					List<KVStruct> list = sCRankingPrizeData.res;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCRankingPrizeData == null)
				{
					SCRankingPrizeData expr_19 = new SCRankingPrizeData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRankingPrizeData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCRankingPrizeData.id = id;
			}
		}
		if (sCRankingPrizeData == null)
		{
			SCRankingPrizeData expr_15F = new SCRankingPrizeData();
			ProtoReader.NoteObject(expr_15F, protoReader);
			sCRankingPrizeData = expr_15F;
		}
		return sCRankingPrizeData;
	}

	private static void Write(SCRankingPrizeList sCRankingPrizeList, ProtoWriter writer)
	{
		if (sCRankingPrizeList.GetType() != typeof(SCRankingPrizeList))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRankingPrizeList), sCRankingPrizeList.GetType());
		}
		long expr_2D = sCRankingPrizeList.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCRankingPrizeList.prizeDay;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCRankingPrizeList.prizeHour;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCRankingPrizeList, writer);
	}

	private static SCRankingPrizeList Read(SCRankingPrizeList sCRankingPrizeList, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCRankingPrizeList == null)
						{
							SCRankingPrizeList expr_A0 = new SCRankingPrizeList();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCRankingPrizeList = expr_A0;
						}
						protoReader.AppendExtensionData(sCRankingPrizeList);
					}
					else
					{
						if (sCRankingPrizeList == null)
						{
							SCRankingPrizeList expr_79 = new SCRankingPrizeList();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCRankingPrizeList = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCRankingPrizeList.prizeHour = num2;
					}
				}
				else
				{
					if (sCRankingPrizeList == null)
					{
						SCRankingPrizeList expr_49 = new SCRankingPrizeList();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRankingPrizeList = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCRankingPrizeList.prizeDay = num2;
				}
			}
			else
			{
				if (sCRankingPrizeList == null)
				{
					SCRankingPrizeList expr_19 = new SCRankingPrizeList();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRankingPrizeList = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCRankingPrizeList.id = id;
			}
		}
		if (sCRankingPrizeList == null)
		{
			SCRankingPrizeList expr_C9 = new SCRankingPrizeList();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCRankingPrizeList = expr_C9;
		}
		return sCRankingPrizeList;
	}

	private static void Write(SCRecruitInfoData sCRecruitInfoData, ProtoWriter writer)
	{
		if (sCRecruitInfoData.GetType() != typeof(SCRecruitInfoData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRecruitInfoData), sCRecruitInfoData.GetType());
		}
		long expr_2D = sCRecruitInfoData.flushTime;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCRecruitInfoData.remainTimes;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCRecruitInfoData.id;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCRecruitInfoData, writer);
	}

	private static SCRecruitInfoData Read(SCRecruitInfoData sCRecruitInfoData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (sCRecruitInfoData == null)
						{
							SCRecruitInfoData expr_A0 = new SCRecruitInfoData();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCRecruitInfoData = expr_A0;
						}
						protoReader.AppendExtensionData(sCRecruitInfoData);
					}
					else
					{
						if (sCRecruitInfoData == null)
						{
							SCRecruitInfoData expr_79 = new SCRecruitInfoData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCRecruitInfoData = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCRecruitInfoData.id = num2;
					}
				}
				else
				{
					if (sCRecruitInfoData == null)
					{
						SCRecruitInfoData expr_49 = new SCRecruitInfoData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRecruitInfoData = expr_49;
					}
					int remainTimes = protoReader.ReadInt32();
					sCRecruitInfoData.remainTimes = remainTimes;
				}
			}
			else
			{
				if (sCRecruitInfoData == null)
				{
					SCRecruitInfoData expr_19 = new SCRecruitInfoData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRecruitInfoData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCRecruitInfoData.flushTime = num2;
			}
		}
		if (sCRecruitInfoData == null)
		{
			SCRecruitInfoData expr_C9 = new SCRecruitInfoData();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCRecruitInfoData = expr_C9;
		}
		return sCRecruitInfoData;
	}

	private static void Write(SCRelationData sCRelationData, ProtoWriter protoWriter)
	{
		if (sCRelationData.GetType() != typeof(SCRelationData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRelationData), sCRelationData.GetType());
		}
		long expr_2D = sCRelationData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		long expr_53 = sCRelationData.relationId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_53, protoWriter);
		}
		int expr_79 = sCRelationData.type;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_79, protoWriter);
		}
		long expr_96 = sCRelationData.userId;
		if (expr_96 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_96, protoWriter);
		}
		int expr_BC = sCRelationData.level;
		if (expr_BC != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_BC, protoWriter);
		}
		string expr_D9 = sCRelationData.name;
		if (expr_D9 != null)
		{
			if (!(expr_D9 == ""))
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_D9, protoWriter);
			}
		}
		string expr_109 = sCRelationData.teamName;
		if (expr_109 != null)
		{
			if (!(expr_109 == ""))
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_109, protoWriter);
			}
		}
		int expr_139 = sCRelationData.medalNum;
		if (expr_139 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_139, protoWriter);
		}
		List<KVStruct> expr_156 = sCRelationData.lostReses;
		if (expr_156 != null)
		{
			List<KVStruct> list = expr_156;
			foreach (KVStruct arg_17C_0 in list)
			{
				ProtoWriter.WriteFieldHeader(9, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_17C_0, protoWriter);
				ProtoMsgSerializer.Write(arg_17C_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_1BB = sCRelationData.reportId;
		if (expr_1BB != 0L)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_1BB, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCRelationData, protoWriter);
	}

	private static SCRelationData Read(SCRelationData sCRelationData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 10)
												{
													if (sCRelationData == null)
													{
														SCRelationData expr_22E = new SCRelationData();
														ProtoReader.NoteObject(expr_22E, protoReader);
														sCRelationData = expr_22E;
													}
													protoReader.AppendExtensionData(sCRelationData);
												}
												else
												{
													if (sCRelationData == null)
													{
														SCRelationData expr_207 = new SCRelationData();
														ProtoReader.NoteObject(expr_207, protoReader);
														sCRelationData = expr_207;
													}
													long num2 = protoReader.ReadInt64();
													sCRelationData.reportId = num2;
												}
											}
											else
											{
												if (sCRelationData == null)
												{
													SCRelationData expr_1A0 = new SCRelationData();
													ProtoReader.NoteObject(expr_1A0, protoReader);
													sCRelationData = expr_1A0;
												}
												List<KVStruct> list = sCRelationData.lostReses;
												if (list == null)
												{
													list = new List<KVStruct>();
												}
												int num3 = protoReader.FieldNumber;
												do
												{
													List<KVStruct> arg_1DC_0 = list;
													KVStruct arg_1CF_0 = null;
													SubItemToken token = ProtoReader.StartSubItem(protoReader);
													KVStruct arg_1DC_1 = ProtoMsgSerializer.Read(arg_1CF_0, protoReader);
													ProtoReader.EndSubItem(token, protoReader);
													arg_1DC_0.Add(arg_1DC_1);
												}
												while (protoReader.TryReadFieldHeader(num3));
											}
										}
										else
										{
											if (sCRelationData == null)
											{
												SCRelationData expr_16F = new SCRelationData();
												ProtoReader.NoteObject(expr_16F, protoReader);
												sCRelationData = expr_16F;
											}
											int num3 = protoReader.ReadInt32();
											sCRelationData.medalNum = num3;
										}
									}
									else
									{
										if (sCRelationData == null)
										{
											SCRelationData expr_13C = new SCRelationData();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCRelationData = expr_13C;
										}
										string text = protoReader.ReadString();
										if (text != null)
										{
											sCRelationData.teamName = text;
										}
									}
								}
								else
								{
									if (sCRelationData == null)
									{
										SCRelationData expr_109 = new SCRelationData();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCRelationData = expr_109;
									}
									string text = protoReader.ReadString();
									if (text != null)
									{
										sCRelationData.name = text;
									}
								}
							}
							else
							{
								if (sCRelationData == null)
								{
									SCRelationData expr_D9 = new SCRelationData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCRelationData = expr_D9;
								}
								int num3 = protoReader.ReadInt32();
								sCRelationData.level = num3;
							}
						}
						else
						{
							if (sCRelationData == null)
							{
								SCRelationData expr_A9 = new SCRelationData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCRelationData = expr_A9;
							}
							long num2 = protoReader.ReadInt64();
							sCRelationData.userId = num2;
						}
					}
					else
					{
						if (sCRelationData == null)
						{
							SCRelationData expr_79 = new SCRelationData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCRelationData = expr_79;
						}
						int num3 = protoReader.ReadInt32();
						sCRelationData.type = num3;
					}
				}
				else
				{
					if (sCRelationData == null)
					{
						SCRelationData expr_49 = new SCRelationData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRelationData = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCRelationData.relationId = num2;
				}
			}
			else
			{
				if (sCRelationData == null)
				{
					SCRelationData expr_19 = new SCRelationData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRelationData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCRelationData.id = num2;
			}
		}
		if (sCRelationData == null)
		{
			SCRelationData expr_257 = new SCRelationData();
			ProtoReader.NoteObject(expr_257, protoReader);
			sCRelationData = expr_257;
		}
		return sCRelationData;
	}

	private static void Write(SCRelationRemove sCRelationRemove, ProtoWriter writer)
	{
		if (sCRelationRemove.GetType() != typeof(SCRelationRemove))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCRelationRemove), sCRelationRemove.GetType());
		}
		long expr_2D = sCRelationRemove.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCRelationRemove.relationId;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		int expr_79 = sCRelationRemove.type;
		if (expr_79 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_79, writer);
		}
		ProtoWriter.AppendExtensionData(sCRelationRemove, writer);
	}

	private static SCRelationRemove Read(SCRelationRemove sCRelationRemove, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCRelationRemove == null)
						{
							SCRelationRemove expr_A0 = new SCRelationRemove();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCRelationRemove = expr_A0;
						}
						protoReader.AppendExtensionData(sCRelationRemove);
					}
					else
					{
						if (sCRelationRemove == null)
						{
							SCRelationRemove expr_79 = new SCRelationRemove();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCRelationRemove = expr_79;
						}
						int type = protoReader.ReadInt32();
						sCRelationRemove.type = type;
					}
				}
				else
				{
					if (sCRelationRemove == null)
					{
						SCRelationRemove expr_49 = new SCRelationRemove();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCRelationRemove = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCRelationRemove.relationId = num2;
				}
			}
			else
			{
				if (sCRelationRemove == null)
				{
					SCRelationRemove expr_19 = new SCRelationRemove();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCRelationRemove = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCRelationRemove.id = num2;
			}
		}
		if (sCRelationRemove == null)
		{
			SCRelationRemove expr_C9 = new SCRelationRemove();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCRelationRemove = expr_C9;
		}
		return sCRelationRemove;
	}

	private static void Write(SCReportCountData sCReportCountData, ProtoWriter writer)
	{
		if (sCReportCountData.GetType() != typeof(SCReportCountData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCReportCountData), sCReportCountData.GetType());
		}
		long expr_2D = sCReportCountData.countTime;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCReportCountData.spyTimes;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCReportCountData.atkTimes;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		int expr_8D = sCReportCountData.winTimes;
		if (expr_8D != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_8D, writer);
		}
		int expr_AA = sCReportCountData.type;
		if (expr_AA != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_AA, writer);
		}
		long expr_C7 = sCReportCountData.id;
		if (expr_C7 != 0L)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_C7, writer);
		}
		ProtoWriter.AppendExtensionData(sCReportCountData, writer);
	}

	private static SCReportCountData Read(SCReportCountData sCReportCountData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (sCReportCountData == null)
									{
										SCReportCountData expr_130 = new SCReportCountData();
										ProtoReader.NoteObject(expr_130, protoReader);
										sCReportCountData = expr_130;
									}
									protoReader.AppendExtensionData(sCReportCountData);
								}
								else
								{
									if (sCReportCountData == null)
									{
										SCReportCountData expr_109 = new SCReportCountData();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCReportCountData = expr_109;
									}
									long num2 = protoReader.ReadInt64();
									sCReportCountData.id = num2;
								}
							}
							else
							{
								if (sCReportCountData == null)
								{
									SCReportCountData expr_D9 = new SCReportCountData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCReportCountData = expr_D9;
								}
								int num3 = protoReader.ReadInt32();
								sCReportCountData.type = num3;
							}
						}
						else
						{
							if (sCReportCountData == null)
							{
								SCReportCountData expr_A9 = new SCReportCountData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCReportCountData = expr_A9;
							}
							int num3 = protoReader.ReadInt32();
							sCReportCountData.winTimes = num3;
						}
					}
					else
					{
						if (sCReportCountData == null)
						{
							SCReportCountData expr_79 = new SCReportCountData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCReportCountData = expr_79;
						}
						int num3 = protoReader.ReadInt32();
						sCReportCountData.atkTimes = num3;
					}
				}
				else
				{
					if (sCReportCountData == null)
					{
						SCReportCountData expr_49 = new SCReportCountData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCReportCountData = expr_49;
					}
					int num3 = protoReader.ReadInt32();
					sCReportCountData.spyTimes = num3;
				}
			}
			else
			{
				if (sCReportCountData == null)
				{
					SCReportCountData expr_19 = new SCReportCountData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCReportCountData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCReportCountData.countTime = num2;
			}
		}
		if (sCReportCountData == null)
		{
			SCReportCountData expr_159 = new SCReportCountData();
			ProtoReader.NoteObject(expr_159, protoReader);
			sCReportCountData = expr_159;
		}
		return sCReportCountData;
	}

	private static void Write(SCReportData sCReportData, ProtoWriter protoWriter)
	{
		if (sCReportData.GetType() != typeof(SCReportData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCReportData), sCReportData.GetType());
		}
		int expr_2D = sCReportData.type;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		int expr_4A = sCReportData.islandIdx;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_4A, protoWriter);
		}
		long expr_67 = sCReportData.beginTime;
		if (expr_67 != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_67, protoWriter);
		}
		bool expr_8D = sCReportData.fighterWin;
		if (expr_8D)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_8D, protoWriter);
		}
		long expr_AA = sCReportData.fighterId;
		if (expr_AA != 0L)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_AA, protoWriter);
		}
		string expr_D0 = sCReportData.fighterName;
		if (expr_D0 != null)
		{
			if (!(expr_D0 == ""))
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_D0, protoWriter);
			}
		}
		int expr_100 = sCReportData.fighterLevel;
		if (expr_100 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_100, protoWriter);
		}
		int expr_11D = sCReportData.fighterMedal;
		if (expr_11D != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_11D, protoWriter);
		}
		List<KVStruct> expr_13B = sCReportData.lossRes;
		if (expr_13B != null)
		{
			List<KVStruct> list = expr_13B;
			foreach (KVStruct arg_161_0 in list)
			{
				ProtoWriter.WriteFieldHeader(10, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_161_0, protoWriter);
				ProtoMsgSerializer.Write(arg_161_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_1A0 = sCReportData.sendArmys;
		if (expr_1A0 != null)
		{
			List<KVStruct> list = expr_1A0;
			foreach (KVStruct arg_1C6_0 in list)
			{
				ProtoWriter.WriteFieldHeader(11, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_1C6_0, protoWriter);
				ProtoMsgSerializer.Write(arg_1C6_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_205 = sCReportData.destroyArmys;
		if (expr_205 != null)
		{
			List<KVStruct> list = expr_205;
			foreach (KVStruct arg_22B_0 in list)
			{
				ProtoWriter.WriteFieldHeader(12, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_22B_0, protoWriter);
				ProtoMsgSerializer.Write(arg_22B_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_26A = sCReportData.additions;
		if (expr_26A != null)
		{
			List<KVStruct> list = expr_26A;
			foreach (KVStruct arg_290_0 in list)
			{
				ProtoWriter.WriteFieldHeader(13, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_290_0, protoWriter);
				ProtoMsgSerializer.Write(arg_290_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		string expr_2CF = sCReportData.targetName;
		if (expr_2CF != null)
		{
			if (!(expr_2CF == ""))
			{
				ProtoWriter.WriteFieldHeader(14, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_2CF, protoWriter);
			}
		}
		long expr_300 = sCReportData.targetId;
		if (expr_300 != 0L)
		{
			ProtoWriter.WriteFieldHeader(15, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_300, protoWriter);
		}
		int expr_327 = sCReportData.targetLevel;
		if (expr_327 != 0)
		{
			ProtoWriter.WriteFieldHeader(16, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_327, protoWriter);
		}
		long expr_345 = sCReportData.worldMapId;
		if (expr_345 != 0L)
		{
			ProtoWriter.WriteFieldHeader(17, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_345, protoWriter);
		}
		List<KVStruct> expr_36C = sCReportData.addItems;
		if (expr_36C != null)
		{
			List<KVStruct> list = expr_36C;
			foreach (KVStruct arg_392_0 in list)
			{
				ProtoWriter.WriteFieldHeader(18, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_392_0, protoWriter);
				ProtoMsgSerializer.Write(arg_392_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_3D1 = sCReportData.relation;
		if (expr_3D1 != 0)
		{
			ProtoWriter.WriteFieldHeader(19, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_3D1, protoWriter);
		}
		long expr_3EF = sCReportData.videoId;
		if (expr_3EF != 0L)
		{
			ProtoWriter.WriteFieldHeader(20, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_3EF, protoWriter);
		}
		long expr_416 = sCReportData.id;
		if (expr_416 != 0L)
		{
			ProtoWriter.WriteFieldHeader(21, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_416, protoWriter);
		}
		bool expr_43D = sCReportData.canRevenge;
		if (expr_43D)
		{
			ProtoWriter.WriteFieldHeader(22, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_43D, protoWriter);
		}
		int expr_45B = sCReportData.money;
		if (expr_45B != 0)
		{
			ProtoWriter.WriteFieldHeader(23, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_45B, protoWriter);
		}
		long expr_479 = sCReportData.receiveMoneyTime;
		if (expr_479 != 0L)
		{
			ProtoWriter.WriteFieldHeader(24, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_479, protoWriter);
		}
		List<KVStruct> expr_4A0 = sCReportData.addRes;
		if (expr_4A0 != null)
		{
			List<KVStruct> list = expr_4A0;
			foreach (KVStruct arg_4C6_0 in list)
			{
				ProtoWriter.WriteFieldHeader(25, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_4C6_0, protoWriter);
				ProtoMsgSerializer.Write(arg_4C6_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_505 = sCReportData.addEquips;
		if (expr_505 != null)
		{
			List<KVStruct> list = expr_505;
			foreach (KVStruct arg_52B_0 in list)
			{
				ProtoWriter.WriteFieldHeader(26, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52B_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52B_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		bool expr_56A = sCReportData.unRead;
		if (expr_56A)
		{
			ProtoWriter.WriteFieldHeader(27, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_56A, protoWriter);
		}
		int expr_588 = sCReportData.sendSoldier;
		if (expr_588 != 0)
		{
			ProtoWriter.WriteFieldHeader(28, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_588, protoWriter);
		}
		int expr_5A6 = sCReportData.lossSoldier;
		if (expr_5A6 != 0)
		{
			ProtoWriter.WriteFieldHeader(29, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_5A6, protoWriter);
		}
		int expr_5C4 = sCReportData.fighterChangedMedal;
		if (expr_5C4 != 0)
		{
			ProtoWriter.WriteFieldHeader(30, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_5C4, protoWriter);
		}
		int expr_5E2 = sCReportData.targetChangedMedal;
		if (expr_5E2 != 0)
		{
			ProtoWriter.WriteFieldHeader(31, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_5E2, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCReportData, protoWriter);
	}

	private static SCReportData Read(SCReportData sCReportData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (num != 11)
												{
													if (num != 12)
													{
														if (num != 13)
														{
															if (num != 14)
															{
																if (num != 15)
																{
																	if (num != 16)
																	{
																		if (num != 17)
																		{
																			if (num != 18)
																			{
																				if (num != 19)
																				{
																					if (num != 20)
																					{
																						if (num != 21)
																						{
																							if (num != 22)
																							{
																								if (num != 23)
																								{
																									if (num != 24)
																									{
																										if (num != 25)
																										{
																											if (num != 26)
																											{
																												if (num != 27)
																												{
																													if (num != 28)
																													{
																														if (num != 29)
																														{
																															if (num != 30)
																															{
																																if (num != 31)
																																{
																																	if (sCReportData == null)
																																	{
																																		SCReportData expr_74D = new SCReportData();
																																		ProtoReader.NoteObject(expr_74D, protoReader);
																																		sCReportData = expr_74D;
																																	}
																																	protoReader.AppendExtensionData(sCReportData);
																																}
																																else
																																{
																																	if (sCReportData == null)
																																	{
																																		SCReportData expr_726 = new SCReportData();
																																		ProtoReader.NoteObject(expr_726, protoReader);
																																		sCReportData = expr_726;
																																	}
																																	int num2 = protoReader.ReadInt32();
																																	sCReportData.targetChangedMedal = num2;
																																}
																															}
																															else
																															{
																																if (sCReportData == null)
																																{
																																	SCReportData expr_6F5 = new SCReportData();
																																	ProtoReader.NoteObject(expr_6F5, protoReader);
																																	sCReportData = expr_6F5;
																																}
																																int num2 = protoReader.ReadInt32();
																																sCReportData.fighterChangedMedal = num2;
																															}
																														}
																														else
																														{
																															if (sCReportData == null)
																															{
																																SCReportData expr_6C4 = new SCReportData();
																																ProtoReader.NoteObject(expr_6C4, protoReader);
																																sCReportData = expr_6C4;
																															}
																															int num2 = protoReader.ReadInt32();
																															sCReportData.lossSoldier = num2;
																														}
																													}
																													else
																													{
																														if (sCReportData == null)
																														{
																															SCReportData expr_693 = new SCReportData();
																															ProtoReader.NoteObject(expr_693, protoReader);
																															sCReportData = expr_693;
																														}
																														int num2 = protoReader.ReadInt32();
																														sCReportData.sendSoldier = num2;
																													}
																												}
																												else
																												{
																													if (sCReportData == null)
																													{
																														SCReportData expr_662 = new SCReportData();
																														ProtoReader.NoteObject(expr_662, protoReader);
																														sCReportData = expr_662;
																													}
																													bool flag = protoReader.ReadBoolean();
																													sCReportData.unRead = flag;
																												}
																											}
																											else
																											{
																												if (sCReportData == null)
																												{
																													SCReportData expr_5FB = new SCReportData();
																													ProtoReader.NoteObject(expr_5FB, protoReader);
																													sCReportData = expr_5FB;
																												}
																												List<KVStruct> list = sCReportData.addEquips;
																												if (list == null)
																												{
																													list = new List<KVStruct>();
																												}
																												int num2 = protoReader.FieldNumber;
																												do
																												{
																													List<KVStruct> arg_637_0 = list;
																													KVStruct arg_62A_0 = null;
																													SubItemToken token = ProtoReader.StartSubItem(protoReader);
																													KVStruct arg_637_1 = ProtoMsgSerializer.Read(arg_62A_0, protoReader);
																													ProtoReader.EndSubItem(token, protoReader);
																													arg_637_0.Add(arg_637_1);
																												}
																												while (protoReader.TryReadFieldHeader(num2));
																											}
																										}
																										else
																										{
																											if (sCReportData == null)
																											{
																												SCReportData expr_594 = new SCReportData();
																												ProtoReader.NoteObject(expr_594, protoReader);
																												sCReportData = expr_594;
																											}
																											List<KVStruct> list = sCReportData.addRes;
																											if (list == null)
																											{
																												list = new List<KVStruct>();
																											}
																											int num2 = protoReader.FieldNumber;
																											do
																											{
																												List<KVStruct> arg_5D0_0 = list;
																												KVStruct arg_5C3_0 = null;
																												SubItemToken token = ProtoReader.StartSubItem(protoReader);
																												KVStruct arg_5D0_1 = ProtoMsgSerializer.Read(arg_5C3_0, protoReader);
																												ProtoReader.EndSubItem(token, protoReader);
																												arg_5D0_0.Add(arg_5D0_1);
																											}
																											while (protoReader.TryReadFieldHeader(num2));
																										}
																									}
																									else
																									{
																										if (sCReportData == null)
																										{
																											SCReportData expr_563 = new SCReportData();
																											ProtoReader.NoteObject(expr_563, protoReader);
																											sCReportData = expr_563;
																										}
																										long num3 = protoReader.ReadInt64();
																										sCReportData.receiveMoneyTime = num3;
																									}
																								}
																								else
																								{
																									if (sCReportData == null)
																									{
																										SCReportData expr_532 = new SCReportData();
																										ProtoReader.NoteObject(expr_532, protoReader);
																										sCReportData = expr_532;
																									}
																									int num2 = protoReader.ReadInt32();
																									sCReportData.money = num2;
																								}
																							}
																							else
																							{
																								if (sCReportData == null)
																								{
																									SCReportData expr_501 = new SCReportData();
																									ProtoReader.NoteObject(expr_501, protoReader);
																									sCReportData = expr_501;
																								}
																								bool flag = protoReader.ReadBoolean();
																								sCReportData.canRevenge = flag;
																							}
																						}
																						else
																						{
																							if (sCReportData == null)
																							{
																								SCReportData expr_4D0 = new SCReportData();
																								ProtoReader.NoteObject(expr_4D0, protoReader);
																								sCReportData = expr_4D0;
																							}
																							long num3 = protoReader.ReadInt64();
																							sCReportData.id = num3;
																						}
																					}
																					else
																					{
																						if (sCReportData == null)
																						{
																							SCReportData expr_49F = new SCReportData();
																							ProtoReader.NoteObject(expr_49F, protoReader);
																							sCReportData = expr_49F;
																						}
																						long num3 = protoReader.ReadInt64();
																						sCReportData.videoId = num3;
																					}
																				}
																				else
																				{
																					if (sCReportData == null)
																					{
																						SCReportData expr_46E = new SCReportData();
																						ProtoReader.NoteObject(expr_46E, protoReader);
																						sCReportData = expr_46E;
																					}
																					int num2 = protoReader.ReadInt32();
																					sCReportData.relation = num2;
																				}
																			}
																			else
																			{
																				if (sCReportData == null)
																				{
																					SCReportData expr_407 = new SCReportData();
																					ProtoReader.NoteObject(expr_407, protoReader);
																					sCReportData = expr_407;
																				}
																				List<KVStruct> list = sCReportData.addItems;
																				if (list == null)
																				{
																					list = new List<KVStruct>();
																				}
																				int num2 = protoReader.FieldNumber;
																				do
																				{
																					List<KVStruct> arg_443_0 = list;
																					KVStruct arg_436_0 = null;
																					SubItemToken token = ProtoReader.StartSubItem(protoReader);
																					KVStruct arg_443_1 = ProtoMsgSerializer.Read(arg_436_0, protoReader);
																					ProtoReader.EndSubItem(token, protoReader);
																					arg_443_0.Add(arg_443_1);
																				}
																				while (protoReader.TryReadFieldHeader(num2));
																			}
																		}
																		else
																		{
																			if (sCReportData == null)
																			{
																				SCReportData expr_3D6 = new SCReportData();
																				ProtoReader.NoteObject(expr_3D6, protoReader);
																				sCReportData = expr_3D6;
																			}
																			long num3 = protoReader.ReadInt64();
																			sCReportData.worldMapId = num3;
																		}
																	}
																	else
																	{
																		if (sCReportData == null)
																		{
																			SCReportData expr_3A5 = new SCReportData();
																			ProtoReader.NoteObject(expr_3A5, protoReader);
																			sCReportData = expr_3A5;
																		}
																		int num2 = protoReader.ReadInt32();
																		sCReportData.targetLevel = num2;
																	}
																}
																else
																{
																	if (sCReportData == null)
																	{
																		SCReportData expr_374 = new SCReportData();
																		ProtoReader.NoteObject(expr_374, protoReader);
																		sCReportData = expr_374;
																	}
																	long num3 = protoReader.ReadInt64();
																	sCReportData.targetId = num3;
																}
															}
															else
															{
																if (sCReportData == null)
																{
																	SCReportData expr_33D = new SCReportData();
																	ProtoReader.NoteObject(expr_33D, protoReader);
																	sCReportData = expr_33D;
																}
																string text = protoReader.ReadString();
																if (text != null)
																{
																	sCReportData.targetName = text;
																}
															}
														}
														else
														{
															if (sCReportData == null)
															{
																SCReportData expr_2D6 = new SCReportData();
																ProtoReader.NoteObject(expr_2D6, protoReader);
																sCReportData = expr_2D6;
															}
															List<KVStruct> list = sCReportData.additions;
															if (list == null)
															{
																list = new List<KVStruct>();
															}
															int num2 = protoReader.FieldNumber;
															do
															{
																List<KVStruct> arg_312_0 = list;
																KVStruct arg_305_0 = null;
																SubItemToken token = ProtoReader.StartSubItem(protoReader);
																KVStruct arg_312_1 = ProtoMsgSerializer.Read(arg_305_0, protoReader);
																ProtoReader.EndSubItem(token, protoReader);
																arg_312_0.Add(arg_312_1);
															}
															while (protoReader.TryReadFieldHeader(num2));
														}
													}
													else
													{
														if (sCReportData == null)
														{
															SCReportData expr_26F = new SCReportData();
															ProtoReader.NoteObject(expr_26F, protoReader);
															sCReportData = expr_26F;
														}
														List<KVStruct> list = sCReportData.destroyArmys;
														if (list == null)
														{
															list = new List<KVStruct>();
														}
														int num2 = protoReader.FieldNumber;
														do
														{
															List<KVStruct> arg_2AB_0 = list;
															KVStruct arg_29E_0 = null;
															SubItemToken token = ProtoReader.StartSubItem(protoReader);
															KVStruct arg_2AB_1 = ProtoMsgSerializer.Read(arg_29E_0, protoReader);
															ProtoReader.EndSubItem(token, protoReader);
															arg_2AB_0.Add(arg_2AB_1);
														}
														while (protoReader.TryReadFieldHeader(num2));
													}
												}
												else
												{
													if (sCReportData == null)
													{
														SCReportData expr_208 = new SCReportData();
														ProtoReader.NoteObject(expr_208, protoReader);
														sCReportData = expr_208;
													}
													List<KVStruct> list = sCReportData.sendArmys;
													if (list == null)
													{
														list = new List<KVStruct>();
													}
													int num2 = protoReader.FieldNumber;
													do
													{
														List<KVStruct> arg_244_0 = list;
														KVStruct arg_237_0 = null;
														SubItemToken token = ProtoReader.StartSubItem(protoReader);
														KVStruct arg_244_1 = ProtoMsgSerializer.Read(arg_237_0, protoReader);
														ProtoReader.EndSubItem(token, protoReader);
														arg_244_0.Add(arg_244_1);
													}
													while (protoReader.TryReadFieldHeader(num2));
												}
											}
											else
											{
												if (sCReportData == null)
												{
													SCReportData expr_1A1 = new SCReportData();
													ProtoReader.NoteObject(expr_1A1, protoReader);
													sCReportData = expr_1A1;
												}
												List<KVStruct> list = sCReportData.lossRes;
												if (list == null)
												{
													list = new List<KVStruct>();
												}
												int num2 = protoReader.FieldNumber;
												do
												{
													List<KVStruct> arg_1DD_0 = list;
													KVStruct arg_1D0_0 = null;
													SubItemToken token = ProtoReader.StartSubItem(protoReader);
													KVStruct arg_1DD_1 = ProtoMsgSerializer.Read(arg_1D0_0, protoReader);
													ProtoReader.EndSubItem(token, protoReader);
													arg_1DD_0.Add(arg_1DD_1);
												}
												while (protoReader.TryReadFieldHeader(num2));
											}
										}
										else
										{
											if (sCReportData == null)
											{
												SCReportData expr_170 = new SCReportData();
												ProtoReader.NoteObject(expr_170, protoReader);
												sCReportData = expr_170;
											}
											int num2 = protoReader.ReadInt32();
											sCReportData.fighterMedal = num2;
										}
									}
									else
									{
										if (sCReportData == null)
										{
											SCReportData expr_13F = new SCReportData();
											ProtoReader.NoteObject(expr_13F, protoReader);
											sCReportData = expr_13F;
										}
										int num2 = protoReader.ReadInt32();
										sCReportData.fighterLevel = num2;
									}
								}
								else
								{
									if (sCReportData == null)
									{
										SCReportData expr_109 = new SCReportData();
										ProtoReader.NoteObject(expr_109, protoReader);
										sCReportData = expr_109;
									}
									string text = protoReader.ReadString();
									if (text != null)
									{
										sCReportData.fighterName = text;
									}
								}
							}
							else
							{
								if (sCReportData == null)
								{
									SCReportData expr_D9 = new SCReportData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCReportData = expr_D9;
								}
								long num3 = protoReader.ReadInt64();
								sCReportData.fighterId = num3;
							}
						}
						else
						{
							if (sCReportData == null)
							{
								SCReportData expr_A9 = new SCReportData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCReportData = expr_A9;
							}
							bool flag = protoReader.ReadBoolean();
							sCReportData.fighterWin = flag;
						}
					}
					else
					{
						if (sCReportData == null)
						{
							SCReportData expr_79 = new SCReportData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCReportData = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCReportData.beginTime = num3;
					}
				}
				else
				{
					if (sCReportData == null)
					{
						SCReportData expr_49 = new SCReportData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCReportData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCReportData.islandIdx = num2;
				}
			}
			else
			{
				if (sCReportData == null)
				{
					SCReportData expr_19 = new SCReportData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCReportData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				sCReportData.type = num2;
			}
		}
		if (sCReportData == null)
		{
			SCReportData expr_776 = new SCReportData();
			ProtoReader.NoteObject(expr_776, protoReader);
			sCReportData = expr_776;
		}
		return sCReportData;
	}

	private static void Write(SCReportReadData sCReportReadData, ProtoWriter writer)
	{
		if (sCReportReadData.GetType() != typeof(SCReportReadData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCReportReadData), sCReportReadData.GetType());
		}
		long expr_2D = sCReportReadData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCReportReadData.isReaded;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCReportReadData, writer);
	}

	private static SCReportReadData Read(SCReportReadData sCReportReadData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCReportReadData == null)
					{
						SCReportReadData expr_70 = new SCReportReadData();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCReportReadData = expr_70;
					}
					protoReader.AppendExtensionData(sCReportReadData);
				}
				else
				{
					if (sCReportReadData == null)
					{
						SCReportReadData expr_49 = new SCReportReadData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCReportReadData = expr_49;
					}
					int isReaded = protoReader.ReadInt32();
					sCReportReadData.isReaded = isReaded;
				}
			}
			else
			{
				if (sCReportReadData == null)
				{
					SCReportReadData expr_19 = new SCReportReadData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCReportReadData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCReportReadData.id = id;
			}
		}
		if (sCReportReadData == null)
		{
			SCReportReadData expr_99 = new SCReportReadData();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCReportReadData = expr_99;
		}
		return sCReportReadData;
	}

	private static void Write(SCResIslandTake sCResIslandTake, ProtoWriter protoWriter)
	{
		if (sCResIslandTake.GetType() != typeof(SCResIslandTake))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCResIslandTake), sCResIslandTake.GetType());
		}
		long expr_2D = sCResIslandTake.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCResIslandTake.takeTime;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_B7 = sCResIslandTake.resTmp;
		if (expr_B7 != null)
		{
			List<KVStruct> list = expr_B7;
			foreach (KVStruct arg_DC_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_DC_0, protoWriter);
				ProtoMsgSerializer.Write(arg_DC_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCResIslandTake, protoWriter);
	}

	private static SCResIslandTake Read(SCResIslandTake sCResIslandTake, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCResIslandTake == null)
						{
							SCResIslandTake expr_104 = new SCResIslandTake();
							ProtoReader.NoteObject(expr_104, protoReader);
							sCResIslandTake = expr_104;
						}
						protoReader.AppendExtensionData(sCResIslandTake);
					}
					else
					{
						if (sCResIslandTake == null)
						{
							SCResIslandTake expr_AB = new SCResIslandTake();
							ProtoReader.NoteObject(expr_AB, protoReader);
							sCResIslandTake = expr_AB;
						}
						List<KVStruct> list = sCResIslandTake.resTmp;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_E3_0 = list;
							KVStruct arg_D6_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_E3_1 = ProtoMsgSerializer.Read(arg_D6_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_E3_0.Add(arg_E3_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sCResIslandTake == null)
					{
						SCResIslandTake expr_49 = new SCResIslandTake();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCResIslandTake = expr_49;
					}
					List<KVStruct> list = sCResIslandTake.takeTime;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCResIslandTake == null)
				{
					SCResIslandTake expr_19 = new SCResIslandTake();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCResIslandTake = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCResIslandTake.id = id;
			}
		}
		if (sCResIslandTake == null)
		{
			SCResIslandTake expr_12D = new SCResIslandTake();
			ProtoReader.NoteObject(expr_12D, protoReader);
			sCResIslandTake = expr_12D;
		}
		return sCResIslandTake;
	}

	private static void Write(SCResourceLimit sCResourceLimit, ProtoWriter protoWriter)
	{
		if (sCResourceLimit.GetType() != typeof(SCResourceLimit))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCResourceLimit), sCResourceLimit.GetType());
		}
		long expr_2D = sCResourceLimit.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCResourceLimit.limits;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCResourceLimit, protoWriter);
	}

	private static SCResourceLimit Read(SCResourceLimit sCResourceLimit, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCResourceLimit == null)
					{
						SCResourceLimit expr_A2 = new SCResourceLimit();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCResourceLimit = expr_A2;
					}
					protoReader.AppendExtensionData(sCResourceLimit);
				}
				else
				{
					if (sCResourceLimit == null)
					{
						SCResourceLimit expr_49 = new SCResourceLimit();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCResourceLimit = expr_49;
					}
					List<KVStruct> list = sCResourceLimit.limits;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCResourceLimit == null)
				{
					SCResourceLimit expr_19 = new SCResourceLimit();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCResourceLimit = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCResourceLimit.id = id;
			}
		}
		if (sCResourceLimit == null)
		{
			SCResourceLimit expr_CB = new SCResourceLimit();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCResourceLimit = expr_CB;
		}
		return sCResourceLimit;
	}

	private static void Write(SCSearchLegionData sCSearchLegionData, ProtoWriter writer)
	{
		if (sCSearchLegionData.GetType() != typeof(SCSearchLegionData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSearchLegionData), sCSearchLegionData.GetType());
		}
		long expr_2D = sCSearchLegionData.legionId;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		string expr_53 = sCSearchLegionData.name;
		if (expr_53 != null)
		{
			if (!(expr_53 == ""))
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
				ProtoWriter.WriteString(expr_53, writer);
			}
		}
		int expr_83 = sCSearchLegionData.score;
		if (expr_83 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_83, writer);
		}
		int expr_A0 = sCSearchLegionData.level;
		if (expr_A0 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_A0, writer);
		}
		int expr_BD = sCSearchLegionData.count;
		if (expr_BD != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_BD, writer);
		}
		int expr_DA = sCSearchLegionData.limit;
		if (expr_DA != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_DA, writer);
		}
		int expr_F7 = sCSearchLegionData.minMedal;
		if (expr_F7 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_F7, writer);
		}
		long expr_114 = sCSearchLegionData.id;
		if (expr_114 != 0L)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_114, writer);
		}
		int expr_13A = sCSearchLegionData.rank;
		if (expr_13A != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_13A, writer);
		}
		ProtoWriter.AppendExtensionData(sCSearchLegionData, writer);
	}

	private static SCSearchLegionData Read(SCSearchLegionData sCSearchLegionData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (sCSearchLegionData == null)
												{
													SCSearchLegionData expr_1C4 = new SCSearchLegionData();
													ProtoReader.NoteObject(expr_1C4, protoReader);
													sCSearchLegionData = expr_1C4;
												}
												protoReader.AppendExtensionData(sCSearchLegionData);
											}
											else
											{
												if (sCSearchLegionData == null)
												{
													SCSearchLegionData expr_19D = new SCSearchLegionData();
													ProtoReader.NoteObject(expr_19D, protoReader);
													sCSearchLegionData = expr_19D;
												}
												int num2 = protoReader.ReadInt32();
												sCSearchLegionData.rank = num2;
											}
										}
										else
										{
											if (sCSearchLegionData == null)
											{
												SCSearchLegionData expr_16C = new SCSearchLegionData();
												ProtoReader.NoteObject(expr_16C, protoReader);
												sCSearchLegionData = expr_16C;
											}
											long num3 = protoReader.ReadInt64();
											sCSearchLegionData.id = num3;
										}
									}
									else
									{
										if (sCSearchLegionData == null)
										{
											SCSearchLegionData expr_13C = new SCSearchLegionData();
											ProtoReader.NoteObject(expr_13C, protoReader);
											sCSearchLegionData = expr_13C;
										}
										int num2 = protoReader.ReadInt32();
										sCSearchLegionData.minMedal = num2;
									}
								}
								else
								{
									if (sCSearchLegionData == null)
									{
										SCSearchLegionData expr_10C = new SCSearchLegionData();
										ProtoReader.NoteObject(expr_10C, protoReader);
										sCSearchLegionData = expr_10C;
									}
									int num2 = protoReader.ReadInt32();
									sCSearchLegionData.limit = num2;
								}
							}
							else
							{
								if (sCSearchLegionData == null)
								{
									SCSearchLegionData expr_DC = new SCSearchLegionData();
									ProtoReader.NoteObject(expr_DC, protoReader);
									sCSearchLegionData = expr_DC;
								}
								int num2 = protoReader.ReadInt32();
								sCSearchLegionData.count = num2;
							}
						}
						else
						{
							if (sCSearchLegionData == null)
							{
								SCSearchLegionData expr_AC = new SCSearchLegionData();
								ProtoReader.NoteObject(expr_AC, protoReader);
								sCSearchLegionData = expr_AC;
							}
							int num2 = protoReader.ReadInt32();
							sCSearchLegionData.level = num2;
						}
					}
					else
					{
						if (sCSearchLegionData == null)
						{
							SCSearchLegionData expr_7C = new SCSearchLegionData();
							ProtoReader.NoteObject(expr_7C, protoReader);
							sCSearchLegionData = expr_7C;
						}
						int num2 = protoReader.ReadInt32();
						sCSearchLegionData.score = num2;
					}
				}
				else
				{
					if (sCSearchLegionData == null)
					{
						SCSearchLegionData expr_49 = new SCSearchLegionData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSearchLegionData = expr_49;
					}
					string text = protoReader.ReadString();
					if (text != null)
					{
						sCSearchLegionData.name = text;
					}
				}
			}
			else
			{
				if (sCSearchLegionData == null)
				{
					SCSearchLegionData expr_19 = new SCSearchLegionData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSearchLegionData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCSearchLegionData.legionId = num3;
			}
		}
		if (sCSearchLegionData == null)
		{
			SCSearchLegionData expr_1ED = new SCSearchLegionData();
			ProtoReader.NoteObject(expr_1ED, protoReader);
			sCSearchLegionData = expr_1ED;
		}
		return sCSearchLegionData;
	}

	private static void Write(SCSendMessage sCSendMessage, ProtoWriter protoWriter)
	{
		if (sCSendMessage.GetType() != typeof(SCSendMessage))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSendMessage), sCSendMessage.GetType());
		}
		ChatMessage expr_2D = sCSendMessage.msg;
		if (expr_2D != null)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_2D, protoWriter);
			ProtoMsgSerializer.Write(expr_2D, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		long expr_59 = sCSendMessage.id;
		if (expr_59 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_59, protoWriter);
		}
		int expr_7F = sCSendMessage.code;
		if (expr_7F != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_7F, protoWriter);
		}
		int expr_9C = sCSendMessage.tagKey;
		if (expr_9C != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_9C, protoWriter);
		}
		string expr_B9 = sCSendMessage.tagValue;
		if (expr_B9 != null)
		{
			if (!(expr_B9 == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_B9, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCSendMessage, protoWriter);
	}

	private static SCSendMessage Read(SCSendMessage sCSendMessage, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (sCSendMessage == null)
								{
									SCSendMessage expr_121 = new SCSendMessage();
									ProtoReader.NoteObject(expr_121, protoReader);
									sCSendMessage = expr_121;
								}
								protoReader.AppendExtensionData(sCSendMessage);
							}
							else
							{
								if (sCSendMessage == null)
								{
									SCSendMessage expr_F4 = new SCSendMessage();
									ProtoReader.NoteObject(expr_F4, protoReader);
									sCSendMessage = expr_F4;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									sCSendMessage.tagValue = text;
								}
							}
						}
						else
						{
							if (sCSendMessage == null)
							{
								SCSendMessage expr_C2 = new SCSendMessage();
								ProtoReader.NoteObject(expr_C2, protoReader);
								sCSendMessage = expr_C2;
							}
							int num2 = protoReader.ReadInt32();
							sCSendMessage.tagKey = num2;
						}
					}
					else
					{
						if (sCSendMessage == null)
						{
							SCSendMessage expr_90 = new SCSendMessage();
							ProtoReader.NoteObject(expr_90, protoReader);
							sCSendMessage = expr_90;
						}
						int num2 = protoReader.ReadInt32();
						sCSendMessage.code = num2;
					}
				}
				else
				{
					if (sCSendMessage == null)
					{
						SCSendMessage expr_60 = new SCSendMessage();
						ProtoReader.NoteObject(expr_60, protoReader);
						sCSendMessage = expr_60;
					}
					long id = protoReader.ReadInt64();
					sCSendMessage.id = id;
				}
			}
			else
			{
				if (sCSendMessage == null)
				{
					SCSendMessage expr_19 = new SCSendMessage();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSendMessage = expr_19;
				}
				ChatMessage arg_30_0 = sCSendMessage.msg;
				SubItemToken token = ProtoReader.StartSubItem(protoReader);
				ChatMessage arg_3C_0 = ProtoMsgSerializer.Read(arg_30_0, protoReader);
				ProtoReader.EndSubItem(token, protoReader);
				ChatMessage chatMessage = arg_3C_0;
				if (chatMessage != null)
				{
					sCSendMessage.msg = chatMessage;
				}
			}
		}
		if (sCSendMessage == null)
		{
			SCSendMessage expr_14A = new SCSendMessage();
			ProtoReader.NoteObject(expr_14A, protoReader);
			sCSendMessage = expr_14A;
		}
		return sCSendMessage;
	}

	private static void Write(SCSessionData sCSessionData, ProtoWriter writer)
	{
		if (sCSessionData.GetType() != typeof(SCSessionData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSessionData), sCSessionData.GetType());
		}
		string expr_2D = sCSessionData.session;
		if (expr_2D != null)
		{
			if (!(expr_2D == ""))
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
				ProtoWriter.WriteString(expr_2D, writer);
			}
		}
		long expr_5D = sCSessionData.id;
		if (expr_5D != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_5D, writer);
		}
		int expr_83 = sCSessionData.requestId;
		if (expr_83 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_83, writer);
		}
		ProtoWriter.AppendExtensionData(sCSessionData, writer);
	}

	private static SCSessionData Read(SCSessionData sCSessionData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCSessionData == null)
						{
							SCSessionData expr_A3 = new SCSessionData();
							ProtoReader.NoteObject(expr_A3, protoReader);
							sCSessionData = expr_A3;
						}
						protoReader.AppendExtensionData(sCSessionData);
					}
					else
					{
						if (sCSessionData == null)
						{
							SCSessionData expr_7C = new SCSessionData();
							ProtoReader.NoteObject(expr_7C, protoReader);
							sCSessionData = expr_7C;
						}
						int requestId = protoReader.ReadInt32();
						sCSessionData.requestId = requestId;
					}
				}
				else
				{
					if (sCSessionData == null)
					{
						SCSessionData expr_4C = new SCSessionData();
						ProtoReader.NoteObject(expr_4C, protoReader);
						sCSessionData = expr_4C;
					}
					long id = protoReader.ReadInt64();
					sCSessionData.id = id;
				}
			}
			else
			{
				if (sCSessionData == null)
				{
					SCSessionData expr_19 = new SCSessionData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSessionData = expr_19;
				}
				string text = protoReader.ReadString();
				if (text != null)
				{
					sCSessionData.session = text;
				}
			}
		}
		if (sCSessionData == null)
		{
			SCSessionData expr_CC = new SCSessionData();
			ProtoReader.NoteObject(expr_CC, protoReader);
			sCSessionData = expr_CC;
		}
		return sCSessionData;
	}

	private static void Write(SCSevenDaysPrize sCSevenDaysPrize, ProtoWriter protoWriter)
	{
		if (sCSevenDaysPrize.GetType() != typeof(SCSevenDaysPrize))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSevenDaysPrize), sCSevenDaysPrize.GetType());
		}
		long expr_2D = sCSevenDaysPrize.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCSevenDaysPrize.prizeData;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCSevenDaysPrize, protoWriter);
	}

	private static SCSevenDaysPrize Read(SCSevenDaysPrize sCSevenDaysPrize, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSevenDaysPrize == null)
					{
						SCSevenDaysPrize expr_A2 = new SCSevenDaysPrize();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCSevenDaysPrize = expr_A2;
					}
					protoReader.AppendExtensionData(sCSevenDaysPrize);
				}
				else
				{
					if (sCSevenDaysPrize == null)
					{
						SCSevenDaysPrize expr_49 = new SCSevenDaysPrize();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSevenDaysPrize = expr_49;
					}
					List<KVStruct> list = sCSevenDaysPrize.prizeData;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCSevenDaysPrize == null)
				{
					SCSevenDaysPrize expr_19 = new SCSevenDaysPrize();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSevenDaysPrize = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCSevenDaysPrize.id = id;
			}
		}
		if (sCSevenDaysPrize == null)
		{
			SCSevenDaysPrize expr_CB = new SCSevenDaysPrize();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCSevenDaysPrize = expr_CB;
		}
		return sCSevenDaysPrize;
	}

	private static void Write(SCSignInData sCSignInData, ProtoWriter writer)
	{
		if (sCSignInData.GetType() != typeof(SCSignInData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSignInData), sCSignInData.GetType());
		}
		long expr_2D = sCSignInData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCSignInData.time;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCSignInData, writer);
	}

	private static SCSignInData Read(SCSignInData sCSignInData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSignInData == null)
					{
						SCSignInData expr_70 = new SCSignInData();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCSignInData = expr_70;
					}
					protoReader.AppendExtensionData(sCSignInData);
				}
				else
				{
					if (sCSignInData == null)
					{
						SCSignInData expr_49 = new SCSignInData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSignInData = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCSignInData.time = num2;
				}
			}
			else
			{
				if (sCSignInData == null)
				{
					SCSignInData expr_19 = new SCSignInData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSignInData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCSignInData.id = num2;
			}
		}
		if (sCSignInData == null)
		{
			SCSignInData expr_99 = new SCSignInData();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCSignInData = expr_99;
		}
		return sCSignInData;
	}

	private static void Write(SCSkillConfigData sCSkillConfigData, ProtoWriter writer)
	{
		if (sCSkillConfigData.GetType() != typeof(SCSkillConfigData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSkillConfigData), sCSkillConfigData.GetType());
		}
		long expr_2D = sCSkillConfigData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<long> expr_53 = sCSkillConfigData.skillId;
		if (expr_53 != null)
		{
			List<long> list = expr_53;
			foreach (long arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_79_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCSkillConfigData, writer);
	}

	private static SCSkillConfigData Read(SCSkillConfigData sCSkillConfigData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSkillConfigData == null)
					{
						SCSkillConfigData expr_CB = new SCSkillConfigData();
						ProtoReader.NoteObject(expr_CB, protoReader);
						sCSkillConfigData = expr_CB;
					}
					protoReader.AppendExtensionData(sCSkillConfigData);
				}
				else
				{
					if (sCSkillConfigData == null)
					{
						SCSkillConfigData expr_49 = new SCSkillConfigData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSkillConfigData = expr_49;
					}
					List<long> list = sCSkillConfigData.skillId;
					if (list == null)
					{
						list = new List<long>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt64());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt64());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCSkillConfigData == null)
				{
					SCSkillConfigData expr_19 = new SCSkillConfigData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSkillConfigData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCSkillConfigData.id = id;
			}
		}
		if (sCSkillConfigData == null)
		{
			SCSkillConfigData expr_F4 = new SCSkillConfigData();
			ProtoReader.NoteObject(expr_F4, protoReader);
			sCSkillConfigData = expr_F4;
		}
		return sCSkillConfigData;
	}

	private static void Write(SCSkillData sCSkillData, ProtoWriter writer)
	{
		if (sCSkillData.GetType() != typeof(SCSkillData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSkillData), sCSkillData.GetType());
		}
		long expr_2D = sCSkillData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCSkillData.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCSkillData.type;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		long expr_8D = sCSkillData.cdTime;
		if (expr_8D != 0L)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_8D, writer);
		}
		int expr_B3 = sCSkillData.mixType;
		if (expr_B3 != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_B3, writer);
		}
		ProtoWriter.AppendExtensionData(sCSkillData, writer);
	}

	private static SCSkillData Read(SCSkillData sCSkillData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (sCSkillData == null)
								{
									SCSkillData expr_100 = new SCSkillData();
									ProtoReader.NoteObject(expr_100, protoReader);
									sCSkillData = expr_100;
								}
								protoReader.AppendExtensionData(sCSkillData);
							}
							else
							{
								if (sCSkillData == null)
								{
									SCSkillData expr_D9 = new SCSkillData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCSkillData = expr_D9;
								}
								int num2 = protoReader.ReadInt32();
								sCSkillData.mixType = num2;
							}
						}
						else
						{
							if (sCSkillData == null)
							{
								SCSkillData expr_A9 = new SCSkillData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCSkillData = expr_A9;
							}
							long num3 = protoReader.ReadInt64();
							sCSkillData.cdTime = num3;
						}
					}
					else
					{
						if (sCSkillData == null)
						{
							SCSkillData expr_79 = new SCSkillData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCSkillData = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCSkillData.type = num2;
					}
				}
				else
				{
					if (sCSkillData == null)
					{
						SCSkillData expr_49 = new SCSkillData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSkillData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCSkillData.itemId = num2;
				}
			}
			else
			{
				if (sCSkillData == null)
				{
					SCSkillData expr_19 = new SCSkillData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSkillData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCSkillData.id = num3;
			}
		}
		if (sCSkillData == null)
		{
			SCSkillData expr_129 = new SCSkillData();
			ProtoReader.NoteObject(expr_129, protoReader);
			sCSkillData = expr_129;
		}
		return sCSkillData;
	}

	private static void Write(SCSkillPointCd sCSkillPointCd, ProtoWriter writer)
	{
		if (sCSkillPointCd.GetType() != typeof(SCSkillPointCd))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSkillPointCd), sCSkillPointCd.GetType());
		}
		long expr_2D = sCSkillPointCd.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCSkillPointCd.cdTime;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCSkillPointCd, writer);
	}

	private static SCSkillPointCd Read(SCSkillPointCd sCSkillPointCd, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSkillPointCd == null)
					{
						SCSkillPointCd expr_70 = new SCSkillPointCd();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCSkillPointCd = expr_70;
					}
					protoReader.AppendExtensionData(sCSkillPointCd);
				}
				else
				{
					if (sCSkillPointCd == null)
					{
						SCSkillPointCd expr_49 = new SCSkillPointCd();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSkillPointCd = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCSkillPointCd.cdTime = num2;
				}
			}
			else
			{
				if (sCSkillPointCd == null)
				{
					SCSkillPointCd expr_19 = new SCSkillPointCd();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSkillPointCd = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCSkillPointCd.id = num2;
			}
		}
		if (sCSkillPointCd == null)
		{
			SCSkillPointCd expr_99 = new SCSkillPointCd();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCSkillPointCd = expr_99;
		}
		return sCSkillPointCd;
	}

	private static void Write(SCSkillRandomCdTime sCSkillRandomCdTime, ProtoWriter writer)
	{
		if (sCSkillRandomCdTime.GetType() != typeof(SCSkillRandomCdTime))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSkillRandomCdTime), sCSkillRandomCdTime.GetType());
		}
		long expr_2D = sCSkillRandomCdTime.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		long expr_53 = sCSkillRandomCdTime.normalTime;
		if (expr_53 != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_53, writer);
		}
		long expr_79 = sCSkillRandomCdTime.legendTime;
		if (expr_79 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_79, writer);
		}
		ProtoWriter.AppendExtensionData(sCSkillRandomCdTime, writer);
	}

	private static SCSkillRandomCdTime Read(SCSkillRandomCdTime sCSkillRandomCdTime, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCSkillRandomCdTime == null)
						{
							SCSkillRandomCdTime expr_A0 = new SCSkillRandomCdTime();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCSkillRandomCdTime = expr_A0;
						}
						protoReader.AppendExtensionData(sCSkillRandomCdTime);
					}
					else
					{
						if (sCSkillRandomCdTime == null)
						{
							SCSkillRandomCdTime expr_79 = new SCSkillRandomCdTime();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCSkillRandomCdTime = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCSkillRandomCdTime.legendTime = num2;
					}
				}
				else
				{
					if (sCSkillRandomCdTime == null)
					{
						SCSkillRandomCdTime expr_49 = new SCSkillRandomCdTime();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSkillRandomCdTime = expr_49;
					}
					long num2 = protoReader.ReadInt64();
					sCSkillRandomCdTime.normalTime = num2;
				}
			}
			else
			{
				if (sCSkillRandomCdTime == null)
				{
					SCSkillRandomCdTime expr_19 = new SCSkillRandomCdTime();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSkillRandomCdTime = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCSkillRandomCdTime.id = num2;
			}
		}
		if (sCSkillRandomCdTime == null)
		{
			SCSkillRandomCdTime expr_C9 = new SCSkillRandomCdTime();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCSkillRandomCdTime = expr_C9;
		}
		return sCSkillRandomCdTime;
	}

	private static void Write(SCSkillShow sCSkillShow, ProtoWriter writer)
	{
		if (sCSkillShow.GetType() != typeof(SCSkillShow))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSkillShow), sCSkillShow.GetType());
		}
		long expr_2D = sCSkillShow.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCSkillShow.itemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		int expr_70 = sCSkillShow.skillDebris;
		if (expr_70 != 0)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCSkillShow, writer);
	}

	private static SCSkillShow Read(SCSkillShow sCSkillShow, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCSkillShow == null)
						{
							SCSkillShow expr_A0 = new SCSkillShow();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCSkillShow = expr_A0;
						}
						protoReader.AppendExtensionData(sCSkillShow);
					}
					else
					{
						if (sCSkillShow == null)
						{
							SCSkillShow expr_79 = new SCSkillShow();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCSkillShow = expr_79;
						}
						int num2 = protoReader.ReadInt32();
						sCSkillShow.skillDebris = num2;
					}
				}
				else
				{
					if (sCSkillShow == null)
					{
						SCSkillShow expr_49 = new SCSkillShow();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSkillShow = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCSkillShow.itemId = num2;
				}
			}
			else
			{
				if (sCSkillShow == null)
				{
					SCSkillShow expr_19 = new SCSkillShow();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSkillShow = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCSkillShow.id = id;
			}
		}
		if (sCSkillShow == null)
		{
			SCSkillShow expr_C9 = new SCSkillShow();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCSkillShow = expr_C9;
		}
		return sCSkillShow;
	}

	private static void Write(SCSkillUpData sCSkillUpData, ProtoWriter writer)
	{
		if (sCSkillUpData.GetType() != typeof(SCSkillUpData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSkillUpData), sCSkillUpData.GetType());
		}
		long expr_2D = sCSkillUpData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCSkillUpData.level;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCSkillUpData, writer);
	}

	private static SCSkillUpData Read(SCSkillUpData sCSkillUpData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSkillUpData == null)
					{
						SCSkillUpData expr_70 = new SCSkillUpData();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCSkillUpData = expr_70;
					}
					protoReader.AppendExtensionData(sCSkillUpData);
				}
				else
				{
					if (sCSkillUpData == null)
					{
						SCSkillUpData expr_49 = new SCSkillUpData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSkillUpData = expr_49;
					}
					int level = protoReader.ReadInt32();
					sCSkillUpData.level = level;
				}
			}
			else
			{
				if (sCSkillUpData == null)
				{
					SCSkillUpData expr_19 = new SCSkillUpData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSkillUpData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCSkillUpData.id = id;
			}
		}
		if (sCSkillUpData == null)
		{
			SCSkillUpData expr_99 = new SCSkillUpData();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCSkillUpData = expr_99;
		}
		return sCSkillUpData;
	}

	private static void Write(SCSocketRegister sCSocketRegister, ProtoWriter writer)
	{
		if (sCSocketRegister.GetType() != typeof(SCSocketRegister))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSocketRegister), sCSocketRegister.GetType());
		}
		bool expr_2D = sCSocketRegister.success;
		if (expr_2D)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteBoolean(expr_2D, writer);
		}
		long expr_4A = sCSocketRegister.id;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		ProtoWriter.AppendExtensionData(sCSocketRegister, writer);
	}

	private static SCSocketRegister Read(SCSocketRegister sCSocketRegister, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSocketRegister == null)
					{
						SCSocketRegister expr_70 = new SCSocketRegister();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCSocketRegister = expr_70;
					}
					protoReader.AppendExtensionData(sCSocketRegister);
				}
				else
				{
					if (sCSocketRegister == null)
					{
						SCSocketRegister expr_49 = new SCSocketRegister();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSocketRegister = expr_49;
					}
					long id = protoReader.ReadInt64();
					sCSocketRegister.id = id;
				}
			}
			else
			{
				if (sCSocketRegister == null)
				{
					SCSocketRegister expr_19 = new SCSocketRegister();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSocketRegister = expr_19;
				}
				bool success = protoReader.ReadBoolean();
				sCSocketRegister.success = success;
			}
		}
		if (sCSocketRegister == null)
		{
			SCSocketRegister expr_99 = new SCSocketRegister();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCSocketRegister = expr_99;
		}
		return sCSocketRegister;
	}

	private static void Write(SCSoldierConfigure sCSoldierConfigure, ProtoWriter writer)
	{
		if (sCSoldierConfigure.GetType() != typeof(SCSoldierConfigure))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSoldierConfigure), sCSoldierConfigure.GetType());
		}
		long expr_2D = sCSoldierConfigure.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCSoldierConfigure.soldierItemId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCSoldierConfigure.cdTime;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCSoldierConfigure, writer);
	}

	private static SCSoldierConfigure Read(SCSoldierConfigure sCSoldierConfigure, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCSoldierConfigure == null)
						{
							SCSoldierConfigure expr_A0 = new SCSoldierConfigure();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCSoldierConfigure = expr_A0;
						}
						protoReader.AppendExtensionData(sCSoldierConfigure);
					}
					else
					{
						if (sCSoldierConfigure == null)
						{
							SCSoldierConfigure expr_79 = new SCSoldierConfigure();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCSoldierConfigure = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCSoldierConfigure.cdTime = num2;
					}
				}
				else
				{
					if (sCSoldierConfigure == null)
					{
						SCSoldierConfigure expr_49 = new SCSoldierConfigure();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSoldierConfigure = expr_49;
					}
					int soldierItemId = protoReader.ReadInt32();
					sCSoldierConfigure.soldierItemId = soldierItemId;
				}
			}
			else
			{
				if (sCSoldierConfigure == null)
				{
					SCSoldierConfigure expr_19 = new SCSoldierConfigure();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSoldierConfigure = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCSoldierConfigure.id = num2;
			}
		}
		if (sCSoldierConfigure == null)
		{
			SCSoldierConfigure expr_C9 = new SCSoldierConfigure();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCSoldierConfigure = expr_C9;
		}
		return sCSoldierConfigure;
	}

	private static void Write(SCSpyIsland sCSpyIsland, ProtoWriter protoWriter)
	{
		if (sCSpyIsland.GetType() != typeof(SCSpyIsland))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSpyIsland), sCSpyIsland.GetType());
		}
		long expr_2D = sCSpyIsland.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		bool expr_53 = sCSpyIsland.canAttack;
		if (expr_53)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteBoolean(expr_53, protoWriter);
		}
		long expr_70 = sCSpyIsland.ownerId;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_70, protoWriter);
		}
		int expr_96 = sCSpyIsland.ownerLevel;
		if (expr_96 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_96, protoWriter);
		}
		string expr_B3 = sCSpyIsland.ownerName;
		if (expr_B3 != null)
		{
			if (!(expr_B3 == ""))
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				ProtoWriter.WriteString(expr_B3, protoWriter);
			}
		}
		int expr_E3 = sCSpyIsland.medal;
		if (expr_E3 != 0)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_E3, protoWriter);
		}
		List<KVStruct> expr_100 = sCSpyIsland.targetCurRes;
		if (expr_100 != null)
		{
			List<KVStruct> list = expr_100;
			foreach (KVStruct arg_125_0 in list)
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_125_0, protoWriter);
				ProtoMsgSerializer.Write(arg_125_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		int expr_164 = sCSpyIsland.battleType;
		if (expr_164 != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_164, protoWriter);
		}
		int expr_182 = sCSpyIsland.vip;
		if (expr_182 != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_182, protoWriter);
		}
		int expr_1A0 = sCSpyIsland.exp;
		if (expr_1A0 != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_1A0, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sCSpyIsland, protoWriter);
	}

	private static SCSpyIsland Read(SCSpyIsland sCSpyIsland, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (num != 11)
												{
													if (sCSpyIsland == null)
													{
														SCSpyIsland expr_22F = new SCSpyIsland();
														ProtoReader.NoteObject(expr_22F, protoReader);
														sCSpyIsland = expr_22F;
													}
													protoReader.AppendExtensionData(sCSpyIsland);
												}
												else
												{
													if (sCSpyIsland == null)
													{
														SCSpyIsland expr_208 = new SCSpyIsland();
														ProtoReader.NoteObject(expr_208, protoReader);
														sCSpyIsland = expr_208;
													}
													int num2 = protoReader.ReadInt32();
													sCSpyIsland.exp = num2;
												}
											}
											else
											{
												if (sCSpyIsland == null)
												{
													SCSpyIsland expr_1D7 = new SCSpyIsland();
													ProtoReader.NoteObject(expr_1D7, protoReader);
													sCSpyIsland = expr_1D7;
												}
												int num2 = protoReader.ReadInt32();
												sCSpyIsland.vip = num2;
											}
										}
										else
										{
											if (sCSpyIsland == null)
											{
												SCSpyIsland expr_1A6 = new SCSpyIsland();
												ProtoReader.NoteObject(expr_1A6, protoReader);
												sCSpyIsland = expr_1A6;
											}
											int num2 = protoReader.ReadInt32();
											sCSpyIsland.battleType = num2;
										}
									}
									else
									{
										if (sCSpyIsland == null)
										{
											SCSpyIsland expr_13F = new SCSpyIsland();
											ProtoReader.NoteObject(expr_13F, protoReader);
											sCSpyIsland = expr_13F;
										}
										List<KVStruct> list = sCSpyIsland.targetCurRes;
										if (list == null)
										{
											list = new List<KVStruct>();
										}
										int num2 = protoReader.FieldNumber;
										do
										{
											List<KVStruct> arg_17B_0 = list;
											KVStruct arg_16E_0 = null;
											SubItemToken token = ProtoReader.StartSubItem(protoReader);
											KVStruct arg_17B_1 = ProtoMsgSerializer.Read(arg_16E_0, protoReader);
											ProtoReader.EndSubItem(token, protoReader);
											arg_17B_0.Add(arg_17B_1);
										}
										while (protoReader.TryReadFieldHeader(num2));
									}
								}
								else
								{
									if (sCSpyIsland == null)
									{
										SCSpyIsland expr_10F = new SCSpyIsland();
										ProtoReader.NoteObject(expr_10F, protoReader);
										sCSpyIsland = expr_10F;
									}
									int num2 = protoReader.ReadInt32();
									sCSpyIsland.medal = num2;
								}
							}
							else
							{
								if (sCSpyIsland == null)
								{
									SCSpyIsland expr_D9 = new SCSpyIsland();
									ProtoReader.NoteObject(expr_D9, protoReader);
									sCSpyIsland = expr_D9;
								}
								string text = protoReader.ReadString();
								if (text != null)
								{
									sCSpyIsland.ownerName = text;
								}
							}
						}
						else
						{
							if (sCSpyIsland == null)
							{
								SCSpyIsland expr_A9 = new SCSpyIsland();
								ProtoReader.NoteObject(expr_A9, protoReader);
								sCSpyIsland = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							sCSpyIsland.ownerLevel = num2;
						}
					}
					else
					{
						if (sCSpyIsland == null)
						{
							SCSpyIsland expr_79 = new SCSpyIsland();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCSpyIsland = expr_79;
						}
						long num3 = protoReader.ReadInt64();
						sCSpyIsland.ownerId = num3;
					}
				}
				else
				{
					if (sCSpyIsland == null)
					{
						SCSpyIsland expr_49 = new SCSpyIsland();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSpyIsland = expr_49;
					}
					bool canAttack = protoReader.ReadBoolean();
					sCSpyIsland.canAttack = canAttack;
				}
			}
			else
			{
				if (sCSpyIsland == null)
				{
					SCSpyIsland expr_19 = new SCSpyIsland();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSpyIsland = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCSpyIsland.id = num3;
			}
		}
		if (sCSpyIsland == null)
		{
			SCSpyIsland expr_258 = new SCSpyIsland();
			ProtoReader.NoteObject(expr_258, protoReader);
			sCSpyIsland = expr_258;
		}
		return sCSpyIsland;
	}

	private static void Write(SCSweep sCSweep, ProtoWriter protoWriter)
	{
		if (sCSweep.GetType() != typeof(SCSweep))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCSweep), sCSweep.GetType());
		}
		long expr_2D = sCSweep.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<SweepData> expr_53 = sCSweep.data;
		if (expr_53 != null)
		{
			List<SweepData> list = expr_53;
			foreach (SweepData arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCSweep, protoWriter);
	}

	private static SCSweep Read(SCSweep sCSweep, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCSweep == null)
					{
						SCSweep expr_A2 = new SCSweep();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCSweep = expr_A2;
					}
					protoReader.AppendExtensionData(sCSweep);
				}
				else
				{
					if (sCSweep == null)
					{
						SCSweep expr_49 = new SCSweep();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCSweep = expr_49;
					}
					List<SweepData> list = sCSweep.data;
					if (list == null)
					{
						list = new List<SweepData>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<SweepData> arg_81_0 = list;
						SweepData arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						SweepData arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCSweep == null)
				{
					SCSweep expr_19 = new SCSweep();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCSweep = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCSweep.id = id;
			}
		}
		if (sCSweep == null)
		{
			SCSweep expr_CB = new SCSweep();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCSweep = expr_CB;
		}
		return sCSweep;
	}

	private static void Write(SCTakeResShow sCTakeResShow, ProtoWriter writer)
	{
		if (sCTakeResShow.GetType() != typeof(SCTakeResShow))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCTakeResShow), sCTakeResShow.GetType());
		}
		long expr_2D = sCTakeResShow.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCTakeResShow.value;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		ProtoWriter.AppendExtensionData(sCTakeResShow, writer);
	}

	private static SCTakeResShow Read(SCTakeResShow sCTakeResShow, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCTakeResShow == null)
					{
						SCTakeResShow expr_70 = new SCTakeResShow();
						ProtoReader.NoteObject(expr_70, protoReader);
						sCTakeResShow = expr_70;
					}
					protoReader.AppendExtensionData(sCTakeResShow);
				}
				else
				{
					if (sCTakeResShow == null)
					{
						SCTakeResShow expr_49 = new SCTakeResShow();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCTakeResShow = expr_49;
					}
					int value = protoReader.ReadInt32();
					sCTakeResShow.value = value;
				}
			}
			else
			{
				if (sCTakeResShow == null)
				{
					SCTakeResShow expr_19 = new SCTakeResShow();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCTakeResShow = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCTakeResShow.id = id;
			}
		}
		if (sCTakeResShow == null)
		{
			SCTakeResShow expr_99 = new SCTakeResShow();
			ProtoReader.NoteObject(expr_99, protoReader);
			sCTakeResShow = expr_99;
		}
		return sCTakeResShow;
	}

	private static void Write(SCTechData sCTechData, ProtoWriter writer)
	{
		if (sCTechData.GetType() != typeof(SCTechData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCTechData), sCTechData.GetType());
		}
		long expr_2D = sCTechData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		int expr_53 = sCTechData.level;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_53, writer);
		}
		long expr_70 = sCTechData.cdTime;
		if (expr_70 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_70, writer);
		}
		ProtoWriter.AppendExtensionData(sCTechData, writer);
	}

	private static SCTechData Read(SCTechData sCTechData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (sCTechData == null)
						{
							SCTechData expr_A0 = new SCTechData();
							ProtoReader.NoteObject(expr_A0, protoReader);
							sCTechData = expr_A0;
						}
						protoReader.AppendExtensionData(sCTechData);
					}
					else
					{
						if (sCTechData == null)
						{
							SCTechData expr_79 = new SCTechData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCTechData = expr_79;
						}
						long num2 = protoReader.ReadInt64();
						sCTechData.cdTime = num2;
					}
				}
				else
				{
					if (sCTechData == null)
					{
						SCTechData expr_49 = new SCTechData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCTechData = expr_49;
					}
					int level = protoReader.ReadInt32();
					sCTechData.level = level;
				}
			}
			else
			{
				if (sCTechData == null)
				{
					SCTechData expr_19 = new SCTechData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCTechData = expr_19;
				}
				long num2 = protoReader.ReadInt64();
				sCTechData.id = num2;
			}
		}
		if (sCTechData == null)
		{
			SCTechData expr_C9 = new SCTechData();
			ProtoReader.NoteObject(expr_C9, protoReader);
			sCTechData = expr_C9;
		}
		return sCTechData;
	}

	private static void Write(SCTipsData sCTipsData, ProtoWriter writer)
	{
		if (sCTipsData.GetType() != typeof(SCTipsData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCTipsData), sCTipsData.GetType());
		}
		long expr_2D = sCTipsData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_2D, writer);
		}
		List<long> expr_53 = sCTipsData.value;
		if (expr_53 != null)
		{
			List<long> list = expr_53;
			foreach (long arg_79_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
				ProtoWriter.WriteInt64(arg_79_0, writer);
			}
		}
		ProtoWriter.AppendExtensionData(sCTipsData, writer);
	}

	private static SCTipsData Read(SCTipsData sCTipsData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCTipsData == null)
					{
						SCTipsData expr_CB = new SCTipsData();
						ProtoReader.NoteObject(expr_CB, protoReader);
						sCTipsData = expr_CB;
					}
					protoReader.AppendExtensionData(sCTipsData);
				}
				else
				{
					if (sCTipsData == null)
					{
						SCTipsData expr_49 = new SCTipsData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCTipsData = expr_49;
					}
					List<long> list = sCTipsData.value;
					if (list == null)
					{
						list = new List<long>();
					}
					if (protoReader.WireType != WireType.String)
					{
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							list.Add(protoReader.ReadInt64());
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
					else
					{
						SubItemToken arg_B6_0 = ProtoReader.StartSubItem(protoReader);
						while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
						{
							list.Add(protoReader.ReadInt64());
						}
						ProtoReader.EndSubItem(arg_B6_0, protoReader);
					}
				}
			}
			else
			{
				if (sCTipsData == null)
				{
					SCTipsData expr_19 = new SCTipsData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCTipsData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCTipsData.id = id;
			}
		}
		if (sCTipsData == null)
		{
			SCTipsData expr_F4 = new SCTipsData();
			ProtoReader.NoteObject(expr_F4, protoReader);
			sCTipsData = expr_F4;
		}
		return sCTipsData;
	}

	private static void Write(SCTodayBuyResData sCTodayBuyResData, ProtoWriter protoWriter)
	{
		if (sCTodayBuyResData.GetType() != typeof(SCTodayBuyResData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCTodayBuyResData), sCTodayBuyResData.GetType());
		}
		long expr_2D = sCTodayBuyResData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		List<KVStruct> expr_53 = sCTodayBuyResData.value;
		if (expr_53 != null)
		{
			List<KVStruct> list = expr_53;
			foreach (KVStruct arg_78_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_78_0, protoWriter);
				ProtoMsgSerializer.Write(arg_78_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCTodayBuyResData, protoWriter);
	}

	private static SCTodayBuyResData Read(SCTodayBuyResData sCTodayBuyResData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (sCTodayBuyResData == null)
					{
						SCTodayBuyResData expr_A2 = new SCTodayBuyResData();
						ProtoReader.NoteObject(expr_A2, protoReader);
						sCTodayBuyResData = expr_A2;
					}
					protoReader.AppendExtensionData(sCTodayBuyResData);
				}
				else
				{
					if (sCTodayBuyResData == null)
					{
						SCTodayBuyResData expr_49 = new SCTodayBuyResData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCTodayBuyResData = expr_49;
					}
					List<KVStruct> list = sCTodayBuyResData.value;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_81_0 = list;
						KVStruct arg_74_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_81_1 = ProtoMsgSerializer.Read(arg_74_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_81_0.Add(arg_81_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sCTodayBuyResData == null)
				{
					SCTodayBuyResData expr_19 = new SCTodayBuyResData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCTodayBuyResData = expr_19;
				}
				long id = protoReader.ReadInt64();
				sCTodayBuyResData.id = id;
			}
		}
		if (sCTodayBuyResData == null)
		{
			SCTodayBuyResData expr_CB = new SCTodayBuyResData();
			ProtoReader.NoteObject(expr_CB, protoReader);
			sCTodayBuyResData = expr_CB;
		}
		return sCTodayBuyResData;
	}

	private static void Write(SCVideoData sCVideoData, ProtoWriter writer)
	{
		if (sCVideoData.GetType() != typeof(SCVideoData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCVideoData), sCVideoData.GetType());
		}
		byte[] expr_2D = sCVideoData.islandData;
		if (expr_2D != null)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.String, writer);
			ProtoWriter.WriteBytes(expr_2D, writer);
		}
		byte[] expr_4A = sCVideoData.videoData;
		if (expr_4A != null)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.String, writer);
			ProtoWriter.WriteBytes(expr_4A, writer);
		}
		long expr_67 = sCVideoData.id;
		if (expr_67 != 0L)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_67, writer);
		}
		byte[] expr_8D = sCVideoData.additionData;
		if (expr_8D != null)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.String, writer);
			ProtoWriter.WriteBytes(expr_8D, writer);
		}
		ProtoWriter.AppendExtensionData(sCVideoData, writer);
	}

	private static SCVideoData Read(SCVideoData sCVideoData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (sCVideoData == null)
							{
								SCVideoData expr_EB = new SCVideoData();
								ProtoReader.NoteObject(expr_EB, protoReader);
								sCVideoData = expr_EB;
							}
							protoReader.AppendExtensionData(sCVideoData);
						}
						else
						{
							if (sCVideoData == null)
							{
								SCVideoData expr_BB = new SCVideoData();
								ProtoReader.NoteObject(expr_BB, protoReader);
								sCVideoData = expr_BB;
							}
							byte[] array = ProtoReader.AppendBytes(sCVideoData.additionData, protoReader);
							if (array != null)
							{
								sCVideoData.additionData = array;
							}
						}
					}
					else
					{
						if (sCVideoData == null)
						{
							SCVideoData expr_8B = new SCVideoData();
							ProtoReader.NoteObject(expr_8B, protoReader);
							sCVideoData = expr_8B;
						}
						long id = protoReader.ReadInt64();
						sCVideoData.id = id;
					}
				}
				else
				{
					if (sCVideoData == null)
					{
						SCVideoData expr_52 = new SCVideoData();
						ProtoReader.NoteObject(expr_52, protoReader);
						sCVideoData = expr_52;
					}
					byte[] array = ProtoReader.AppendBytes(sCVideoData.videoData, protoReader);
					if (array != null)
					{
						sCVideoData.videoData = array;
					}
				}
			}
			else
			{
				if (sCVideoData == null)
				{
					SCVideoData expr_19 = new SCVideoData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCVideoData = expr_19;
				}
				byte[] array = ProtoReader.AppendBytes(sCVideoData.islandData, protoReader);
				if (array != null)
				{
					sCVideoData.islandData = array;
				}
			}
		}
		if (sCVideoData == null)
		{
			SCVideoData expr_114 = new SCVideoData();
			ProtoReader.NoteObject(expr_114, protoReader);
			sCVideoData = expr_114;
		}
		return sCVideoData;
	}

	private static void Write(SCWarBattleData sCWarBattleData, ProtoWriter protoWriter)
	{
		if (sCWarBattleData.GetType() != typeof(SCWarBattleData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SCWarBattleData), sCWarBattleData.GetType());
		}
		long expr_2D = sCWarBattleData.id;
		if (expr_2D != 0L)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_2D, protoWriter);
		}
		int expr_53 = sCWarBattleData.zoneId;
		if (expr_53 != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_53, protoWriter);
		}
		List<KVStruct> expr_70 = sCWarBattleData.battlefields;
		if (expr_70 != null)
		{
			List<KVStruct> list = expr_70;
			foreach (KVStruct arg_95_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_95_0, protoWriter);
				ProtoMsgSerializer.Write(arg_95_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<int> expr_D4 = sCWarBattleData.starPrize;
		if (expr_D4 != null)
		{
			List<int> list2 = expr_D4;
			foreach (int arg_FB_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.Variant, protoWriter);
				ProtoWriter.WriteInt32(arg_FB_0, protoWriter);
			}
		}
		int expr_12A = sCWarBattleData.battleId;
		if (expr_12A != 0)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_12A, protoWriter);
		}
		long expr_147 = sCWarBattleData.cdTime;
		if (expr_147 != 0L)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_147, protoWriter);
		}
		int expr_16D = sCWarBattleData.isSweep;
		if (expr_16D != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_16D, protoWriter);
		}
		int expr_18A = sCWarBattleData.boxId;
		if (expr_18A != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_18A, protoWriter);
		}
		List<int> expr_1A8 = sCWarBattleData.completeIds;
		if (expr_1A8 != null)
		{
			List<int> list2 = expr_1A8;
			foreach (int arg_1D0_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(10, WireType.Variant, protoWriter);
				ProtoWriter.WriteInt32(arg_1D0_0, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sCWarBattleData, protoWriter);
	}

	private static SCWarBattleData Read(SCWarBattleData sCWarBattleData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 7)
								{
									if (num != 8)
									{
										if (num != 9)
										{
											if (num != 10)
											{
												if (sCWarBattleData == null)
												{
													SCWarBattleData expr_2B4 = new SCWarBattleData();
													ProtoReader.NoteObject(expr_2B4, protoReader);
													sCWarBattleData = expr_2B4;
												}
												protoReader.AppendExtensionData(sCWarBattleData);
											}
											else
											{
												if (sCWarBattleData == null)
												{
													SCWarBattleData expr_22D = new SCWarBattleData();
													ProtoReader.NoteObject(expr_22D, protoReader);
													sCWarBattleData = expr_22D;
												}
												List<int> list = sCWarBattleData.completeIds;
												if (list == null)
												{
													list = new List<int>();
												}
												if (protoReader.WireType != WireType.String)
												{
													int num2 = protoReader.FieldNumber;
													do
													{
														list.Add(protoReader.ReadInt32());
													}
													while (protoReader.TryReadFieldHeader(num2));
												}
												else
												{
													SubItemToken arg_29F_0 = ProtoReader.StartSubItem(protoReader);
													while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
													{
														list.Add(protoReader.ReadInt32());
													}
													ProtoReader.EndSubItem(arg_29F_0, protoReader);
												}
											}
										}
										else
										{
											if (sCWarBattleData == null)
											{
												SCWarBattleData expr_1FC = new SCWarBattleData();
												ProtoReader.NoteObject(expr_1FC, protoReader);
												sCWarBattleData = expr_1FC;
											}
											int num2 = protoReader.ReadInt32();
											sCWarBattleData.boxId = num2;
										}
									}
									else
									{
										if (sCWarBattleData == null)
										{
											SCWarBattleData expr_1CB = new SCWarBattleData();
											ProtoReader.NoteObject(expr_1CB, protoReader);
											sCWarBattleData = expr_1CB;
										}
										int num2 = protoReader.ReadInt32();
										sCWarBattleData.isSweep = num2;
									}
								}
								else
								{
									if (sCWarBattleData == null)
									{
										SCWarBattleData expr_19B = new SCWarBattleData();
										ProtoReader.NoteObject(expr_19B, protoReader);
										sCWarBattleData = expr_19B;
									}
									long num3 = protoReader.ReadInt64();
									sCWarBattleData.cdTime = num3;
								}
							}
							else
							{
								if (sCWarBattleData == null)
								{
									SCWarBattleData expr_16B = new SCWarBattleData();
									ProtoReader.NoteObject(expr_16B, protoReader);
									sCWarBattleData = expr_16B;
								}
								int num2 = protoReader.ReadInt32();
								sCWarBattleData.battleId = num2;
							}
						}
						else
						{
							if (sCWarBattleData == null)
							{
								SCWarBattleData expr_DB = new SCWarBattleData();
								ProtoReader.NoteObject(expr_DB, protoReader);
								sCWarBattleData = expr_DB;
							}
							List<int> list = sCWarBattleData.starPrize;
							if (list == null)
							{
								list = new List<int>();
							}
							if (protoReader.WireType != WireType.String)
							{
								int num2 = protoReader.FieldNumber;
								do
								{
									list.Add(protoReader.ReadInt32());
								}
								while (protoReader.TryReadFieldHeader(num2));
							}
							else
							{
								SubItemToken arg_14D_0 = ProtoReader.StartSubItem(protoReader);
								while (ProtoReader.HasSubValue(WireType.Variant, protoReader))
								{
									list.Add(protoReader.ReadInt32());
								}
								ProtoReader.EndSubItem(arg_14D_0, protoReader);
							}
						}
					}
					else
					{
						if (sCWarBattleData == null)
						{
							SCWarBattleData expr_79 = new SCWarBattleData();
							ProtoReader.NoteObject(expr_79, protoReader);
							sCWarBattleData = expr_79;
						}
						List<KVStruct> list2 = sCWarBattleData.battlefields;
						if (list2 == null)
						{
							list2 = new List<KVStruct>();
						}
						int num2 = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_B1_0 = list2;
							KVStruct arg_A4_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_B1_1 = ProtoMsgSerializer.Read(arg_A4_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_B1_0.Add(arg_B1_1);
						}
						while (protoReader.TryReadFieldHeader(num2));
					}
				}
				else
				{
					if (sCWarBattleData == null)
					{
						SCWarBattleData expr_49 = new SCWarBattleData();
						ProtoReader.NoteObject(expr_49, protoReader);
						sCWarBattleData = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					sCWarBattleData.zoneId = num2;
				}
			}
			else
			{
				if (sCWarBattleData == null)
				{
					SCWarBattleData expr_19 = new SCWarBattleData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sCWarBattleData = expr_19;
				}
				long num3 = protoReader.ReadInt64();
				sCWarBattleData.id = num3;
			}
		}
		if (sCWarBattleData == null)
		{
			SCWarBattleData expr_2DD = new SCWarBattleData();
			ProtoReader.NoteObject(expr_2DD, protoReader);
			sCWarBattleData = expr_2DD;
		}
		return sCWarBattleData;
	}

	private static void Write(SupperSkillEvent supperSkillEvent, ProtoWriter protoWriter)
	{
		if (supperSkillEvent.GetType() != typeof(SupperSkillEvent))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SupperSkillEvent), supperSkillEvent.GetType());
		}
		int expr_2D = supperSkillEvent.skillType;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_2D, protoWriter);
		}
		int expr_4A = supperSkillEvent.skillId;
		if (expr_4A != 0)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt32(expr_4A, protoWriter);
		}
		Position expr_67 = supperSkillEvent.pos;
		if (expr_67 != null)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_67, protoWriter);
			ProtoMsgSerializer.Write(expr_67, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		List<OperationTanksPos> expr_93 = supperSkillEvent.tanksPos;
		if (expr_93 != null)
		{
			List<OperationTanksPos> list = expr_93;
			foreach (OperationTanksPos arg_B8_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_B8_0, protoWriter);
				ProtoMsgSerializer.Write(arg_B8_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(supperSkillEvent, protoWriter);
	}

	private static SupperSkillEvent Read(SupperSkillEvent supperSkillEvent, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (supperSkillEvent == null)
							{
								SupperSkillEvent expr_11B = new SupperSkillEvent();
								ProtoReader.NoteObject(expr_11B, protoReader);
								supperSkillEvent = expr_11B;
							}
							protoReader.AppendExtensionData(supperSkillEvent);
						}
						else
						{
							if (supperSkillEvent == null)
							{
								SupperSkillEvent expr_C0 = new SupperSkillEvent();
								ProtoReader.NoteObject(expr_C0, protoReader);
								supperSkillEvent = expr_C0;
							}
							List<OperationTanksPos> list = supperSkillEvent.tanksPos;
							if (list == null)
							{
								list = new List<OperationTanksPos>();
							}
							int num2 = protoReader.FieldNumber;
							do
							{
								List<OperationTanksPos> arg_FA_0 = list;
								OperationTanksPos arg_EE_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								OperationTanksPos arg_FA_1 = ProtoMsgSerializer.Read(arg_EE_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_FA_0.Add(arg_FA_1);
							}
							while (protoReader.TryReadFieldHeader(num2));
						}
					}
					else
					{
						if (supperSkillEvent == null)
						{
							SupperSkillEvent expr_79 = new SupperSkillEvent();
							ProtoReader.NoteObject(expr_79, protoReader);
							supperSkillEvent = expr_79;
						}
						Position arg_90_0 = supperSkillEvent.pos;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						Position arg_9C_0 = ProtoMsgSerializer.Read(arg_90_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						Position position = arg_9C_0;
						if (position != null)
						{
							supperSkillEvent.pos = position;
						}
					}
				}
				else
				{
					if (supperSkillEvent == null)
					{
						SupperSkillEvent expr_49 = new SupperSkillEvent();
						ProtoReader.NoteObject(expr_49, protoReader);
						supperSkillEvent = expr_49;
					}
					int num2 = protoReader.ReadInt32();
					supperSkillEvent.skillId = num2;
				}
			}
			else
			{
				if (supperSkillEvent == null)
				{
					SupperSkillEvent expr_19 = new SupperSkillEvent();
					ProtoReader.NoteObject(expr_19, protoReader);
					supperSkillEvent = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				supperSkillEvent.skillType = num2;
			}
		}
		if (supperSkillEvent == null)
		{
			SupperSkillEvent expr_144 = new SupperSkillEvent();
			ProtoReader.NoteObject(expr_144, protoReader);
			supperSkillEvent = expr_144;
		}
		return supperSkillEvent;
	}

	private static void Write(SweepData sweepData, ProtoWriter protoWriter)
	{
		if (sweepData.GetType() != typeof(SweepData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SweepData), sweepData.GetType());
		}
		List<KVStruct> expr_2D = sweepData.res;
		if (expr_2D != null)
		{
			List<KVStruct> list = expr_2D;
			foreach (KVStruct arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_91 = sweepData.item;
		if (expr_91 != null)
		{
			List<KVStruct> list = expr_91;
			foreach (KVStruct arg_B6_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_B6_0, protoWriter);
				ProtoMsgSerializer.Write(arg_B6_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_F5 = sweepData.equip;
		if (expr_F5 != null)
		{
			List<KVStruct> list = expr_F5;
			foreach (KVStruct arg_11A_0 in list)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_11A_0, protoWriter);
				ProtoMsgSerializer.Write(arg_11A_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(sweepData, protoWriter);
	}

	private static SweepData Read(SweepData sweepData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (sweepData == null)
						{
							SweepData expr_130 = new SweepData();
							ProtoReader.NoteObject(expr_130, protoReader);
							sweepData = expr_130;
						}
						protoReader.AppendExtensionData(sweepData);
					}
					else
					{
						if (sweepData == null)
						{
							SweepData expr_D9 = new SweepData();
							ProtoReader.NoteObject(expr_D9, protoReader);
							sweepData = expr_D9;
						}
						List<KVStruct> list = sweepData.equip;
						if (list == null)
						{
							list = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_10F_0 = list;
							KVStruct arg_103_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_10F_1 = ProtoMsgSerializer.Read(arg_103_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_10F_0.Add(arg_10F_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sweepData == null)
					{
						SweepData expr_79 = new SweepData();
						ProtoReader.NoteObject(expr_79, protoReader);
						sweepData = expr_79;
					}
					List<KVStruct> list = sweepData.item;
					if (list == null)
					{
						list = new List<KVStruct>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<KVStruct> arg_AF_0 = list;
						KVStruct arg_A3_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						KVStruct arg_AF_1 = ProtoMsgSerializer.Read(arg_A3_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_AF_0.Add(arg_AF_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (sweepData == null)
				{
					SweepData expr_19 = new SweepData();
					ProtoReader.NoteObject(expr_19, protoReader);
					sweepData = expr_19;
				}
				List<KVStruct> list = sweepData.res;
				if (list == null)
				{
					list = new List<KVStruct>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<KVStruct> arg_4F_0 = list;
					KVStruct arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					KVStruct arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (sweepData == null)
		{
			SweepData expr_159 = new SweepData();
			ProtoReader.NoteObject(expr_159, protoReader);
			sweepData = expr_159;
		}
		return sweepData;
	}

	private static void Write(SWValidateFightEvent sWValidateFightEvent, ProtoWriter protoWriter)
	{
		if (sWValidateFightEvent.GetType() != typeof(SWValidateFightEvent))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(SWValidateFightEvent), sWValidateFightEvent.GetType());
		}
		List<FightEventData> expr_2D = sWValidateFightEvent.eventData;
		if (expr_2D != null)
		{
			List<FightEventData> list = expr_2D;
			foreach (FightEventData arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(1, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ValidateAdditionData expr_91 = sWValidateFightEvent.addition;
		if (expr_91 != null)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_91, protoWriter);
			ProtoMsgSerializer.Write(expr_91, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		List<VFDeadData> expr_BD = sWValidateFightEvent.vfdata;
		if (expr_BD != null)
		{
			List<VFDeadData> list2 = expr_BD;
			foreach (VFDeadData arg_E3_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(8, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_E3_0, protoWriter);
				ProtoMsgSerializer.Write(arg_E3_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		long expr_122 = sWValidateFightEvent.id;
		if (expr_122 != 0L)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, protoWriter);
			ProtoWriter.WriteInt64(expr_122, protoWriter);
		}
		SCIslandData expr_149 = sWValidateFightEvent.targetIslandData;
		if (expr_149 != null)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.String, protoWriter);
			SubItemToken token = ProtoWriter.StartSubItem(expr_149, protoWriter);
			ProtoMsgSerializer.Write(expr_149, protoWriter);
			ProtoWriter.EndSubItem(token, protoWriter);
		}
		ProtoWriter.AppendExtensionData(sWValidateFightEvent, protoWriter);
	}

	private static SWValidateFightEvent Read(SWValidateFightEvent sWValidateFightEvent, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 8)
					{
						if (num != 9)
						{
							if (num != 10)
							{
								if (sWValidateFightEvent == null)
								{
									SWValidateFightEvent expr_19C = new SWValidateFightEvent();
									ProtoReader.NoteObject(expr_19C, protoReader);
									sWValidateFightEvent = expr_19C;
								}
								protoReader.AppendExtensionData(sWValidateFightEvent);
							}
							else
							{
								if (sWValidateFightEvent == null)
								{
									SWValidateFightEvent expr_15B = new SWValidateFightEvent();
									ProtoReader.NoteObject(expr_15B, protoReader);
									sWValidateFightEvent = expr_15B;
								}
								SCIslandData arg_172_0 = sWValidateFightEvent.targetIslandData;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								SCIslandData arg_17E_0 = ProtoMsgSerializer.Read(arg_172_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								SCIslandData sCIslandData = arg_17E_0;
								if (sCIslandData != null)
								{
									sWValidateFightEvent.targetIslandData = sCIslandData;
								}
							}
						}
						else
						{
							if (sWValidateFightEvent == null)
							{
								SWValidateFightEvent expr_128 = new SWValidateFightEvent();
								ProtoReader.NoteObject(expr_128, protoReader);
								sWValidateFightEvent = expr_128;
							}
							long id = protoReader.ReadInt64();
							sWValidateFightEvent.id = id;
						}
					}
					else
					{
						if (sWValidateFightEvent == null)
						{
							SWValidateFightEvent expr_C3 = new SWValidateFightEvent();
							ProtoReader.NoteObject(expr_C3, protoReader);
							sWValidateFightEvent = expr_C3;
						}
						List<VFDeadData> list = sWValidateFightEvent.vfdata;
						if (list == null)
						{
							list = new List<VFDeadData>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<VFDeadData> arg_FD_0 = list;
							VFDeadData arg_F1_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							VFDeadData arg_FD_1 = ProtoMsgSerializer.Read(arg_F1_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_FD_0.Add(arg_FD_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (sWValidateFightEvent == null)
					{
						SWValidateFightEvent expr_79 = new SWValidateFightEvent();
						ProtoReader.NoteObject(expr_79, protoReader);
						sWValidateFightEvent = expr_79;
					}
					ValidateAdditionData arg_90_0 = sWValidateFightEvent.addition;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					ValidateAdditionData arg_9C_0 = ProtoMsgSerializer.Read(arg_90_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					ValidateAdditionData validateAdditionData = arg_9C_0;
					if (validateAdditionData != null)
					{
						sWValidateFightEvent.addition = validateAdditionData;
					}
				}
			}
			else
			{
				if (sWValidateFightEvent == null)
				{
					SWValidateFightEvent expr_19 = new SWValidateFightEvent();
					ProtoReader.NoteObject(expr_19, protoReader);
					sWValidateFightEvent = expr_19;
				}
				List<FightEventData> list2 = sWValidateFightEvent.eventData;
				if (list2 == null)
				{
					list2 = new List<FightEventData>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<FightEventData> arg_4F_0 = list2;
					FightEventData arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					FightEventData arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (sWValidateFightEvent == null)
		{
			SWValidateFightEvent expr_1C5 = new SWValidateFightEvent();
			ProtoReader.NoteObject(expr_1C5, protoReader);
			sWValidateFightEvent = expr_1C5;
		}
		return sWValidateFightEvent;
	}

	private static void Write(ValidateAdditionData validateAdditionData, ProtoWriter protoWriter)
	{
		if (validateAdditionData.GetType() != typeof(ValidateAdditionData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(ValidateAdditionData), validateAdditionData.GetType());
		}
		List<SCIslandOfficerData> expr_2D = validateAdditionData.fighterOfficer;
		if (expr_2D != null)
		{
			List<SCIslandOfficerData> list = expr_2D;
			foreach (SCIslandOfficerData arg_52_0 in list)
			{
				ProtoWriter.WriteFieldHeader(2, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_52_0, protoWriter);
				ProtoMsgSerializer.Write(arg_52_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCIslandOfficerData> expr_91 = validateAdditionData.targetOfficer;
		if (expr_91 != null)
		{
			List<SCIslandOfficerData> list = expr_91;
			foreach (SCIslandOfficerData arg_B6_0 in list)
			{
				ProtoWriter.WriteFieldHeader(3, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_B6_0, protoWriter);
				ProtoMsgSerializer.Write(arg_B6_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_F5 = validateAdditionData.fighterTech;
		if (expr_F5 != null)
		{
			List<KVStruct> list2 = expr_F5;
			foreach (KVStruct arg_11B_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(4, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_11B_0, protoWriter);
				ProtoMsgSerializer.Write(arg_11B_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<KVStruct> expr_15A = validateAdditionData.targetTech;
		if (expr_15A != null)
		{
			List<KVStruct> list2 = expr_15A;
			foreach (KVStruct arg_180_0 in list2)
			{
				ProtoWriter.WriteFieldHeader(5, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_180_0, protoWriter);
				ProtoMsgSerializer.Write(arg_180_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCArmyData> expr_1BF = validateAdditionData.fighterArmy;
		if (expr_1BF != null)
		{
			List<SCArmyData> list3 = expr_1BF;
			foreach (SCArmyData arg_1E7_0 in list3)
			{
				ProtoWriter.WriteFieldHeader(6, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_1E7_0, protoWriter);
				ProtoMsgSerializer.Write(arg_1E7_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		List<SCArmyData> expr_226 = validateAdditionData.targetArmy;
		if (expr_226 != null)
		{
			List<SCArmyData> list3 = expr_226;
			foreach (SCArmyData arg_24E_0 in list3)
			{
				ProtoWriter.WriteFieldHeader(7, WireType.String, protoWriter);
				SubItemToken token = ProtoWriter.StartSubItem(arg_24E_0, protoWriter);
				ProtoMsgSerializer.Write(arg_24E_0, protoWriter);
				ProtoWriter.EndSubItem(token, protoWriter);
			}
		}
		ProtoWriter.AppendExtensionData(validateAdditionData, protoWriter);
	}

	private static ValidateAdditionData Read(ValidateAdditionData validateAdditionData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 2)
			{
				if (num != 3)
				{
					if (num != 4)
					{
						if (num != 5)
						{
							if (num != 6)
							{
								if (num != 7)
								{
									if (validateAdditionData == null)
									{
										ValidateAdditionData expr_260 = new ValidateAdditionData();
										ProtoReader.NoteObject(expr_260, protoReader);
										validateAdditionData = expr_260;
									}
									protoReader.AppendExtensionData(validateAdditionData);
								}
								else
								{
									if (validateAdditionData == null)
									{
										ValidateAdditionData expr_205 = new ValidateAdditionData();
										ProtoReader.NoteObject(expr_205, protoReader);
										validateAdditionData = expr_205;
									}
									List<SCArmyData> list = validateAdditionData.targetArmy;
									if (list == null)
									{
										list = new List<SCArmyData>();
									}
									int fieldNumber = protoReader.FieldNumber;
									do
									{
										List<SCArmyData> arg_23F_0 = list;
										SCArmyData arg_233_0 = null;
										SubItemToken token = ProtoReader.StartSubItem(protoReader);
										SCArmyData arg_23F_1 = ProtoMsgSerializer.Read(arg_233_0, protoReader);
										ProtoReader.EndSubItem(token, protoReader);
										arg_23F_0.Add(arg_23F_1);
									}
									while (protoReader.TryReadFieldHeader(fieldNumber));
								}
							}
							else
							{
								if (validateAdditionData == null)
								{
									ValidateAdditionData expr_1A1 = new ValidateAdditionData();
									ProtoReader.NoteObject(expr_1A1, protoReader);
									validateAdditionData = expr_1A1;
								}
								List<SCArmyData> list = validateAdditionData.fighterArmy;
								if (list == null)
								{
									list = new List<SCArmyData>();
								}
								int fieldNumber = protoReader.FieldNumber;
								do
								{
									List<SCArmyData> arg_1DB_0 = list;
									SCArmyData arg_1CF_0 = null;
									SubItemToken token = ProtoReader.StartSubItem(protoReader);
									SCArmyData arg_1DB_1 = ProtoMsgSerializer.Read(arg_1CF_0, protoReader);
									ProtoReader.EndSubItem(token, protoReader);
									arg_1DB_0.Add(arg_1DB_1);
								}
								while (protoReader.TryReadFieldHeader(fieldNumber));
							}
						}
						else
						{
							if (validateAdditionData == null)
							{
								ValidateAdditionData expr_13D = new ValidateAdditionData();
								ProtoReader.NoteObject(expr_13D, protoReader);
								validateAdditionData = expr_13D;
							}
							List<KVStruct> list2 = validateAdditionData.targetTech;
							if (list2 == null)
							{
								list2 = new List<KVStruct>();
							}
							int fieldNumber = protoReader.FieldNumber;
							do
							{
								List<KVStruct> arg_177_0 = list2;
								KVStruct arg_16B_0 = null;
								SubItemToken token = ProtoReader.StartSubItem(protoReader);
								KVStruct arg_177_1 = ProtoMsgSerializer.Read(arg_16B_0, protoReader);
								ProtoReader.EndSubItem(token, protoReader);
								arg_177_0.Add(arg_177_1);
							}
							while (protoReader.TryReadFieldHeader(fieldNumber));
						}
					}
					else
					{
						if (validateAdditionData == null)
						{
							ValidateAdditionData expr_D9 = new ValidateAdditionData();
							ProtoReader.NoteObject(expr_D9, protoReader);
							validateAdditionData = expr_D9;
						}
						List<KVStruct> list2 = validateAdditionData.fighterTech;
						if (list2 == null)
						{
							list2 = new List<KVStruct>();
						}
						int fieldNumber = protoReader.FieldNumber;
						do
						{
							List<KVStruct> arg_113_0 = list2;
							KVStruct arg_107_0 = null;
							SubItemToken token = ProtoReader.StartSubItem(protoReader);
							KVStruct arg_113_1 = ProtoMsgSerializer.Read(arg_107_0, protoReader);
							ProtoReader.EndSubItem(token, protoReader);
							arg_113_0.Add(arg_113_1);
						}
						while (protoReader.TryReadFieldHeader(fieldNumber));
					}
				}
				else
				{
					if (validateAdditionData == null)
					{
						ValidateAdditionData expr_79 = new ValidateAdditionData();
						ProtoReader.NoteObject(expr_79, protoReader);
						validateAdditionData = expr_79;
					}
					List<SCIslandOfficerData> list3 = validateAdditionData.targetOfficer;
					if (list3 == null)
					{
						list3 = new List<SCIslandOfficerData>();
					}
					int fieldNumber = protoReader.FieldNumber;
					do
					{
						List<SCIslandOfficerData> arg_AF_0 = list3;
						SCIslandOfficerData arg_A3_0 = null;
						SubItemToken token = ProtoReader.StartSubItem(protoReader);
						SCIslandOfficerData arg_AF_1 = ProtoMsgSerializer.Read(arg_A3_0, protoReader);
						ProtoReader.EndSubItem(token, protoReader);
						arg_AF_0.Add(arg_AF_1);
					}
					while (protoReader.TryReadFieldHeader(fieldNumber));
				}
			}
			else
			{
				if (validateAdditionData == null)
				{
					ValidateAdditionData expr_19 = new ValidateAdditionData();
					ProtoReader.NoteObject(expr_19, protoReader);
					validateAdditionData = expr_19;
				}
				List<SCIslandOfficerData> list3 = validateAdditionData.fighterOfficer;
				if (list3 == null)
				{
					list3 = new List<SCIslandOfficerData>();
				}
				int fieldNumber = protoReader.FieldNumber;
				do
				{
					List<SCIslandOfficerData> arg_4F_0 = list3;
					SCIslandOfficerData arg_43_0 = null;
					SubItemToken token = ProtoReader.StartSubItem(protoReader);
					SCIslandOfficerData arg_4F_1 = ProtoMsgSerializer.Read(arg_43_0, protoReader);
					ProtoReader.EndSubItem(token, protoReader);
					arg_4F_0.Add(arg_4F_1);
				}
				while (protoReader.TryReadFieldHeader(fieldNumber));
			}
		}
		if (validateAdditionData == null)
		{
			ValidateAdditionData expr_289 = new ValidateAdditionData();
			ProtoReader.NoteObject(expr_289, protoReader);
			validateAdditionData = expr_289;
		}
		return validateAdditionData;
	}

	private static void Write(VFDeadData vFDeadData, ProtoWriter writer)
	{
		if (vFDeadData.GetType() != typeof(VFDeadData))
		{
			TypeModel.ThrowUnexpectedSubtype(typeof(VFDeadData), vFDeadData.GetType());
		}
		int expr_2D = vFDeadData.attType;
		if (expr_2D != 0)
		{
			ProtoWriter.WriteFieldHeader(1, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D, writer);
		}
		long expr_4A = vFDeadData.attId;
		if (expr_4A != 0L)
		{
			ProtoWriter.WriteFieldHeader(2, WireType.Variant, writer);
			ProtoWriter.WriteInt64(expr_4A, writer);
		}
		float expr_70 = vFDeadData.attDis;
		if (expr_70 != 0f)
		{
			ProtoWriter.WriteFieldHeader(3, WireType.Fixed32, writer);
			ProtoWriter.WriteSingle(expr_70, writer);
		}
		int expr_92 = vFDeadData.attLife;
		if (expr_92 != 0)
		{
			ProtoWriter.WriteFieldHeader(4, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_92, writer);
		}
		float expr_AF = vFDeadData.attFrequency;
		if (expr_AF != 0f)
		{
			ProtoWriter.WriteFieldHeader(5, WireType.Fixed32, writer);
			ProtoWriter.WriteSingle(expr_AF, writer);
		}
		float expr_D1 = vFDeadData.shootFrequency;
		if (expr_D1 != 0f)
		{
			ProtoWriter.WriteFieldHeader(6, WireType.Fixed32, writer);
			ProtoWriter.WriteSingle(expr_D1, writer);
		}
		int expr_F3 = vFDeadData.life;
		if (expr_F3 != 0)
		{
			ProtoWriter.WriteFieldHeader(7, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_F3, writer);
		}
		int expr_110 = vFDeadData.lifeAddition;
		if (expr_110 != 0)
		{
			ProtoWriter.WriteFieldHeader(8, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_110, writer);
		}
		int expr_12D = vFDeadData.breakArmor;
		if (expr_12D != 0)
		{
			ProtoWriter.WriteFieldHeader(9, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_12D, writer);
		}
		int expr_14B = vFDeadData.breakArmorAddition;
		if (expr_14B != 0)
		{
			ProtoWriter.WriteFieldHeader(10, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_14B, writer);
		}
		int expr_169 = vFDeadData.defBreak;
		if (expr_169 != 0)
		{
			ProtoWriter.WriteFieldHeader(11, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_169, writer);
		}
		int expr_187 = vFDeadData.defBreakAddition;
		if (expr_187 != 0)
		{
			ProtoWriter.WriteFieldHeader(12, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_187, writer);
		}
		int expr_1A5 = vFDeadData.defHit;
		if (expr_1A5 != 0)
		{
			ProtoWriter.WriteFieldHeader(13, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_1A5, writer);
		}
		int expr_1C3 = vFDeadData.defHitAddition;
		if (expr_1C3 != 0)
		{
			ProtoWriter.WriteFieldHeader(14, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_1C3, writer);
		}
		int expr_1E1 = vFDeadData.crit;
		if (expr_1E1 != 0)
		{
			ProtoWriter.WriteFieldHeader(15, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_1E1, writer);
		}
		int expr_1FF = vFDeadData.critAddition;
		if (expr_1FF != 0)
		{
			ProtoWriter.WriteFieldHeader(16, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_1FF, writer);
		}
		int expr_21D = vFDeadData.resist;
		if (expr_21D != 0)
		{
			ProtoWriter.WriteFieldHeader(17, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_21D, writer);
		}
		int expr_23B = vFDeadData.resistAddition;
		if (expr_23B != 0)
		{
			ProtoWriter.WriteFieldHeader(18, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_23B, writer);
		}
		int expr_259 = vFDeadData.critHR;
		if (expr_259 != 0)
		{
			ProtoWriter.WriteFieldHeader(19, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_259, writer);
		}
		int expr_277 = vFDeadData.critHRAddition;
		if (expr_277 != 0)
		{
			ProtoWriter.WriteFieldHeader(20, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_277, writer);
		}
		int expr_295 = vFDeadData.attCharType;
		if (expr_295 != 0)
		{
			ProtoWriter.WriteFieldHeader(21, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_295, writer);
		}
		int expr_2B3 = vFDeadData.attIndex;
		if (expr_2B3 != 0)
		{
			ProtoWriter.WriteFieldHeader(22, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2B3, writer);
		}
		int expr_2D1 = vFDeadData.attLV;
		if (expr_2D1 != 0)
		{
			ProtoWriter.WriteFieldHeader(23, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2D1, writer);
		}
		int expr_2EF = vFDeadData.attStar;
		if (expr_2EF != 0)
		{
			ProtoWriter.WriteFieldHeader(24, WireType.Variant, writer);
			ProtoWriter.WriteInt32(expr_2EF, writer);
		}
		ProtoWriter.AppendExtensionData(vFDeadData, writer);
	}

	private static VFDeadData Read(VFDeadData vFDeadData, ProtoReader protoReader)
	{
		int num;
		while ((num = protoReader.ReadFieldHeader()) > 0)
		{
			if (num != 1)
			{
				if (num != 2)
				{
					if (num != 3)
					{
						if (num != 4)
						{
							if (num != 5)
							{
								if (num != 6)
								{
									if (num != 7)
									{
										if (num != 8)
										{
											if (num != 9)
											{
												if (num != 10)
												{
													if (num != 11)
													{
														if (num != 12)
														{
															if (num != 13)
															{
																if (num != 14)
																{
																	if (num != 15)
																	{
																		if (num != 16)
																		{
																			if (num != 17)
																			{
																				if (num != 18)
																				{
																					if (num != 19)
																					{
																						if (num != 20)
																						{
																							if (num != 21)
																							{
																								if (num != 22)
																								{
																									if (num != 23)
																									{
																										if (num != 24)
																										{
																											if (vFDeadData == null)
																											{
																												VFDeadData expr_4A0 = new VFDeadData();
																												ProtoReader.NoteObject(expr_4A0, protoReader);
																												vFDeadData = expr_4A0;
																											}
																											protoReader.AppendExtensionData(vFDeadData);
																										}
																										else
																										{
																											if (vFDeadData == null)
																											{
																												VFDeadData expr_479 = new VFDeadData();
																												ProtoReader.NoteObject(expr_479, protoReader);
																												vFDeadData = expr_479;
																											}
																											int num2 = protoReader.ReadInt32();
																											vFDeadData.attStar = num2;
																										}
																									}
																									else
																									{
																										if (vFDeadData == null)
																										{
																											VFDeadData expr_448 = new VFDeadData();
																											ProtoReader.NoteObject(expr_448, protoReader);
																											vFDeadData = expr_448;
																										}
																										int num2 = protoReader.ReadInt32();
																										vFDeadData.attLV = num2;
																									}
																								}
																								else
																								{
																									if (vFDeadData == null)
																									{
																										VFDeadData expr_417 = new VFDeadData();
																										ProtoReader.NoteObject(expr_417, protoReader);
																										vFDeadData = expr_417;
																									}
																									int num2 = protoReader.ReadInt32();
																									vFDeadData.attIndex = num2;
																								}
																							}
																							else
																							{
																								if (vFDeadData == null)
																								{
																									VFDeadData expr_3E6 = new VFDeadData();
																									ProtoReader.NoteObject(expr_3E6, protoReader);
																									vFDeadData = expr_3E6;
																								}
																								int num2 = protoReader.ReadInt32();
																								vFDeadData.attCharType = num2;
																							}
																						}
																						else
																						{
																							if (vFDeadData == null)
																							{
																								VFDeadData expr_3B5 = new VFDeadData();
																								ProtoReader.NoteObject(expr_3B5, protoReader);
																								vFDeadData = expr_3B5;
																							}
																							int num2 = protoReader.ReadInt32();
																							vFDeadData.critHRAddition = num2;
																						}
																					}
																					else
																					{
																						if (vFDeadData == null)
																						{
																							VFDeadData expr_384 = new VFDeadData();
																							ProtoReader.NoteObject(expr_384, protoReader);
																							vFDeadData = expr_384;
																						}
																						int num2 = protoReader.ReadInt32();
																						vFDeadData.critHR = num2;
																					}
																				}
																				else
																				{
																					if (vFDeadData == null)
																					{
																						VFDeadData expr_353 = new VFDeadData();
																						ProtoReader.NoteObject(expr_353, protoReader);
																						vFDeadData = expr_353;
																					}
																					int num2 = protoReader.ReadInt32();
																					vFDeadData.resistAddition = num2;
																				}
																			}
																			else
																			{
																				if (vFDeadData == null)
																				{
																					VFDeadData expr_322 = new VFDeadData();
																					ProtoReader.NoteObject(expr_322, protoReader);
																					vFDeadData = expr_322;
																				}
																				int num2 = protoReader.ReadInt32();
																				vFDeadData.resist = num2;
																			}
																		}
																		else
																		{
																			if (vFDeadData == null)
																			{
																				VFDeadData expr_2F1 = new VFDeadData();
																				ProtoReader.NoteObject(expr_2F1, protoReader);
																				vFDeadData = expr_2F1;
																			}
																			int num2 = protoReader.ReadInt32();
																			vFDeadData.critAddition = num2;
																		}
																	}
																	else
																	{
																		if (vFDeadData == null)
																		{
																			VFDeadData expr_2C0 = new VFDeadData();
																			ProtoReader.NoteObject(expr_2C0, protoReader);
																			vFDeadData = expr_2C0;
																		}
																		int num2 = protoReader.ReadInt32();
																		vFDeadData.crit = num2;
																	}
																}
																else
																{
																	if (vFDeadData == null)
																	{
																		VFDeadData expr_28F = new VFDeadData();
																		ProtoReader.NoteObject(expr_28F, protoReader);
																		vFDeadData = expr_28F;
																	}
																	int num2 = protoReader.ReadInt32();
																	vFDeadData.defHitAddition = num2;
																}
															}
															else
															{
																if (vFDeadData == null)
																{
																	VFDeadData expr_25E = new VFDeadData();
																	ProtoReader.NoteObject(expr_25E, protoReader);
																	vFDeadData = expr_25E;
																}
																int num2 = protoReader.ReadInt32();
																vFDeadData.defHit = num2;
															}
														}
														else
														{
															if (vFDeadData == null)
															{
																VFDeadData expr_22D = new VFDeadData();
																ProtoReader.NoteObject(expr_22D, protoReader);
																vFDeadData = expr_22D;
															}
															int num2 = protoReader.ReadInt32();
															vFDeadData.defBreakAddition = num2;
														}
													}
													else
													{
														if (vFDeadData == null)
														{
															VFDeadData expr_1FC = new VFDeadData();
															ProtoReader.NoteObject(expr_1FC, protoReader);
															vFDeadData = expr_1FC;
														}
														int num2 = protoReader.ReadInt32();
														vFDeadData.defBreak = num2;
													}
												}
												else
												{
													if (vFDeadData == null)
													{
														VFDeadData expr_1CB = new VFDeadData();
														ProtoReader.NoteObject(expr_1CB, protoReader);
														vFDeadData = expr_1CB;
													}
													int num2 = protoReader.ReadInt32();
													vFDeadData.breakArmorAddition = num2;
												}
											}
											else
											{
												if (vFDeadData == null)
												{
													VFDeadData expr_19A = new VFDeadData();
													ProtoReader.NoteObject(expr_19A, protoReader);
													vFDeadData = expr_19A;
												}
												int num2 = protoReader.ReadInt32();
												vFDeadData.breakArmor = num2;
											}
										}
										else
										{
											if (vFDeadData == null)
											{
												VFDeadData expr_169 = new VFDeadData();
												ProtoReader.NoteObject(expr_169, protoReader);
												vFDeadData = expr_169;
											}
											int num2 = protoReader.ReadInt32();
											vFDeadData.lifeAddition = num2;
										}
									}
									else
									{
										if (vFDeadData == null)
										{
											VFDeadData expr_139 = new VFDeadData();
											ProtoReader.NoteObject(expr_139, protoReader);
											vFDeadData = expr_139;
										}
										int num2 = protoReader.ReadInt32();
										vFDeadData.life = num2;
									}
								}
								else
								{
									if (vFDeadData == null)
									{
										VFDeadData expr_109 = new VFDeadData();
										ProtoReader.NoteObject(expr_109, protoReader);
										vFDeadData = expr_109;
									}
									float num3 = protoReader.ReadSingle();
									vFDeadData.shootFrequency = num3;
								}
							}
							else
							{
								if (vFDeadData == null)
								{
									VFDeadData expr_D9 = new VFDeadData();
									ProtoReader.NoteObject(expr_D9, protoReader);
									vFDeadData = expr_D9;
								}
								float num3 = protoReader.ReadSingle();
								vFDeadData.attFrequency = num3;
							}
						}
						else
						{
							if (vFDeadData == null)
							{
								VFDeadData expr_A9 = new VFDeadData();
								ProtoReader.NoteObject(expr_A9, protoReader);
								vFDeadData = expr_A9;
							}
							int num2 = protoReader.ReadInt32();
							vFDeadData.attLife = num2;
						}
					}
					else
					{
						if (vFDeadData == null)
						{
							VFDeadData expr_79 = new VFDeadData();
							ProtoReader.NoteObject(expr_79, protoReader);
							vFDeadData = expr_79;
						}
						float num3 = protoReader.ReadSingle();
						vFDeadData.attDis = num3;
					}
				}
				else
				{
					if (vFDeadData == null)
					{
						VFDeadData expr_49 = new VFDeadData();
						ProtoReader.NoteObject(expr_49, protoReader);
						vFDeadData = expr_49;
					}
					long attId = protoReader.ReadInt64();
					vFDeadData.attId = attId;
				}
			}
			else
			{
				if (vFDeadData == null)
				{
					VFDeadData expr_19 = new VFDeadData();
					ProtoReader.NoteObject(expr_19, protoReader);
					vFDeadData = expr_19;
				}
				int num2 = protoReader.ReadInt32();
				vFDeadData.attType = num2;
			}
		}
		if (vFDeadData == null)
		{
			VFDeadData expr_4C9 = new VFDeadData();
			ProtoReader.NoteObject(expr_4C9, protoReader);
			vFDeadData = expr_4C9;
		}
		return vFDeadData;
	}

	protected new int GetKeyImpl(Type key)
	{
		int result;
		if (ProtoMsgSerializer.knownTypes.TryGetValue(key, out result))
		{
			return result;
		}
		return -1;
	}

	protected internal new void Serialize(int num, object obj, ProtoWriter protoWriter)
	{
		switch (num / 128)
		{
		case 0:
			switch (num)
			{
			case 0:
				ProtoMsgSerializer.Write((AdditionData)obj, protoWriter);
				return;
			case 1:
				ProtoMsgSerializer.Write((ChatMessage)obj, protoWriter);
				return;
			case 2:
				ProtoMsgSerializer.Write((ContainerData)obj, protoWriter);
				return;
			case 3:
				ProtoMsgSerializer.Write((CSAddResore)obj, protoWriter);
				return;
			case 4:
				ProtoMsgSerializer.Write((CSAgreeLegionApply)obj, protoWriter);
				return;
			case 5:
				ProtoMsgSerializer.Write((CSAideIntensify)obj, protoWriter);
				return;
			case 6:
				ProtoMsgSerializer.Write((CSAideList)obj, protoWriter);
				return;
			case 7:
				ProtoMsgSerializer.Write((CSAideMix)obj, protoWriter);
				return;
			case 8:
				ProtoMsgSerializer.Write((CSAideMixCompleteUseMoney)obj, protoWriter);
				return;
			case 9:
				ProtoMsgSerializer.Write((CSAideRecycle)obj, protoWriter);
				return;
			case 10:
				ProtoMsgSerializer.Write((CSAideSend)obj, protoWriter);
				return;
			case 11:
				ProtoMsgSerializer.Write((CSArmyConfigure)obj, protoWriter);
				return;
			case 12:
				ProtoMsgSerializer.Write((CSArmyConfigureAuto)obj, protoWriter);
				return;
			case 13:
				ProtoMsgSerializer.Write((CSArmyConfigureEnd)obj, protoWriter);
				return;
			case 14:
				ProtoMsgSerializer.Write((CSArmyLevelUp)obj, protoWriter);
				return;
			case 15:
				ProtoMsgSerializer.Write((CSArmyLevelUpEnd)obj, protoWriter);
				return;
			case 16:
				ProtoMsgSerializer.Write((CSArmyList)obj, protoWriter);
				return;
			case 17:
				ProtoMsgSerializer.Write((CSArmyStarUp)obj, protoWriter);
				return;
			case 18:
				ProtoMsgSerializer.Write((CSBattleEnd)obj, protoWriter);
				return;
			case 19:
				ProtoMsgSerializer.Write((CSBattleReport)obj, protoWriter);
				return;
			case 20:
				ProtoMsgSerializer.Write((CSBattleStart)obj, protoWriter);
				return;
			case 21:
				ProtoMsgSerializer.Write((CSBuildingBuild)obj, protoWriter);
				return;
			case 22:
				ProtoMsgSerializer.Write((CSBuildingEnd)obj, protoWriter);
				return;
			case 23:
				ProtoMsgSerializer.Write((CSBuildingMove)obj, protoWriter);
				return;
			case 24:
				ProtoMsgSerializer.Write((CSBuildingRemove)obj, protoWriter);
				return;
			case 25:
				ProtoMsgSerializer.Write((CSBuildingRemoveEnd)obj, protoWriter);
				return;
			case 26:
				ProtoMsgSerializer.Write((CSBuildingUp)obj, protoWriter);
				return;
			case 27:
				ProtoMsgSerializer.Write((CSBuyArmyToken)obj, protoWriter);
				return;
			case 28:
				ProtoMsgSerializer.Write((CSBuyBuildingQueue)obj, protoWriter);
				return;
			case 29:
				ProtoMsgSerializer.Write((CSBuyGrowthFund)obj, protoWriter);
				return;
			case 30:
				ProtoMsgSerializer.Write((CSBuyItem)obj, protoWriter);
				return;
			case 31:
				ProtoMsgSerializer.Write((CSBuySearchToken)obj, protoWriter);
				return;
			case 32:
				ProtoMsgSerializer.Write((CSBuySkillToken)obj, protoWriter);
				return;
			case 33:
				ProtoMsgSerializer.Write((CSCalcMoney)obj, protoWriter);
				return;
			case 34:
				ProtoMsgSerializer.Write((CSCancelCDTime)obj, protoWriter);
				return;
			case 35:
				ProtoMsgSerializer.Write((CScancelConfigSoldier)obj, protoWriter);
				return;
			case 36:
				ProtoMsgSerializer.Write((CSCancelConfigureArmy)obj, protoWriter);
				return;
			case 37:
				ProtoMsgSerializer.Write((CSCityWallBatchMove)obj, protoWriter);
				return;
			case 38:
				ProtoMsgSerializer.Write((CSCityWallBatchUpLevel)obj, protoWriter);
				return;
			case 39:
				ProtoMsgSerializer.Write((CSClearExtarArmy)obj, protoWriter);
				return;
			case 40:
				ProtoMsgSerializer.Write((CSCompleteAchievement)obj, protoWriter);
				return;
			case 41:
				ProtoMsgSerializer.Write((CSCompleteTask)obj, protoWriter);
				return;
			case 42:
				ProtoMsgSerializer.Write((CSDebug)obj, protoWriter);
				return;
			case 43:
				ProtoMsgSerializer.Write((CSDeleteLegionHelpApply)obj, protoWriter);
				return;
			case 44:
				ProtoMsgSerializer.Write((CSDisMissLegionMember)obj, protoWriter);
				return;
			case 45:
				ProtoMsgSerializer.Write((CSEquipMix)obj, protoWriter);
				return;
			case 46:
				ProtoMsgSerializer.Write((CSExchangeGift)obj, protoWriter);
				return;
			case 47:
				ProtoMsgSerializer.Write((CSFightingEvent)obj, protoWriter);
				return;
			case 48:
				ProtoMsgSerializer.Write((CSGetActivityList)obj, protoWriter);
				return;
			case 49:
				ProtoMsgSerializer.Write((CSgetActivityPrize)obj, protoWriter);
				return;
			case 50:
				ProtoMsgSerializer.Write((CSGetContributionPrize)obj, protoWriter);
				return;
			case 51:
				ProtoMsgSerializer.Write((CSGetLegionApplyList)obj, protoWriter);
				return;
			case 52:
				ProtoMsgSerializer.Write((CSGetLegionHelpApplyList)obj, protoWriter);
				return;
			case 53:
				ProtoMsgSerializer.Write((CSGetOrderId)obj, protoWriter);
				return;
			case 54:
				ProtoMsgSerializer.Write((CSGetRanking)obj, protoWriter);
				return;
			case 55:
				ProtoMsgSerializer.Write((CSGetSkillCard)obj, protoWriter);
				return;
			case 56:
				ProtoMsgSerializer.Write((CSGM)obj, protoWriter);
				return;
			case 57:
				ProtoMsgSerializer.Write((CSHeartbeat)obj, protoWriter);
				return;
			case 58:
				ProtoMsgSerializer.Write((CSIgnoreAllLegionApply)obj, protoWriter);
				return;
			case 59:
				ProtoMsgSerializer.Write((CSIgnoreLegionApply)obj, protoWriter);
				return;
			case 60:
				ProtoMsgSerializer.Write((CSItemList)obj, protoWriter);
				return;
			case 61:
				ProtoMsgSerializer.Write((CSItemMix)obj, protoWriter);
				return;
			case 62:
				ProtoMsgSerializer.Write((CSLegionAdd)obj, protoWriter);
				return;
			case 63:
				ProtoMsgSerializer.Write((CSLegionCreate)obj, protoWriter);
				return;
			case 64:
				ProtoMsgSerializer.Write((CSLegionData)obj, protoWriter);
				return;
			case 65:
				ProtoMsgSerializer.Write((CSLegionHelp)obj, protoWriter);
				return;
			case 66:
				ProtoMsgSerializer.Write((CSLegionHelpApply)obj, protoWriter);
				return;
			case 67:
				ProtoMsgSerializer.Write((CSLegionJobUpOrDown)obj, protoWriter);
				return;
			case 68:
				ProtoMsgSerializer.Write((CSLegionMemberData)obj, protoWriter);
				return;
			case 69:
				ProtoMsgSerializer.Write((CSLegionOut)obj, protoWriter);
				return;
			case 70:
				ProtoMsgSerializer.Write((CSLogin)obj, protoWriter);
				return;
			case 71:
				ProtoMsgSerializer.Write((CSLoginData)obj, protoWriter);
				return;
			case 72:
				ProtoMsgSerializer.Write((CSMilitaryRankPrize)obj, protoWriter);
				return;
			case 73:
				ProtoMsgSerializer.Write((CSModifyLegionInfo)obj, protoWriter);
				return;
			case 74:
				ProtoMsgSerializer.Write((CSNewGuide)obj, protoWriter);
				return;
			case 75:
				ProtoMsgSerializer.Write((CSOfficerAddExp)obj, protoWriter);
				return;
			case 76:
				ProtoMsgSerializer.Write((CSOfficerDismiss)obj, protoWriter);
				return;
			case 77:
				ProtoMsgSerializer.Write((CSOfficerEmploy)obj, protoWriter);
				return;
			case 78:
				ProtoMsgSerializer.Write((CSOfficerEquOn)obj, protoWriter);
				return;
			case 79:
				ProtoMsgSerializer.Write((CSOfficerFreeze)obj, protoWriter);
				return;
			case 80:
				ProtoMsgSerializer.Write((CSOfficerList)obj, protoWriter);
				return;
			case 81:
				ProtoMsgSerializer.Write((CSOfficerRecruit)obj, protoWriter);
				return;
			case 82:
				ProtoMsgSerializer.Write((CSOfficerSkillUp)obj, protoWriter);
				return;
			case 83:
				ProtoMsgSerializer.Write((CSOfficerUpQuality)obj, protoWriter);
				return;
			case 84:
				ProtoMsgSerializer.Write((CSOnlineRewards)obj, protoWriter);
				return;
			case 85:
				ProtoMsgSerializer.Write((CSOpenBattleBox)obj, protoWriter);
				return;
			case 86:
				ProtoMsgSerializer.Write((CSOpenBattleFieldBox)obj, protoWriter);
				return;
			case 87:
				ProtoMsgSerializer.Write((CSOpenBox)obj, protoWriter);
				return;
			case 88:
				ProtoMsgSerializer.Write((CSOpenCloud)obj, protoWriter);
				return;
			case 89:
				ProtoMsgSerializer.Write((CSOpenEliteBox)obj, protoWriter);
				return;
			case 90:
				ProtoMsgSerializer.Write((CSPatrolArmyConfigure)obj, protoWriter);
				return;
			case 91:
				ProtoMsgSerializer.Write((CSPayCallback)obj, protoWriter);
				return;
			case 92:
				ProtoMsgSerializer.Write((CSPlayerWorldMap)obj, protoWriter);
				return;
			case 93:
				ProtoMsgSerializer.Write((CSPVP)obj, protoWriter);
				return;
			case 94:
				ProtoMsgSerializer.Write((CSRandomLegion)obj, protoWriter);
				return;
			case 95:
				ProtoMsgSerializer.Write((CSRankingList)obj, protoWriter);
				return;
			case 96:
				ProtoMsgSerializer.Write((CSRankingPrize)obj, protoWriter);
				return;
			case 97:
				ProtoMsgSerializer.Write((CSRankingPrizeList)obj, protoWriter);
				return;
			case 98:
				ProtoMsgSerializer.Write((CSReadMail)obj, protoWriter);
				return;
			case 99:
				ProtoMsgSerializer.Write((CSReadNotice)obj, protoWriter);
				return;
			case 100:
				ProtoMsgSerializer.Write((CSReceiveAccumulativeSignRewards)obj, protoWriter);
				return;
			case 101:
				ProtoMsgSerializer.Write((CSReceiveMailAttachment)obj, protoWriter);
				return;
			case 102:
				ProtoMsgSerializer.Write((CSReceiveReportMoney)obj, protoWriter);
				return;
			case 103:
				ProtoMsgSerializer.Write((CSReceiveVipDailyMoney)obj, protoWriter);
				return;
			case 104:
				ProtoMsgSerializer.Write((CSReconnection)obj, protoWriter);
				return;
			case 105:
				ProtoMsgSerializer.Write((CSRefreshActivity)obj, protoWriter);
				return;
			case 106:
				ProtoMsgSerializer.Write((CSRefreshArmsDealer)obj, protoWriter);
				return;
			case 107:
				ProtoMsgSerializer.Write((CSRefreshArmsDealerUseMoney)obj, protoWriter);
				return;
			case 108:
				ProtoMsgSerializer.Write((CSRelationList)obj, protoWriter);
				return;
			case 109:
				ProtoMsgSerializer.Write((CSReName)obj, protoWriter);
				return;
			case 110:
				ProtoMsgSerializer.Write((CSReplacePlayer)obj, protoWriter);
				return;
			case 111:
				ProtoMsgSerializer.Write((CSReportList)obj, protoWriter);
				return;
			case 112:
				ProtoMsgSerializer.Write((CSReportReaded)obj, protoWriter);
				return;
			case 113:
				ProtoMsgSerializer.Write((CSRequestActivity)obj, protoWriter);
				return;
			case 114:
				ProtoMsgSerializer.Write((CSRequestChitChatData)obj, protoWriter);
				return;
			case 115:
				ProtoMsgSerializer.Write((CSRetroactiveAllSignIn)obj, protoWriter);
				return;
			case 116:
				ProtoMsgSerializer.Write((CSRetroactiveSignIn)obj, protoWriter);
				return;
			case 117:
				ProtoMsgSerializer.Write((CSSearchLegion)obj, protoWriter);
				return;
			case 118:
				ProtoMsgSerializer.Write((CSSellArmy)obj, protoWriter);
				return;
			case 119:
				ProtoMsgSerializer.Write((CSSendMessage)obj, protoWriter);
				return;
			case 120:
				ProtoMsgSerializer.Write((CSSevenDaysPrize)obj, protoWriter);
				return;
			case 121:
				ProtoMsgSerializer.Write((CSShareBattleVideo)obj, protoWriter);
				return;
			case 122:
				ProtoMsgSerializer.Write((CSShopPay)obj, protoWriter);
				return;
			case 123:
				ProtoMsgSerializer.Write((CSSignIn)obj, protoWriter);
				return;
			case 124:
				ProtoMsgSerializer.Write((CSSkillConfig)obj, protoWriter);
				return;
			case 125:
				ProtoMsgSerializer.Write((CSSkillConfigList)obj, protoWriter);
				return;
			case 126:
				ProtoMsgSerializer.Write((CSSkillExchange)obj, protoWriter);
				return;
			case 127:
				ProtoMsgSerializer.Write((CSSkillList)obj, protoWriter);
				return;
			}
			break;
		case 1:
			switch (num)
			{
			case 128:
				ProtoMsgSerializer.Write((CSSkillMix)obj, protoWriter);
				return;
			case 129:
				ProtoMsgSerializer.Write((CSSkillMixEnd)obj, protoWriter);
				return;
			case 130:
				ProtoMsgSerializer.Write((CSSkillRemove)obj, protoWriter);
				return;
			case 131:
				ProtoMsgSerializer.Write((CSSkillUp)obj, protoWriter);
				return;
			case 132:
				ProtoMsgSerializer.Write((CSSocketHeat)obj, protoWriter);
				return;
			case 133:
				ProtoMsgSerializer.Write((CSSocketRegister)obj, protoWriter);
				return;
			case 134:
				ProtoMsgSerializer.Write((CSSoldierAdd)obj, protoWriter);
				return;
			case 135:
				ProtoMsgSerializer.Write((CSSoldierConfigure)obj, protoWriter);
				return;
			case 136:
				ProtoMsgSerializer.Write((CSSoldierConfigureEnd)obj, protoWriter);
				return;
			case 137:
				ProtoMsgSerializer.Write((CSSoldierRelive)obj, protoWriter);
				return;
			case 138:
				ProtoMsgSerializer.Write((CSSoldierSkillUp)obj, protoWriter);
				return;
			case 139:
				ProtoMsgSerializer.Write((CSSoldierUpStar)obj, protoWriter);
				return;
			case 140:
				ProtoMsgSerializer.Write((CSSpyIsland)obj, protoWriter);
				return;
			case 141:
				ProtoMsgSerializer.Write((CSSweep)obj, protoWriter);
				return;
			case 142:
				ProtoMsgSerializer.Write((CSTakeAllResource)obj, protoWriter);
				return;
			case 143:
				ProtoMsgSerializer.Write((CSTakeResource)obj, protoWriter);
				return;
			case 144:
				ProtoMsgSerializer.Write((CSTechDiamondPrize)obj, protoWriter);
				return;
			case 145:
				ProtoMsgSerializer.Write((CSTechList)obj, protoWriter);
				return;
			case 146:
				ProtoMsgSerializer.Write((CSTechUp)obj, protoWriter);
				return;
			case 147:
				ProtoMsgSerializer.Write((CSTechUpEnd)obj, protoWriter);
				return;
			case 148:
				ProtoMsgSerializer.Write((CSTowerStrength)obj, protoWriter);
				return;
			case 149:
				ProtoMsgSerializer.Write((CSTowerUpGrade)obj, protoWriter);
				return;
			case 150:
				ProtoMsgSerializer.Write((CSTurntableDraw)obj, protoWriter);
				return;
			case 151:
				ProtoMsgSerializer.Write((CSUseItem)obj, protoWriter);
				return;
			case 152:
				ProtoMsgSerializer.Write((CSUseItemToAddExp)obj, protoWriter);
				return;
			case 153:
				ProtoMsgSerializer.Write((CSUseItemToRelieve)obj, protoWriter);
				return;
			case 154:
				ProtoMsgSerializer.Write((CSUseMoneyBuyGold)obj, protoWriter);
				return;
			case 155:
				ProtoMsgSerializer.Write((CSWarStarPrize)obj, protoWriter);
				return;
			case 156:
				ProtoMsgSerializer.Write((CSWarZoneList)obj, protoWriter);
				return;
			case 157:
				ProtoMsgSerializer.Write((DesignActivityData)obj, protoWriter);
				return;
			case 158:
				ProtoMsgSerializer.Write((DieEvent)obj, protoWriter);
				return;
			case 159:
				ProtoMsgSerializer.Write((DownMessage)obj, protoWriter);
				return;
			case 160:
				ProtoMsgSerializer.Write((EventData)obj, protoWriter);
				return;
			case 161:
				ProtoMsgSerializer.Write((FightEventData)obj, protoWriter);
				return;
			case 162:
				ProtoMsgSerializer.Write((GM_AideInfo)obj, protoWriter);
				return;
			case 163:
				ProtoMsgSerializer.Write((GM_AideInfo.TYPE)obj, protoWriter);
				return;
			case 164:
				ProtoMsgSerializer.Write((GM_AideModify)obj, protoWriter);
				return;
			case 165:
				ProtoMsgSerializer.Write((GM_AideModify.TYPE)obj, protoWriter);
				return;
			case 166:
				ProtoMsgSerializer.Write((GM_BattleInfo)obj, protoWriter);
				return;
			case 167:
				ProtoMsgSerializer.Write((GM_BattleInfo.TYPE)obj, protoWriter);
				return;
			case 168:
				ProtoMsgSerializer.Write((GM_BattleModify)obj, protoWriter);
				return;
			case 169:
				ProtoMsgSerializer.Write((GM_BattleModify.TYPE)obj, protoWriter);
				return;
			case 170:
				ProtoMsgSerializer.Write((GM_GetRanking)obj, protoWriter);
				return;
			case 171:
				ProtoMsgSerializer.Write((GM_GetRanking.TYPE)obj, protoWriter);
				return;
			case 172:
				ProtoMsgSerializer.Write((GM_IslandInfo)obj, protoWriter);
				return;
			case 173:
				ProtoMsgSerializer.Write((GM_IslandInfo.TYPE)obj, protoWriter);
				return;
			case 174:
				ProtoMsgSerializer.Write((GM_ItemReloadStatus)obj, protoWriter);
				return;
			case 175:
				ProtoMsgSerializer.Write((GM_ItemReloadStatus.TYPE)obj, protoWriter);
				return;
			case 176:
				ProtoMsgSerializer.Write((GM_LogoutPlayer)obj, protoWriter);
				return;
			case 177:
				ProtoMsgSerializer.Write((GM_LogoutPlayer.TYPE)obj, protoWriter);
				return;
			case 178:
				ProtoMsgSerializer.Write((GM_Mail)obj, protoWriter);
				return;
			case 179:
				ProtoMsgSerializer.Write((GM_Mail.TYPE)obj, protoWriter);
				return;
			case 180:
				ProtoMsgSerializer.Write((GM_MailInfo)obj, protoWriter);
				return;
			case 181:
				ProtoMsgSerializer.Write((GM_MailInfo.TYPE)obj, protoWriter);
				return;
			case 182:
				ProtoMsgSerializer.Write((GM_MapInfo)obj, protoWriter);
				return;
			case 183:
				ProtoMsgSerializer.Write((GM_MapInfo.TYPE)obj, protoWriter);
				return;
			case 184:
				ProtoMsgSerializer.Write((GM_MapModify)obj, protoWriter);
				return;
			case 185:
				ProtoMsgSerializer.Write((GM_MapModify.TYPE)obj, protoWriter);
				return;
			case 186:
				ProtoMsgSerializer.Write((GM_MilitaryInfo)obj, protoWriter);
				return;
			case 187:
				ProtoMsgSerializer.Write((GM_MilitaryInfo.TYPE)obj, protoWriter);
				return;
			case 188:
				ProtoMsgSerializer.Write((GM_MilitaryModify)obj, protoWriter);
				return;
			case 189:
				ProtoMsgSerializer.Write((GM_MilitaryModify.TYPE)obj, protoWriter);
				return;
			case 190:
				ProtoMsgSerializer.Write((GM_OfficerInfo)obj, protoWriter);
				return;
			case 191:
				ProtoMsgSerializer.Write((GM_OfficerInfo.TYPE)obj, protoWriter);
				return;
			case 192:
				ProtoMsgSerializer.Write((GM_OfficerModify)obj, protoWriter);
				return;
			case 193:
				ProtoMsgSerializer.Write((GM_OfficerModify.TYPE)obj, protoWriter);
				return;
			case 194:
				ProtoMsgSerializer.Write((GM_PlayerBuildingModify)obj, protoWriter);
				return;
			case 195:
				ProtoMsgSerializer.Write((GM_PlayerBuildingModify.TYPE)obj, protoWriter);
				return;
			case 196:
				ProtoMsgSerializer.Write((GM_PlayerInfo)obj, protoWriter);
				return;
			case 197:
				ProtoMsgSerializer.Write((GM_PlayerInfo.TYPE)obj, protoWriter);
				return;
			case 198:
				ProtoMsgSerializer.Write((GM_PlayerItemInfo)obj, protoWriter);
				return;
			case 199:
				ProtoMsgSerializer.Write((GM_PlayerItemInfo.TYPE)obj, protoWriter);
				return;
			case 200:
				ProtoMsgSerializer.Write((GM_PlayerItemModify)obj, protoWriter);
				return;
			case 201:
				ProtoMsgSerializer.Write((GM_PlayerItemModify.TYPE)obj, protoWriter);
				return;
			case 202:
				ProtoMsgSerializer.Write((GM_PlayerModify)obj, protoWriter);
				return;
			case 203:
				ProtoMsgSerializer.Write((GM_PlayerModify.TYPE)obj, protoWriter);
				return;
			case 204:
				ProtoMsgSerializer.Write((GM_ShowServerInfo)obj, protoWriter);
				return;
			case 205:
				ProtoMsgSerializer.Write((GM_ShowServerInfo.TYPE)obj, protoWriter);
				return;
			case 206:
				ProtoMsgSerializer.Write((GM_TaskInfo)obj, protoWriter);
				return;
			case 207:
				ProtoMsgSerializer.Write((GM_TaskInfo.TYPE)obj, protoWriter);
				return;
			case 208:
				ProtoMsgSerializer.Write((GM_TaskModify)obj, protoWriter);
				return;
			case 209:
				ProtoMsgSerializer.Write((GM_TaskModify.TYPE)obj, protoWriter);
				return;
			case 210:
				ProtoMsgSerializer.Write((KVStruct)obj, protoWriter);
				return;
			case 211:
				ProtoMsgSerializer.Write((KVStructS2L)obj, protoWriter);
				return;
			case 212:
				ProtoMsgSerializer.Write((KVStructStr)obj, protoWriter);
				return;
			case 213:
				ProtoMsgSerializer.Write((LotteryData)obj, protoWriter);
				return;
			case 214:
				ProtoMsgSerializer.Write((NoticeData)obj, protoWriter);
				return;
			case 215:
				ProtoMsgSerializer.Write((OfficerTenRecruitData)obj, protoWriter);
				return;
			case 216:
				ProtoMsgSerializer.Write((OperationControlArmyID)obj, protoWriter);
				return;
			case 217:
				ProtoMsgSerializer.Write((OperationEventData)obj, protoWriter);
				return;
			case 218:
				ProtoMsgSerializer.Write((OperationFoceAttack)obj, protoWriter);
				return;
			case 219:
				ProtoMsgSerializer.Write((OperationMove)obj, protoWriter);
				return;
			case 220:
				ProtoMsgSerializer.Write((OperationTankPos)obj, protoWriter);
				return;
			case 221:
				ProtoMsgSerializer.Write((OperationTanksPos)obj, protoWriter);
				return;
			case 222:
				ProtoMsgSerializer.Write((Position)obj, protoWriter);
				return;
			case 223:
				ProtoMsgSerializer.Write((RankingData)obj, protoWriter);
				return;
			case 224:
				ProtoMsgSerializer.Write((RewardOption)obj, protoWriter);
				return;
			case 225:
				ProtoMsgSerializer.Write((SCAchievementData)obj, protoWriter);
				return;
			case 226:
				ProtoMsgSerializer.Write((SCActivitiesData)obj, protoWriter);
				return;
			case 227:
				ProtoMsgSerializer.Write((SCActivityCountsData)obj, protoWriter);
				return;
			case 228:
				ProtoMsgSerializer.Write((SCActivityData)obj, protoWriter);
				return;
			case 229:
				ProtoMsgSerializer.Write((SCActivityRanking)obj, protoWriter);
				return;
			case 230:
				ProtoMsgSerializer.Write((SCArmsDealerData)obj, protoWriter);
				return;
			case 231:
				ProtoMsgSerializer.Write((SCArmyCDTimes)obj, protoWriter);
				return;
			case 232:
				ProtoMsgSerializer.Write((SCArmyData)obj, protoWriter);
				return;
			case 233:
				ProtoMsgSerializer.Write((SCArmyTokenCdTime)obj, protoWriter);
				return;
			case 234:
				ProtoMsgSerializer.Write((SCBattleEnd)obj, protoWriter);
				return;
			case 235:
				ProtoMsgSerializer.Write((SCBattleFieldBox)obj, protoWriter);
				return;
			case 236:
				ProtoMsgSerializer.Write((SCBattleStart)obj, protoWriter);
				return;
			case 237:
				ProtoMsgSerializer.Write((SCBtnOpen)obj, protoWriter);
				return;
			case 238:
				ProtoMsgSerializer.Write((SCBuildingMove)obj, protoWriter);
				return;
			case 239:
				ProtoMsgSerializer.Write((SCBuildingRemove)obj, protoWriter);
				return;
			case 240:
				ProtoMsgSerializer.Write((SCBuyArmyToken)obj, protoWriter);
				return;
			case 241:
				ProtoMsgSerializer.Write((SCBuyBuildingQueue)obj, protoWriter);
				return;
			case 242:
				ProtoMsgSerializer.Write((SCCalcMoney)obj, protoWriter);
				return;
			case 243:
				ProtoMsgSerializer.Write((SCCDEndTime)obj, protoWriter);
				return;
			case 244:
				ProtoMsgSerializer.Write((SCChitChatData)obj, protoWriter);
				return;
			case 245:
				ProtoMsgSerializer.Write((SCCityWallBatchMove)obj, protoWriter);
				return;
			case 246:
				ProtoMsgSerializer.Write((SCClearDailyTask)obj, protoWriter);
				return;
			case 247:
				ProtoMsgSerializer.Write((SCConfigureArmyData)obj, protoWriter);
				return;
			case 248:
				ProtoMsgSerializer.Write((SCEliteBoxStatus)obj, protoWriter);
				return;
			case 249:
				ProtoMsgSerializer.Write((SCExpCardData)obj, protoWriter);
				return;
			case 250:
				ProtoMsgSerializer.Write((SCExtraArmy)obj, protoWriter);
				return;
			case 251:
				ProtoMsgSerializer.Write((SCFightingEvent)obj, protoWriter);
				return;
			case 252:
				ProtoMsgSerializer.Write((SCFlushSkill)obj, protoWriter);
				return;
			case 253:
				ProtoMsgSerializer.Write((SCGetActivitiesList)obj, protoWriter);
				return;
			case 254:
				ProtoMsgSerializer.Write((SCGetOrderId)obj, protoWriter);
				return;
			case 255:
				ProtoMsgSerializer.Write((SCGM)obj, protoWriter);
				return;
			}
			break;
		case 2:
			switch (num)
			{
			case 256:
				ProtoMsgSerializer.Write((SCGoldIslandChanged)obj, protoWriter);
				return;
			case 257:
				ProtoMsgSerializer.Write((SCGrowableItemData)obj, protoWriter);
				return;
			case 258:
				ProtoMsgSerializer.Write((SCHeartbeat)obj, protoWriter);
				return;
			case 259:
				ProtoMsgSerializer.Write((SCIgnoreLegionApply)obj, protoWriter);
				return;
			case 260:
				ProtoMsgSerializer.Write((SCIslandBeAttackedData)obj, protoWriter);
				return;
			case 261:
				ProtoMsgSerializer.Write((SCIslandData)obj, protoWriter);
				return;
			case 262:
				ProtoMsgSerializer.Write((SCIslandOfficerData)obj, protoWriter);
				return;
			case 263:
				ProtoMsgSerializer.Write((SCLegionApply)obj, protoWriter);
				return;
			case 264:
				ProtoMsgSerializer.Write((SCLegionData)obj, protoWriter);
				return;
			case 265:
				ProtoMsgSerializer.Write((SCLegionHelpApply)obj, protoWriter);
				return;
			case 266:
				ProtoMsgSerializer.Write((SCLegionMember)obj, protoWriter);
				return;
			case 267:
				ProtoMsgSerializer.Write((SCLegionPVE)obj, protoWriter);
				return;
			case 268:
				ProtoMsgSerializer.Write((SCLotteryPrize)obj, protoWriter);
				return;
			case 269:
				ProtoMsgSerializer.Write((SCMapEntity)obj, protoWriter);
				return;
			case 270:
				ProtoMsgSerializer.Write((SCMapIndexNotice)obj, protoWriter);
				return;
			case 271:
				ProtoMsgSerializer.Write((SCMonitorData)obj, protoWriter);
				return;
			case 272:
				ProtoMsgSerializer.Write((SCNoticeList)obj, protoWriter);
				return;
			case 273:
				ProtoMsgSerializer.Write((SCNPCAttackData)obj, protoWriter);
				return;
			case 274:
				ProtoMsgSerializer.Write((SCOfficerData)obj, protoWriter);
				return;
			case 275:
				ProtoMsgSerializer.Write((SCOfficerEqu)obj, protoWriter);
				return;
			case 276:
				ProtoMsgSerializer.Write((SCOfficerRemove)obj, protoWriter);
				return;
			case 277:
				ProtoMsgSerializer.Write((SCOfficerTenRecruitData)obj, protoWriter);
				return;
			case 278:
				ProtoMsgSerializer.Write((SCOnlineRewards)obj, protoWriter);
				return;
			case 279:
				ProtoMsgSerializer.Write((SCOpenArmy)obj, protoWriter);
				return;
			case 280:
				ProtoMsgSerializer.Write((SCOperation)obj, protoWriter);
				return;
			case 281:
				ProtoMsgSerializer.Write((SCOtherPlayerInfo)obj, protoWriter);
				return;
			case 282:
				ProtoMsgSerializer.Write((SCPayCallback)obj, protoWriter);
				return;
			case 283:
				ProtoMsgSerializer.Write((SCPlayerAideData)obj, protoWriter);
				return;
			case 284:
				ProtoMsgSerializer.Write((SCPlayerBase)obj, protoWriter);
				return;
			case 285:
				ProtoMsgSerializer.Write((SCPlayerBuilding)obj, protoWriter);
				return;
			case 286:
				ProtoMsgSerializer.Write((SCPlayerItem)obj, protoWriter);
				return;
			case 287:
				ProtoMsgSerializer.Write((SCPlayerLegionProp)obj, protoWriter);
				return;
			case 288:
				ProtoMsgSerializer.Write((SCPlayerMailData)obj, protoWriter);
				return;
			case 289:
				ProtoMsgSerializer.Write((SCPlayerMailStatus)obj, protoWriter);
				return;
			case 290:
				ProtoMsgSerializer.Write((SCPlayerResource)obj, protoWriter);
				return;
			case 291:
				ProtoMsgSerializer.Write((SCPlayerSoldier)obj, protoWriter);
				return;
			case 292:
				ProtoMsgSerializer.Write((SCPlayerTaskData)obj, protoWriter);
				return;
			case 293:
				ProtoMsgSerializer.Write((SCPlayerVipData)obj, protoWriter);
				return;
			case 294:
				ProtoMsgSerializer.Write((SCPlayerWorldMap)obj, protoWriter);
				return;
			case 295:
				ProtoMsgSerializer.Write((SCProfile)obj, protoWriter);
				return;
			case 296:
				ProtoMsgSerializer.Write((SCRanking)obj, protoWriter);
				return;
			case 297:
				ProtoMsgSerializer.Write((SCRankingList)obj, protoWriter);
				return;
			case 298:
				ProtoMsgSerializer.Write((SCRankingPrizeData)obj, protoWriter);
				return;
			case 299:
				ProtoMsgSerializer.Write((SCRankingPrizeList)obj, protoWriter);
				return;
			case 300:
				ProtoMsgSerializer.Write((SCRecruitInfoData)obj, protoWriter);
				return;
			case 301:
				ProtoMsgSerializer.Write((SCRelationData)obj, protoWriter);
				return;
			case 302:
				ProtoMsgSerializer.Write((SCRelationRemove)obj, protoWriter);
				return;
			case 303:
				ProtoMsgSerializer.Write((SCReportCountData)obj, protoWriter);
				return;
			case 304:
				ProtoMsgSerializer.Write((SCReportData)obj, protoWriter);
				return;
			case 305:
				ProtoMsgSerializer.Write((SCReportReadData)obj, protoWriter);
				return;
			case 306:
				ProtoMsgSerializer.Write((SCResIslandTake)obj, protoWriter);
				return;
			case 307:
				ProtoMsgSerializer.Write((SCResourceLimit)obj, protoWriter);
				return;
			case 308:
				ProtoMsgSerializer.Write((SCSearchLegionData)obj, protoWriter);
				return;
			case 309:
				ProtoMsgSerializer.Write((SCSendMessage)obj, protoWriter);
				return;
			case 310:
				ProtoMsgSerializer.Write((SCSessionData)obj, protoWriter);
				return;
			case 311:
				ProtoMsgSerializer.Write((SCSevenDaysPrize)obj, protoWriter);
				return;
			case 312:
				ProtoMsgSerializer.Write((SCSignInData)obj, protoWriter);
				return;
			case 313:
				ProtoMsgSerializer.Write((SCSkillConfigData)obj, protoWriter);
				return;
			case 314:
				ProtoMsgSerializer.Write((SCSkillData)obj, protoWriter);
				return;
			case 315:
				ProtoMsgSerializer.Write((SCSkillPointCd)obj, protoWriter);
				return;
			case 316:
				ProtoMsgSerializer.Write((SCSkillRandomCdTime)obj, protoWriter);
				return;
			case 317:
				ProtoMsgSerializer.Write((SCSkillShow)obj, protoWriter);
				return;
			case 318:
				ProtoMsgSerializer.Write((SCSkillUpData)obj, protoWriter);
				return;
			case 319:
				ProtoMsgSerializer.Write((SCSocketRegister)obj, protoWriter);
				return;
			case 320:
				ProtoMsgSerializer.Write((SCSoldierConfigure)obj, protoWriter);
				return;
			case 321:
				ProtoMsgSerializer.Write((SCSpyIsland)obj, protoWriter);
				return;
			case 322:
				ProtoMsgSerializer.Write((SCSweep)obj, protoWriter);
				return;
			case 323:
				ProtoMsgSerializer.Write((SCTakeResShow)obj, protoWriter);
				return;
			case 324:
				ProtoMsgSerializer.Write((SCTechData)obj, protoWriter);
				return;
			case 325:
				ProtoMsgSerializer.Write((SCTipsData)obj, protoWriter);
				return;
			case 326:
				ProtoMsgSerializer.Write((SCTodayBuyResData)obj, protoWriter);
				return;
			case 327:
				ProtoMsgSerializer.Write((SCVideoData)obj, protoWriter);
				return;
			case 328:
				ProtoMsgSerializer.Write((SCWarBattleData)obj, protoWriter);
				return;
			case 329:
				ProtoMsgSerializer.Write((SupperSkillEvent)obj, protoWriter);
				return;
			case 330:
				ProtoMsgSerializer.Write((SweepData)obj, protoWriter);
				return;
			case 331:
				ProtoMsgSerializer.Write((SWValidateFightEvent)obj, protoWriter);
				return;
			case 332:
				ProtoMsgSerializer.Write((ValidateAdditionData)obj, protoWriter);
				return;
			case 333:
				ProtoMsgSerializer.Write((VFDeadData)obj, protoWriter);
				return;
			}
			break;
		}
	}

	protected internal new object Deserialize(int num, object obj, ProtoReader protoReader)
	{
		switch (num / 128)
		{
		case 0:
			switch (num)
			{
			case 0:
				return ProtoMsgSerializer.Read((AdditionData)obj, protoReader);
			case 1:
				return ProtoMsgSerializer.Read((ChatMessage)obj, protoReader);
			case 2:
				return ProtoMsgSerializer.Read((ContainerData)obj, protoReader);
			case 3:
				return ProtoMsgSerializer.Read((CSAddResore)obj, protoReader);
			case 4:
				return ProtoMsgSerializer.Read((CSAgreeLegionApply)obj, protoReader);
			case 5:
				return ProtoMsgSerializer.Read((CSAideIntensify)obj, protoReader);
			case 6:
				return ProtoMsgSerializer.Read((CSAideList)obj, protoReader);
			case 7:
				return ProtoMsgSerializer.Read((CSAideMix)obj, protoReader);
			case 8:
				return ProtoMsgSerializer.Read((CSAideMixCompleteUseMoney)obj, protoReader);
			case 9:
				return ProtoMsgSerializer.Read((CSAideRecycle)obj, protoReader);
			case 10:
				return ProtoMsgSerializer.Read((CSAideSend)obj, protoReader);
			case 11:
				return ProtoMsgSerializer.Read((CSArmyConfigure)obj, protoReader);
			case 12:
				return ProtoMsgSerializer.Read((CSArmyConfigureAuto)obj, protoReader);
			case 13:
				return ProtoMsgSerializer.Read((CSArmyConfigureEnd)obj, protoReader);
			case 14:
				return ProtoMsgSerializer.Read((CSArmyLevelUp)obj, protoReader);
			case 15:
				return ProtoMsgSerializer.Read((CSArmyLevelUpEnd)obj, protoReader);
			case 16:
				return ProtoMsgSerializer.Read((CSArmyList)obj, protoReader);
			case 17:
				return ProtoMsgSerializer.Read((CSArmyStarUp)obj, protoReader);
			case 18:
				return ProtoMsgSerializer.Read((CSBattleEnd)obj, protoReader);
			case 19:
				return ProtoMsgSerializer.Read((CSBattleReport)obj, protoReader);
			case 20:
				return ProtoMsgSerializer.Read((CSBattleStart)obj, protoReader);
			case 21:
				return ProtoMsgSerializer.Read((CSBuildingBuild)obj, protoReader);
			case 22:
				return ProtoMsgSerializer.Read((CSBuildingEnd)obj, protoReader);
			case 23:
				return ProtoMsgSerializer.Read((CSBuildingMove)obj, protoReader);
			case 24:
				return ProtoMsgSerializer.Read((CSBuildingRemove)obj, protoReader);
			case 25:
				return ProtoMsgSerializer.Read((CSBuildingRemoveEnd)obj, protoReader);
			case 26:
				return ProtoMsgSerializer.Read((CSBuildingUp)obj, protoReader);
			case 27:
				return ProtoMsgSerializer.Read((CSBuyArmyToken)obj, protoReader);
			case 28:
				return ProtoMsgSerializer.Read((CSBuyBuildingQueue)obj, protoReader);
			case 29:
				return ProtoMsgSerializer.Read((CSBuyGrowthFund)obj, protoReader);
			case 30:
				return ProtoMsgSerializer.Read((CSBuyItem)obj, protoReader);
			case 31:
				return ProtoMsgSerializer.Read((CSBuySearchToken)obj, protoReader);
			case 32:
				return ProtoMsgSerializer.Read((CSBuySkillToken)obj, protoReader);
			case 33:
				return ProtoMsgSerializer.Read((CSCalcMoney)obj, protoReader);
			case 34:
				return ProtoMsgSerializer.Read((CSCancelCDTime)obj, protoReader);
			case 35:
				return ProtoMsgSerializer.Read((CScancelConfigSoldier)obj, protoReader);
			case 36:
				return ProtoMsgSerializer.Read((CSCancelConfigureArmy)obj, protoReader);
			case 37:
				return ProtoMsgSerializer.Read((CSCityWallBatchMove)obj, protoReader);
			case 38:
				return ProtoMsgSerializer.Read((CSCityWallBatchUpLevel)obj, protoReader);
			case 39:
				return ProtoMsgSerializer.Read((CSClearExtarArmy)obj, protoReader);
			case 40:
				return ProtoMsgSerializer.Read((CSCompleteAchievement)obj, protoReader);
			case 41:
				return ProtoMsgSerializer.Read((CSCompleteTask)obj, protoReader);
			case 42:
				return ProtoMsgSerializer.Read((CSDebug)obj, protoReader);
			case 43:
				return ProtoMsgSerializer.Read((CSDeleteLegionHelpApply)obj, protoReader);
			case 44:
				return ProtoMsgSerializer.Read((CSDisMissLegionMember)obj, protoReader);
			case 45:
				return ProtoMsgSerializer.Read((CSEquipMix)obj, protoReader);
			case 46:
				return ProtoMsgSerializer.Read((CSExchangeGift)obj, protoReader);
			case 47:
				return ProtoMsgSerializer.Read((CSFightingEvent)obj, protoReader);
			case 48:
				return ProtoMsgSerializer.Read((CSGetActivityList)obj, protoReader);
			case 49:
				return ProtoMsgSerializer.Read((CSgetActivityPrize)obj, protoReader);
			case 50:
				return ProtoMsgSerializer.Read((CSGetContributionPrize)obj, protoReader);
			case 51:
				return ProtoMsgSerializer.Read((CSGetLegionApplyList)obj, protoReader);
			case 52:
				return ProtoMsgSerializer.Read((CSGetLegionHelpApplyList)obj, protoReader);
			case 53:
				return ProtoMsgSerializer.Read((CSGetOrderId)obj, protoReader);
			case 54:
				return ProtoMsgSerializer.Read((CSGetRanking)obj, protoReader);
			case 55:
				return ProtoMsgSerializer.Read((CSGetSkillCard)obj, protoReader);
			case 56:
				return ProtoMsgSerializer.Read((CSGM)obj, protoReader);
			case 57:
				return ProtoMsgSerializer.Read((CSHeartbeat)obj, protoReader);
			case 58:
				return ProtoMsgSerializer.Read((CSIgnoreAllLegionApply)obj, protoReader);
			case 59:
				return ProtoMsgSerializer.Read((CSIgnoreLegionApply)obj, protoReader);
			case 60:
				return ProtoMsgSerializer.Read((CSItemList)obj, protoReader);
			case 61:
				return ProtoMsgSerializer.Read((CSItemMix)obj, protoReader);
			case 62:
				return ProtoMsgSerializer.Read((CSLegionAdd)obj, protoReader);
			case 63:
				return ProtoMsgSerializer.Read((CSLegionCreate)obj, protoReader);
			case 64:
				return ProtoMsgSerializer.Read((CSLegionData)obj, protoReader);
			case 65:
				return ProtoMsgSerializer.Read((CSLegionHelp)obj, protoReader);
			case 66:
				return ProtoMsgSerializer.Read((CSLegionHelpApply)obj, protoReader);
			case 67:
				return ProtoMsgSerializer.Read((CSLegionJobUpOrDown)obj, protoReader);
			case 68:
				return ProtoMsgSerializer.Read((CSLegionMemberData)obj, protoReader);
			case 69:
				return ProtoMsgSerializer.Read((CSLegionOut)obj, protoReader);
			case 70:
				return ProtoMsgSerializer.Read((CSLogin)obj, protoReader);
			case 71:
				return ProtoMsgSerializer.Read((CSLoginData)obj, protoReader);
			case 72:
				return ProtoMsgSerializer.Read((CSMilitaryRankPrize)obj, protoReader);
			case 73:
				return ProtoMsgSerializer.Read((CSModifyLegionInfo)obj, protoReader);
			case 74:
				return ProtoMsgSerializer.Read((CSNewGuide)obj, protoReader);
			case 75:
				return ProtoMsgSerializer.Read((CSOfficerAddExp)obj, protoReader);
			case 76:
				return ProtoMsgSerializer.Read((CSOfficerDismiss)obj, protoReader);
			case 77:
				return ProtoMsgSerializer.Read((CSOfficerEmploy)obj, protoReader);
			case 78:
				return ProtoMsgSerializer.Read((CSOfficerEquOn)obj, protoReader);
			case 79:
				return ProtoMsgSerializer.Read((CSOfficerFreeze)obj, protoReader);
			case 80:
				return ProtoMsgSerializer.Read((CSOfficerList)obj, protoReader);
			case 81:
				return ProtoMsgSerializer.Read((CSOfficerRecruit)obj, protoReader);
			case 82:
				return ProtoMsgSerializer.Read((CSOfficerSkillUp)obj, protoReader);
			case 83:
				return ProtoMsgSerializer.Read((CSOfficerUpQuality)obj, protoReader);
			case 84:
				return ProtoMsgSerializer.Read((CSOnlineRewards)obj, protoReader);
			case 85:
				return ProtoMsgSerializer.Read((CSOpenBattleBox)obj, protoReader);
			case 86:
				return ProtoMsgSerializer.Read((CSOpenBattleFieldBox)obj, protoReader);
			case 87:
				return ProtoMsgSerializer.Read((CSOpenBox)obj, protoReader);
			case 88:
				return ProtoMsgSerializer.Read((CSOpenCloud)obj, protoReader);
			case 89:
				return ProtoMsgSerializer.Read((CSOpenEliteBox)obj, protoReader);
			case 90:
				return ProtoMsgSerializer.Read((CSPatrolArmyConfigure)obj, protoReader);
			case 91:
				return ProtoMsgSerializer.Read((CSPayCallback)obj, protoReader);
			case 92:
				return ProtoMsgSerializer.Read((CSPlayerWorldMap)obj, protoReader);
			case 93:
				return ProtoMsgSerializer.Read((CSPVP)obj, protoReader);
			case 94:
				return ProtoMsgSerializer.Read((CSRandomLegion)obj, protoReader);
			case 95:
				return ProtoMsgSerializer.Read((CSRankingList)obj, protoReader);
			case 96:
				return ProtoMsgSerializer.Read((CSRankingPrize)obj, protoReader);
			case 97:
				return ProtoMsgSerializer.Read((CSRankingPrizeList)obj, protoReader);
			case 98:
				return ProtoMsgSerializer.Read((CSReadMail)obj, protoReader);
			case 99:
				return ProtoMsgSerializer.Read((CSReadNotice)obj, protoReader);
			case 100:
				return ProtoMsgSerializer.Read((CSReceiveAccumulativeSignRewards)obj, protoReader);
			case 101:
				return ProtoMsgSerializer.Read((CSReceiveMailAttachment)obj, protoReader);
			case 102:
				return ProtoMsgSerializer.Read((CSReceiveReportMoney)obj, protoReader);
			case 103:
				return ProtoMsgSerializer.Read((CSReceiveVipDailyMoney)obj, protoReader);
			case 104:
				return ProtoMsgSerializer.Read((CSReconnection)obj, protoReader);
			case 105:
				return ProtoMsgSerializer.Read((CSRefreshActivity)obj, protoReader);
			case 106:
				return ProtoMsgSerializer.Read((CSRefreshArmsDealer)obj, protoReader);
			case 107:
				return ProtoMsgSerializer.Read((CSRefreshArmsDealerUseMoney)obj, protoReader);
			case 108:
				return ProtoMsgSerializer.Read((CSRelationList)obj, protoReader);
			case 109:
				return ProtoMsgSerializer.Read((CSReName)obj, protoReader);
			case 110:
				return ProtoMsgSerializer.Read((CSReplacePlayer)obj, protoReader);
			case 111:
				return ProtoMsgSerializer.Read((CSReportList)obj, protoReader);
			case 112:
				return ProtoMsgSerializer.Read((CSReportReaded)obj, protoReader);
			case 113:
				return ProtoMsgSerializer.Read((CSRequestActivity)obj, protoReader);
			case 114:
				return ProtoMsgSerializer.Read((CSRequestChitChatData)obj, protoReader);
			case 115:
				return ProtoMsgSerializer.Read((CSRetroactiveAllSignIn)obj, protoReader);
			case 116:
				return ProtoMsgSerializer.Read((CSRetroactiveSignIn)obj, protoReader);
			case 117:
				return ProtoMsgSerializer.Read((CSSearchLegion)obj, protoReader);
			case 118:
				return ProtoMsgSerializer.Read((CSSellArmy)obj, protoReader);
			case 119:
				return ProtoMsgSerializer.Read((CSSendMessage)obj, protoReader);
			case 120:
				return ProtoMsgSerializer.Read((CSSevenDaysPrize)obj, protoReader);
			case 121:
				return ProtoMsgSerializer.Read((CSShareBattleVideo)obj, protoReader);
			case 122:
				return ProtoMsgSerializer.Read((CSShopPay)obj, protoReader);
			case 123:
				return ProtoMsgSerializer.Read((CSSignIn)obj, protoReader);
			case 124:
				return ProtoMsgSerializer.Read((CSSkillConfig)obj, protoReader);
			case 125:
				return ProtoMsgSerializer.Read((CSSkillConfigList)obj, protoReader);
			case 126:
				return ProtoMsgSerializer.Read((CSSkillExchange)obj, protoReader);
			case 127:
				return ProtoMsgSerializer.Read((CSSkillList)obj, protoReader);
			}
			break;
		case 1:
			switch (num)
			{
			case 128:
				return ProtoMsgSerializer.Read((CSSkillMix)obj, protoReader);
			case 129:
				return ProtoMsgSerializer.Read((CSSkillMixEnd)obj, protoReader);
			case 130:
				return ProtoMsgSerializer.Read((CSSkillRemove)obj, protoReader);
			case 131:
				return ProtoMsgSerializer.Read((CSSkillUp)obj, protoReader);
			case 132:
				return ProtoMsgSerializer.Read((CSSocketHeat)obj, protoReader);
			case 133:
				return ProtoMsgSerializer.Read((CSSocketRegister)obj, protoReader);
			case 134:
				return ProtoMsgSerializer.Read((CSSoldierAdd)obj, protoReader);
			case 135:
				return ProtoMsgSerializer.Read((CSSoldierConfigure)obj, protoReader);
			case 136:
				return ProtoMsgSerializer.Read((CSSoldierConfigureEnd)obj, protoReader);
			case 137:
				return ProtoMsgSerializer.Read((CSSoldierRelive)obj, protoReader);
			case 138:
				return ProtoMsgSerializer.Read((CSSoldierSkillUp)obj, protoReader);
			case 139:
				return ProtoMsgSerializer.Read((CSSoldierUpStar)obj, protoReader);
			case 140:
				return ProtoMsgSerializer.Read((CSSpyIsland)obj, protoReader);
			case 141:
				return ProtoMsgSerializer.Read((CSSweep)obj, protoReader);
			case 142:
				return ProtoMsgSerializer.Read((CSTakeAllResource)obj, protoReader);
			case 143:
				return ProtoMsgSerializer.Read((CSTakeResource)obj, protoReader);
			case 144:
				return ProtoMsgSerializer.Read((CSTechDiamondPrize)obj, protoReader);
			case 145:
				return ProtoMsgSerializer.Read((CSTechList)obj, protoReader);
			case 146:
				return ProtoMsgSerializer.Read((CSTechUp)obj, protoReader);
			case 147:
				return ProtoMsgSerializer.Read((CSTechUpEnd)obj, protoReader);
			case 148:
				return ProtoMsgSerializer.Read((CSTowerStrength)obj, protoReader);
			case 149:
				return ProtoMsgSerializer.Read((CSTowerUpGrade)obj, protoReader);
			case 150:
				return ProtoMsgSerializer.Read((CSTurntableDraw)obj, protoReader);
			case 151:
				return ProtoMsgSerializer.Read((CSUseItem)obj, protoReader);
			case 152:
				return ProtoMsgSerializer.Read((CSUseItemToAddExp)obj, protoReader);
			case 153:
				return ProtoMsgSerializer.Read((CSUseItemToRelieve)obj, protoReader);
			case 154:
				return ProtoMsgSerializer.Read((CSUseMoneyBuyGold)obj, protoReader);
			case 155:
				return ProtoMsgSerializer.Read((CSWarStarPrize)obj, protoReader);
			case 156:
				return ProtoMsgSerializer.Read((CSWarZoneList)obj, protoReader);
			case 157:
				return ProtoMsgSerializer.Read((DesignActivityData)obj, protoReader);
			case 158:
				return ProtoMsgSerializer.Read((DieEvent)obj, protoReader);
			case 159:
				return ProtoMsgSerializer.Read((DownMessage)obj, protoReader);
			case 160:
				return ProtoMsgSerializer.Read((EventData)obj, protoReader);
			case 161:
				return ProtoMsgSerializer.Read((FightEventData)obj, protoReader);
			case 162:
				return ProtoMsgSerializer.Read((GM_AideInfo)obj, protoReader);
			case 163:
				return ProtoMsgSerializer._163(obj, protoReader);
			case 164:
				return ProtoMsgSerializer.Read((GM_AideModify)obj, protoReader);
			case 165:
				return ProtoMsgSerializer._165(obj, protoReader);
			case 166:
				return ProtoMsgSerializer.Read((GM_BattleInfo)obj, protoReader);
			case 167:
				return ProtoMsgSerializer._167(obj, protoReader);
			case 168:
				return ProtoMsgSerializer.Read((GM_BattleModify)obj, protoReader);
			case 169:
				return ProtoMsgSerializer._169(obj, protoReader);
			case 170:
				return ProtoMsgSerializer.Read((GM_GetRanking)obj, protoReader);
			case 171:
				return ProtoMsgSerializer._171(obj, protoReader);
			case 172:
				return ProtoMsgSerializer.Read((GM_IslandInfo)obj, protoReader);
			case 173:
				return ProtoMsgSerializer._173(obj, protoReader);
			case 174:
				return ProtoMsgSerializer.Read((GM_ItemReloadStatus)obj, protoReader);
			case 175:
				return ProtoMsgSerializer._175(obj, protoReader);
			case 176:
				return ProtoMsgSerializer.Read((GM_LogoutPlayer)obj, protoReader);
			case 177:
				return ProtoMsgSerializer._177(obj, protoReader);
			case 178:
				return ProtoMsgSerializer.Read((GM_Mail)obj, protoReader);
			case 179:
				return ProtoMsgSerializer._179(obj, protoReader);
			case 180:
				return ProtoMsgSerializer.Read((GM_MailInfo)obj, protoReader);
			case 181:
				return ProtoMsgSerializer._181(obj, protoReader);
			case 182:
				return ProtoMsgSerializer.Read((GM_MapInfo)obj, protoReader);
			case 183:
				return ProtoMsgSerializer._183(obj, protoReader);
			case 184:
				return ProtoMsgSerializer.Read((GM_MapModify)obj, protoReader);
			case 185:
				return ProtoMsgSerializer._185(obj, protoReader);
			case 186:
				return ProtoMsgSerializer.Read((GM_MilitaryInfo)obj, protoReader);
			case 187:
				return ProtoMsgSerializer._187(obj, protoReader);
			case 188:
				return ProtoMsgSerializer.Read((GM_MilitaryModify)obj, protoReader);
			case 189:
				return ProtoMsgSerializer._189(obj, protoReader);
			case 190:
				return ProtoMsgSerializer.Read((GM_OfficerInfo)obj, protoReader);
			case 191:
				return ProtoMsgSerializer._191(obj, protoReader);
			case 192:
				return ProtoMsgSerializer.Read((GM_OfficerModify)obj, protoReader);
			case 193:
				return ProtoMsgSerializer._193(obj, protoReader);
			case 194:
				return ProtoMsgSerializer.Read((GM_PlayerBuildingModify)obj, protoReader);
			case 195:
				return ProtoMsgSerializer._195(obj, protoReader);
			case 196:
				return ProtoMsgSerializer.Read((GM_PlayerInfo)obj, protoReader);
			case 197:
				return ProtoMsgSerializer._197(obj, protoReader);
			case 198:
				return ProtoMsgSerializer.Read((GM_PlayerItemInfo)obj, protoReader);
			case 199:
				return ProtoMsgSerializer._199(obj, protoReader);
			case 200:
				return ProtoMsgSerializer.Read((GM_PlayerItemModify)obj, protoReader);
			case 201:
				return ProtoMsgSerializer._201(obj, protoReader);
			case 202:
				return ProtoMsgSerializer.Read((GM_PlayerModify)obj, protoReader);
			case 203:
				return ProtoMsgSerializer._203(obj, protoReader);
			case 204:
				return ProtoMsgSerializer.Read((GM_ShowServerInfo)obj, protoReader);
			case 205:
				return ProtoMsgSerializer._205(obj, protoReader);
			case 206:
				return ProtoMsgSerializer.Read((GM_TaskInfo)obj, protoReader);
			case 207:
				return ProtoMsgSerializer._207(obj, protoReader);
			case 208:
				return ProtoMsgSerializer.Read((GM_TaskModify)obj, protoReader);
			case 209:
				return ProtoMsgSerializer._209(obj, protoReader);
			case 210:
				return ProtoMsgSerializer.Read((KVStruct)obj, protoReader);
			case 211:
				return ProtoMsgSerializer.Read((KVStructS2L)obj, protoReader);
			case 212:
				return ProtoMsgSerializer.Read((KVStructStr)obj, protoReader);
			case 213:
				return ProtoMsgSerializer.Read((LotteryData)obj, protoReader);
			case 214:
				return ProtoMsgSerializer.Read((NoticeData)obj, protoReader);
			case 215:
				return ProtoMsgSerializer.Read((OfficerTenRecruitData)obj, protoReader);
			case 216:
				return ProtoMsgSerializer.Read((OperationControlArmyID)obj, protoReader);
			case 217:
				return ProtoMsgSerializer.Read((OperationEventData)obj, protoReader);
			case 218:
				return ProtoMsgSerializer.Read((OperationFoceAttack)obj, protoReader);
			case 219:
				return ProtoMsgSerializer.Read((OperationMove)obj, protoReader);
			case 220:
				return ProtoMsgSerializer.Read((OperationTankPos)obj, protoReader);
			case 221:
				return ProtoMsgSerializer.Read((OperationTanksPos)obj, protoReader);
			case 222:
				return ProtoMsgSerializer.Read((Position)obj, protoReader);
			case 223:
				return ProtoMsgSerializer.Read((RankingData)obj, protoReader);
			case 224:
				return ProtoMsgSerializer.Read((RewardOption)obj, protoReader);
			case 225:
				return ProtoMsgSerializer.Read((SCAchievementData)obj, protoReader);
			case 226:
				return ProtoMsgSerializer.Read((SCActivitiesData)obj, protoReader);
			case 227:
				return ProtoMsgSerializer.Read((SCActivityCountsData)obj, protoReader);
			case 228:
				return ProtoMsgSerializer.Read((SCActivityData)obj, protoReader);
			case 229:
				return ProtoMsgSerializer.Read((SCActivityRanking)obj, protoReader);
			case 230:
				return ProtoMsgSerializer.Read((SCArmsDealerData)obj, protoReader);
			case 231:
				return ProtoMsgSerializer.Read((SCArmyCDTimes)obj, protoReader);
			case 232:
				return ProtoMsgSerializer.Read((SCArmyData)obj, protoReader);
			case 233:
				return ProtoMsgSerializer.Read((SCArmyTokenCdTime)obj, protoReader);
			case 234:
				return ProtoMsgSerializer.Read((SCBattleEnd)obj, protoReader);
			case 235:
				return ProtoMsgSerializer.Read((SCBattleFieldBox)obj, protoReader);
			case 236:
				return ProtoMsgSerializer.Read((SCBattleStart)obj, protoReader);
			case 237:
				return ProtoMsgSerializer.Read((SCBtnOpen)obj, protoReader);
			case 238:
				return ProtoMsgSerializer.Read((SCBuildingMove)obj, protoReader);
			case 239:
				return ProtoMsgSerializer.Read((SCBuildingRemove)obj, protoReader);
			case 240:
				return ProtoMsgSerializer.Read((SCBuyArmyToken)obj, protoReader);
			case 241:
				return ProtoMsgSerializer.Read((SCBuyBuildingQueue)obj, protoReader);
			case 242:
				return ProtoMsgSerializer.Read((SCCalcMoney)obj, protoReader);
			case 243:
				return ProtoMsgSerializer.Read((SCCDEndTime)obj, protoReader);
			case 244:
				return ProtoMsgSerializer.Read((SCChitChatData)obj, protoReader);
			case 245:
				return ProtoMsgSerializer.Read((SCCityWallBatchMove)obj, protoReader);
			case 246:
				return ProtoMsgSerializer.Read((SCClearDailyTask)obj, protoReader);
			case 247:
				return ProtoMsgSerializer.Read((SCConfigureArmyData)obj, protoReader);
			case 248:
				return ProtoMsgSerializer.Read((SCEliteBoxStatus)obj, protoReader);
			case 249:
				return ProtoMsgSerializer.Read((SCExpCardData)obj, protoReader);
			case 250:
				return ProtoMsgSerializer.Read((SCExtraArmy)obj, protoReader);
			case 251:
				return ProtoMsgSerializer.Read((SCFightingEvent)obj, protoReader);
			case 252:
				return ProtoMsgSerializer.Read((SCFlushSkill)obj, protoReader);
			case 253:
				return ProtoMsgSerializer.Read((SCGetActivitiesList)obj, protoReader);
			case 254:
				return ProtoMsgSerializer.Read((SCGetOrderId)obj, protoReader);
			case 255:
				return ProtoMsgSerializer.Read((SCGM)obj, protoReader);
			}
			break;
		case 2:
			switch (num)
			{
			case 256:
				return ProtoMsgSerializer.Read((SCGoldIslandChanged)obj, protoReader);
			case 257:
				return ProtoMsgSerializer.Read((SCGrowableItemData)obj, protoReader);
			case 258:
				return ProtoMsgSerializer.Read((SCHeartbeat)obj, protoReader);
			case 259:
				return ProtoMsgSerializer.Read((SCIgnoreLegionApply)obj, protoReader);
			case 260:
				return ProtoMsgSerializer.Read((SCIslandBeAttackedData)obj, protoReader);
			case 261:
				return ProtoMsgSerializer.Read((SCIslandData)obj, protoReader);
			case 262:
				return ProtoMsgSerializer.Read((SCIslandOfficerData)obj, protoReader);
			case 263:
				return ProtoMsgSerializer.Read((SCLegionApply)obj, protoReader);
			case 264:
				return ProtoMsgSerializer.Read((SCLegionData)obj, protoReader);
			case 265:
				return ProtoMsgSerializer.Read((SCLegionHelpApply)obj, protoReader);
			case 266:
				return ProtoMsgSerializer.Read((SCLegionMember)obj, protoReader);
			case 267:
				return ProtoMsgSerializer.Read((SCLegionPVE)obj, protoReader);
			case 268:
				return ProtoMsgSerializer.Read((SCLotteryPrize)obj, protoReader);
			case 269:
				return ProtoMsgSerializer.Read((SCMapEntity)obj, protoReader);
			case 270:
				return ProtoMsgSerializer.Read((SCMapIndexNotice)obj, protoReader);
			case 271:
				return ProtoMsgSerializer.Read((SCMonitorData)obj, protoReader);
			case 272:
				return ProtoMsgSerializer.Read((SCNoticeList)obj, protoReader);
			case 273:
				return ProtoMsgSerializer.Read((SCNPCAttackData)obj, protoReader);
			case 274:
				return ProtoMsgSerializer.Read((SCOfficerData)obj, protoReader);
			case 275:
				return ProtoMsgSerializer.Read((SCOfficerEqu)obj, protoReader);
			case 276:
				return ProtoMsgSerializer.Read((SCOfficerRemove)obj, protoReader);
			case 277:
				return ProtoMsgSerializer.Read((SCOfficerTenRecruitData)obj, protoReader);
			case 278:
				return ProtoMsgSerializer.Read((SCOnlineRewards)obj, protoReader);
			case 279:
				return ProtoMsgSerializer.Read((SCOpenArmy)obj, protoReader);
			case 280:
				return ProtoMsgSerializer.Read((SCOperation)obj, protoReader);
			case 281:
				return ProtoMsgSerializer.Read((SCOtherPlayerInfo)obj, protoReader);
			case 282:
				return ProtoMsgSerializer.Read((SCPayCallback)obj, protoReader);
			case 283:
				return ProtoMsgSerializer.Read((SCPlayerAideData)obj, protoReader);
			case 284:
				return ProtoMsgSerializer.Read((SCPlayerBase)obj, protoReader);
			case 285:
				return ProtoMsgSerializer.Read((SCPlayerBuilding)obj, protoReader);
			case 286:
				return ProtoMsgSerializer.Read((SCPlayerItem)obj, protoReader);
			case 287:
				return ProtoMsgSerializer.Read((SCPlayerLegionProp)obj, protoReader);
			case 288:
				return ProtoMsgSerializer.Read((SCPlayerMailData)obj, protoReader);
			case 289:
				return ProtoMsgSerializer.Read((SCPlayerMailStatus)obj, protoReader);
			case 290:
				return ProtoMsgSerializer.Read((SCPlayerResource)obj, protoReader);
			case 291:
				return ProtoMsgSerializer.Read((SCPlayerSoldier)obj, protoReader);
			case 292:
				return ProtoMsgSerializer.Read((SCPlayerTaskData)obj, protoReader);
			case 293:
				return ProtoMsgSerializer.Read((SCPlayerVipData)obj, protoReader);
			case 294:
				return ProtoMsgSerializer.Read((SCPlayerWorldMap)obj, protoReader);
			case 295:
				return ProtoMsgSerializer.Read((SCProfile)obj, protoReader);
			case 296:
				return ProtoMsgSerializer.Read((SCRanking)obj, protoReader);
			case 297:
				return ProtoMsgSerializer.Read((SCRankingList)obj, protoReader);
			case 298:
				return ProtoMsgSerializer.Read((SCRankingPrizeData)obj, protoReader);
			case 299:
				return ProtoMsgSerializer.Read((SCRankingPrizeList)obj, protoReader);
			case 300:
				return ProtoMsgSerializer.Read((SCRecruitInfoData)obj, protoReader);
			case 301:
				return ProtoMsgSerializer.Read((SCRelationData)obj, protoReader);
			case 302:
				return ProtoMsgSerializer.Read((SCRelationRemove)obj, protoReader);
			case 303:
				return ProtoMsgSerializer.Read((SCReportCountData)obj, protoReader);
			case 304:
				return ProtoMsgSerializer.Read((SCReportData)obj, protoReader);
			case 305:
				return ProtoMsgSerializer.Read((SCReportReadData)obj, protoReader);
			case 306:
				return ProtoMsgSerializer.Read((SCResIslandTake)obj, protoReader);
			case 307:
				return ProtoMsgSerializer.Read((SCResourceLimit)obj, protoReader);
			case 308:
				return ProtoMsgSerializer.Read((SCSearchLegionData)obj, protoReader);
			case 309:
				return ProtoMsgSerializer.Read((SCSendMessage)obj, protoReader);
			case 310:
				return ProtoMsgSerializer.Read((SCSessionData)obj, protoReader);
			case 311:
				return ProtoMsgSerializer.Read((SCSevenDaysPrize)obj, protoReader);
			case 312:
				return ProtoMsgSerializer.Read((SCSignInData)obj, protoReader);
			case 313:
				return ProtoMsgSerializer.Read((SCSkillConfigData)obj, protoReader);
			case 314:
				return ProtoMsgSerializer.Read((SCSkillData)obj, protoReader);
			case 315:
				return ProtoMsgSerializer.Read((SCSkillPointCd)obj, protoReader);
			case 316:
				return ProtoMsgSerializer.Read((SCSkillRandomCdTime)obj, protoReader);
			case 317:
				return ProtoMsgSerializer.Read((SCSkillShow)obj, protoReader);
			case 318:
				return ProtoMsgSerializer.Read((SCSkillUpData)obj, protoReader);
			case 319:
				return ProtoMsgSerializer.Read((SCSocketRegister)obj, protoReader);
			case 320:
				return ProtoMsgSerializer.Read((SCSoldierConfigure)obj, protoReader);
			case 321:
				return ProtoMsgSerializer.Read((SCSpyIsland)obj, protoReader);
			case 322:
				return ProtoMsgSerializer.Read((SCSweep)obj, protoReader);
			case 323:
				return ProtoMsgSerializer.Read((SCTakeResShow)obj, protoReader);
			case 324:
				return ProtoMsgSerializer.Read((SCTechData)obj, protoReader);
			case 325:
				return ProtoMsgSerializer.Read((SCTipsData)obj, protoReader);
			case 326:
				return ProtoMsgSerializer.Read((SCTodayBuyResData)obj, protoReader);
			case 327:
				return ProtoMsgSerializer.Read((SCVideoData)obj, protoReader);
			case 328:
				return ProtoMsgSerializer.Read((SCWarBattleData)obj, protoReader);
			case 329:
				return ProtoMsgSerializer.Read((SupperSkillEvent)obj, protoReader);
			case 330:
				return ProtoMsgSerializer.Read((SweepData)obj, protoReader);
			case 331:
				return ProtoMsgSerializer.Read((SWValidateFightEvent)obj, protoReader);
			case 332:
				return ProtoMsgSerializer.Read((ValidateAdditionData)obj, protoReader);
			case 333:
				return ProtoMsgSerializer.Read((VFDeadData)obj, protoReader);
			}
			break;
		}
		return null;
	}

	static object _163(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_AideInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_AideInfo.TYPE)0, protoReader);
	}

	static object _165(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_AideModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_AideModify.TYPE)0, protoReader);
	}

	static object _167(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_BattleInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_BattleInfo.TYPE)0, protoReader);
	}

	static object _169(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_BattleModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_BattleModify.TYPE)0, protoReader);
	}

	static object _171(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_GetRanking.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_GetRanking.TYPE)0, protoReader);
	}

	static object _173(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_IslandInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_IslandInfo.TYPE)0, protoReader);
	}

	static object _175(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_ItemReloadStatus.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_ItemReloadStatus.TYPE)0, protoReader);
	}

	static object _177(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_LogoutPlayer.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_LogoutPlayer.TYPE)0, protoReader);
	}

	static object _179(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_Mail.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_Mail.TYPE)0, protoReader);
	}

	static object _181(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_MailInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_MailInfo.TYPE)0, protoReader);
	}

	static object _183(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_MapInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_MapInfo.TYPE)0, protoReader);
	}

	static object _185(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_MapModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_MapModify.TYPE)0, protoReader);
	}

	static object _187(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_MilitaryInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_MilitaryInfo.TYPE)0, protoReader);
	}

	static object _189(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_MilitaryModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_MilitaryModify.TYPE)0, protoReader);
	}

	static object _191(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_OfficerInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_OfficerInfo.TYPE)0, protoReader);
	}

	static object _193(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_OfficerModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_OfficerModify.TYPE)0, protoReader);
	}

	static object _195(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_PlayerBuildingModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_PlayerBuildingModify.TYPE)0, protoReader);
	}

	static object _197(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_PlayerInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_PlayerInfo.TYPE)0, protoReader);
	}

	static object _199(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_PlayerItemInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_PlayerItemInfo.TYPE)0, protoReader);
	}

	static object _201(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_PlayerItemModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_PlayerItemModify.TYPE)0, protoReader);
	}

	static object _203(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_PlayerModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_PlayerModify.TYPE)0, protoReader);
	}

	static object _205(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_ShowServerInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_ShowServerInfo.TYPE)0, protoReader);
	}

	static object _207(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_TaskInfo.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_TaskInfo.TYPE)0, protoReader);
	}

	static object _209(object obj, ProtoReader protoReader)
	{
		if (obj != null)
		{
			return ProtoMsgSerializer.Read((GM_TaskModify.TYPE)obj, protoReader);
		}
		return ProtoMsgSerializer.Read((GM_TaskModify.TYPE)0, protoReader);
	}

	static ProtoMsgSerializer()
	{
		// 注意: 此类型已标记为 'beforefieldinit'.
		ProtoMsgSerializer.knownTypes.Add(typeof(AdditionData), 0);
		ProtoMsgSerializer.knownTypes.Add(typeof(ChatMessage), 1);
		ProtoMsgSerializer.knownTypes.Add(typeof(ContainerData), 2);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAddResore), 3);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAgreeLegionApply), 4);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAideIntensify), 5);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAideList), 6);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAideMix), 7);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAideMixCompleteUseMoney), 8);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAideRecycle), 9);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSAideSend), 10);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyConfigure), 11);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyConfigureAuto), 12);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyConfigureEnd), 13);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyLevelUp), 14);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyLevelUpEnd), 15);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyList), 16);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSArmyStarUp), 17);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBattleEnd), 18);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBattleReport), 19);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBattleStart), 20);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuildingBuild), 21);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuildingEnd), 22);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuildingMove), 23);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuildingRemove), 24);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuildingRemoveEnd), 25);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuildingUp), 26);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuyArmyToken), 27);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuyBuildingQueue), 28);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuyGrowthFund), 29);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuyItem), 30);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuySearchToken), 31);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSBuySkillToken), 32);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCalcMoney), 33);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCancelCDTime), 34);
		ProtoMsgSerializer.knownTypes.Add(typeof(CScancelConfigSoldier), 35);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCancelConfigureArmy), 36);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCityWallBatchMove), 37);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCityWallBatchUpLevel), 38);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSClearExtarArmy), 39);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCompleteAchievement), 40);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSCompleteTask), 41);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSDebug), 42);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSDeleteLegionHelpApply), 43);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSDisMissLegionMember), 44);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSEquipMix), 45);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSExchangeGift), 46);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSFightingEvent), 47);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetActivityList), 48);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSgetActivityPrize), 49);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetContributionPrize), 50);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetLegionApplyList), 51);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetLegionHelpApplyList), 52);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetOrderId), 53);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetRanking), 54);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGetSkillCard), 55);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSGM), 56);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSHeartbeat), 57);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSIgnoreAllLegionApply), 58);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSIgnoreLegionApply), 59);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSItemList), 60);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSItemMix), 61);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionAdd), 62);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionCreate), 63);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionData), 64);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionHelp), 65);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionHelpApply), 66);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionJobUpOrDown), 67);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionMemberData), 68);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLegionOut), 69);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLogin), 70);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSLoginData), 71);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSMilitaryRankPrize), 72);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSModifyLegionInfo), 73);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSNewGuide), 74);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerAddExp), 75);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerDismiss), 76);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerEmploy), 77);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerEquOn), 78);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerFreeze), 79);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerList), 80);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerRecruit), 81);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerSkillUp), 82);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOfficerUpQuality), 83);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOnlineRewards), 84);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOpenBattleBox), 85);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOpenBattleFieldBox), 86);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOpenBox), 87);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOpenCloud), 88);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSOpenEliteBox), 89);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSPatrolArmyConfigure), 90);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSPayCallback), 91);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSPlayerWorldMap), 92);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSPVP), 93);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRandomLegion), 94);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRankingList), 95);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRankingPrize), 96);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRankingPrizeList), 97);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReadMail), 98);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReadNotice), 99);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReceiveAccumulativeSignRewards), 100);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReceiveMailAttachment), 101);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReceiveReportMoney), 102);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReceiveVipDailyMoney), 103);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReconnection), 104);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRefreshActivity), 105);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRefreshArmsDealer), 106);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRefreshArmsDealerUseMoney), 107);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRelationList), 108);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReName), 109);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReplacePlayer), 110);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReportList), 111);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSReportReaded), 112);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRequestActivity), 113);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRequestChitChatData), 114);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRetroactiveAllSignIn), 115);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSRetroactiveSignIn), 116);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSearchLegion), 117);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSellArmy), 118);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSendMessage), 119);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSevenDaysPrize), 120);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSShareBattleVideo), 121);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSShopPay), 122);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSignIn), 123);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillConfig), 124);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillConfigList), 125);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillExchange), 126);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillList), 127);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillMix), 128);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillMixEnd), 129);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillRemove), 130);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSkillUp), 131);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSocketHeat), 132);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSocketRegister), 133);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSoldierAdd), 134);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSoldierConfigure), 135);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSoldierConfigureEnd), 136);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSoldierRelive), 137);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSoldierSkillUp), 138);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSoldierUpStar), 139);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSpyIsland), 140);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSSweep), 141);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTakeAllResource), 142);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTakeResource), 143);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTechDiamondPrize), 144);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTechList), 145);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTechUp), 146);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTechUpEnd), 147);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTowerStrength), 148);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTowerUpGrade), 149);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSTurntableDraw), 150);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSUseItem), 151);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSUseItemToAddExp), 152);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSUseItemToRelieve), 153);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSUseMoneyBuyGold), 154);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSWarStarPrize), 155);
		ProtoMsgSerializer.knownTypes.Add(typeof(CSWarZoneList), 156);
		ProtoMsgSerializer.knownTypes.Add(typeof(DesignActivityData), 157);
		ProtoMsgSerializer.knownTypes.Add(typeof(DieEvent), 158);
		ProtoMsgSerializer.knownTypes.Add(typeof(DownMessage), 159);
		ProtoMsgSerializer.knownTypes.Add(typeof(EventData), 160);
		ProtoMsgSerializer.knownTypes.Add(typeof(FightEventData), 161);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_AideInfo), 162);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_AideInfo.TYPE), 163);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_AideModify), 164);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_AideModify.TYPE), 165);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_BattleInfo), 166);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_BattleInfo.TYPE), 167);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_BattleModify), 168);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_BattleModify.TYPE), 169);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_GetRanking), 170);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_GetRanking.TYPE), 171);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_IslandInfo), 172);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_IslandInfo.TYPE), 173);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_ItemReloadStatus), 174);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_ItemReloadStatus.TYPE), 175);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_LogoutPlayer), 176);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_LogoutPlayer.TYPE), 177);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_Mail), 178);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_Mail.TYPE), 179);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MailInfo), 180);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MailInfo.TYPE), 181);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MapInfo), 182);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MapInfo.TYPE), 183);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MapModify), 184);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MapModify.TYPE), 185);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MilitaryInfo), 186);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MilitaryInfo.TYPE), 187);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MilitaryModify), 188);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_MilitaryModify.TYPE), 189);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_OfficerInfo), 190);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_OfficerInfo.TYPE), 191);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_OfficerModify), 192);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_OfficerModify.TYPE), 193);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerBuildingModify), 194);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerBuildingModify.TYPE), 195);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerInfo), 196);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerInfo.TYPE), 197);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerItemInfo), 198);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerItemInfo.TYPE), 199);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerItemModify), 200);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerItemModify.TYPE), 201);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerModify), 202);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_PlayerModify.TYPE), 203);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_ShowServerInfo), 204);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_ShowServerInfo.TYPE), 205);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_TaskInfo), 206);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_TaskInfo.TYPE), 207);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_TaskModify), 208);
		ProtoMsgSerializer.knownTypes.Add(typeof(GM_TaskModify.TYPE), 209);
		ProtoMsgSerializer.knownTypes.Add(typeof(KVStruct), 210);
		ProtoMsgSerializer.knownTypes.Add(typeof(KVStructS2L), 211);
		ProtoMsgSerializer.knownTypes.Add(typeof(KVStructStr), 212);
		ProtoMsgSerializer.knownTypes.Add(typeof(LotteryData), 213);
		ProtoMsgSerializer.knownTypes.Add(typeof(NoticeData), 214);
		ProtoMsgSerializer.knownTypes.Add(typeof(OfficerTenRecruitData), 215);
		ProtoMsgSerializer.knownTypes.Add(typeof(OperationControlArmyID), 216);
		ProtoMsgSerializer.knownTypes.Add(typeof(OperationEventData), 217);
		ProtoMsgSerializer.knownTypes.Add(typeof(OperationFoceAttack), 218);
		ProtoMsgSerializer.knownTypes.Add(typeof(OperationMove), 219);
		ProtoMsgSerializer.knownTypes.Add(typeof(OperationTankPos), 220);
		ProtoMsgSerializer.knownTypes.Add(typeof(OperationTanksPos), 221);
		ProtoMsgSerializer.knownTypes.Add(typeof(Position), 222);
		ProtoMsgSerializer.knownTypes.Add(typeof(RankingData), 223);
		ProtoMsgSerializer.knownTypes.Add(typeof(RewardOption), 224);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCAchievementData), 225);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCActivitiesData), 226);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCActivityCountsData), 227);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCActivityData), 228);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCActivityRanking), 229);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCArmsDealerData), 230);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCArmyCDTimes), 231);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCArmyData), 232);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCArmyTokenCdTime), 233);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBattleEnd), 234);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBattleFieldBox), 235);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBattleStart), 236);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBtnOpen), 237);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBuildingMove), 238);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBuildingRemove), 239);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBuyArmyToken), 240);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCBuyBuildingQueue), 241);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCCalcMoney), 242);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCCDEndTime), 243);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCChitChatData), 244);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCCityWallBatchMove), 245);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCClearDailyTask), 246);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCConfigureArmyData), 247);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCEliteBoxStatus), 248);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCExpCardData), 249);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCExtraArmy), 250);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCFightingEvent), 251);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCFlushSkill), 252);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCGetActivitiesList), 253);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCGetOrderId), 254);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCGM), 255);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCGoldIslandChanged), 256);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCGrowableItemData), 257);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCHeartbeat), 258);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCIgnoreLegionApply), 259);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCIslandBeAttackedData), 260);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCIslandData), 261);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCIslandOfficerData), 262);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCLegionApply), 263);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCLegionData), 264);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCLegionHelpApply), 265);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCLegionMember), 266);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCLegionPVE), 267);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCLotteryPrize), 268);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCMapEntity), 269);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCMapIndexNotice), 270);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCMonitorData), 271);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCNoticeList), 272);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCNPCAttackData), 273);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOfficerData), 274);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOfficerEqu), 275);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOfficerRemove), 276);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOfficerTenRecruitData), 277);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOnlineRewards), 278);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOpenArmy), 279);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOperation), 280);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCOtherPlayerInfo), 281);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPayCallback), 282);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerAideData), 283);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerBase), 284);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerBuilding), 285);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerItem), 286);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerLegionProp), 287);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerMailData), 288);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerMailStatus), 289);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerResource), 290);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerSoldier), 291);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerTaskData), 292);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerVipData), 293);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCPlayerWorldMap), 294);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCProfile), 295);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRanking), 296);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRankingList), 297);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRankingPrizeData), 298);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRankingPrizeList), 299);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRecruitInfoData), 300);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRelationData), 301);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCRelationRemove), 302);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCReportCountData), 303);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCReportData), 304);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCReportReadData), 305);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCResIslandTake), 306);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCResourceLimit), 307);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSearchLegionData), 308);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSendMessage), 309);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSessionData), 310);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSevenDaysPrize), 311);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSignInData), 312);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSkillConfigData), 313);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSkillData), 314);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSkillPointCd), 315);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSkillRandomCdTime), 316);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSkillShow), 317);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSkillUpData), 318);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSocketRegister), 319);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSoldierConfigure), 320);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSpyIsland), 321);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCSweep), 322);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCTakeResShow), 323);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCTechData), 324);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCTipsData), 325);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCTodayBuyResData), 326);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCVideoData), 327);
		ProtoMsgSerializer.knownTypes.Add(typeof(SCWarBattleData), 328);
		ProtoMsgSerializer.knownTypes.Add(typeof(SupperSkillEvent), 329);
		ProtoMsgSerializer.knownTypes.Add(typeof(SweepData), 330);
		ProtoMsgSerializer.knownTypes.Add(typeof(SWValidateFightEvent), 331);
		ProtoMsgSerializer.knownTypes.Add(typeof(ValidateAdditionData), 332);
		ProtoMsgSerializer.knownTypes.Add(typeof(VFDeadData), 333);
	}
}
